//
// File generated by rootcint at Thu Apr  2 11:16:13 2015

// Do NOT change. Changes will be lost next time file is generated
//

#define R__DICTIONARY_FILENAME PWFormatDict
#include "RConfig.h" //rootcint 4834
#if !defined(R__ACCESS_IN_SYMBOL)
//Break the privacy of classes -- Disabled for the moment
#define private public
#define protected public
#endif

// Since CINT ignores the std namespace, we need to do so in this file.
namespace std {} using namespace std;
#include "PWFormatDict.h"

#include "TCollectionProxyInfo.h"
#include "TClass.h"
#include "TBuffer.h"
#include "TMemberInspector.h"
#include "TError.h"

#ifndef G__ROOT
#define G__ROOT
#endif

#include "RtypesImp.h"
#include "TIsAProxy.h"
#include "TFileMergeInfo.h"

// Direct notice to TROOT of the dictionary's loading.
namespace {
   static struct DictInit {
      DictInit() {
         ROOT::RegisterModule();
      }
   } __TheDictionaryInitializer;
}

// START OF SHADOWS

namespace ROOT {
   namespace Shadow {
   } // of namespace Shadow
} // of namespace ROOT
// END OF SHADOWS

namespace ROOT {
   void PWSegment_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_PWSegment(void *p = 0);
   static void *newArray_PWSegment(Long_t size, void *p);
   static void delete_PWSegment(void *p);
   static void deleteArray_PWSegment(void *p);
   static void destruct_PWSegment(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::PWSegment*)
   {
      ::PWSegment *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::PWSegment >(0);
      static ::ROOT::TGenericClassInfo 
         instance("PWSegment", ::PWSegment::Class_Version(), "/user/benderp/Programs/GRETINA/include/PWSegment.h", 11,
                  typeid(::PWSegment), DefineBehavior(ptr, ptr),
                  &::PWSegment::Dictionary, isa_proxy, 4,
                  sizeof(::PWSegment) );
      instance.SetNew(&new_PWSegment);
      instance.SetNewArray(&newArray_PWSegment);
      instance.SetDelete(&delete_PWSegment);
      instance.SetDeleteArray(&deleteArray_PWSegment);
      instance.SetDestructor(&destruct_PWSegment);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::PWSegment*)
   {
      return GenerateInitInstanceLocal((::PWSegment*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::PWSegment*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void PWFragment_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_PWFragment(void *p = 0);
   static void *newArray_PWFragment(Long_t size, void *p);
   static void delete_PWFragment(void *p);
   static void deleteArray_PWFragment(void *p);
   static void destruct_PWFragment(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::PWFragment*)
   {
      ::PWFragment *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::PWFragment >(0);
      static ::ROOT::TGenericClassInfo 
         instance("PWFragment", ::PWFragment::Class_Version(), "/user/benderp/Programs/GRETINA/include/PWFragment.h", 15,
                  typeid(::PWFragment), DefineBehavior(ptr, ptr),
                  &::PWFragment::Dictionary, isa_proxy, 4,
                  sizeof(::PWFragment) );
      instance.SetNew(&new_PWFragment);
      instance.SetNewArray(&newArray_PWFragment);
      instance.SetDelete(&delete_PWFragment);
      instance.SetDeleteArray(&deleteArray_PWFragment);
      instance.SetDestructor(&destruct_PWFragment);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::PWFragment*)
   {
      return GenerateInitInstanceLocal((::PWFragment*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::PWFragment*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

//______________________________________________________________________________
TClass *PWSegment::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *PWSegment::Class_Name()
{
   return "PWSegment";
}

//______________________________________________________________________________
const char *PWSegment::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::PWSegment*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int PWSegment::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::PWSegment*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void PWSegment::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::PWSegment*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *PWSegment::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::PWSegment*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *PWFragment::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *PWFragment::Class_Name()
{
   return "PWFragment";
}

//______________________________________________________________________________
const char *PWFragment::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::PWFragment*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int PWFragment::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::PWFragment*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void PWFragment::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::PWFragment*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *PWFragment::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::PWFragment*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
void PWSegment::Streamer(TBuffer &R__b)
{
   // Stream an object of class PWSegment.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(PWSegment::Class(),this);
   } else {
      R__b.WriteClassBuffer(PWSegment::Class(),this);
   }
}

//______________________________________________________________________________
void PWSegment::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class PWSegment.
      TClass *R__cl = ::PWSegment::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fPosition", &fPosition);
      R__insp.InspectMember(fPosition, "fPosition.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fACharge", &fACharge);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fBCharge", &fBCharge);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fCCharge", &fCCharge);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fPixel", &fPixel);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTime", &fTime);
      TObject::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_PWSegment(void *p) {
      return  p ? new(p) ::PWSegment : new ::PWSegment;
   }
   static void *newArray_PWSegment(Long_t nElements, void *p) {
      return p ? new(p) ::PWSegment[nElements] : new ::PWSegment[nElements];
   }
   // Wrapper around operator delete
   static void delete_PWSegment(void *p) {
      delete ((::PWSegment*)p);
   }
   static void deleteArray_PWSegment(void *p) {
      delete [] ((::PWSegment*)p);
   }
   static void destruct_PWSegment(void *p) {
      typedef ::PWSegment current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::PWSegment

//______________________________________________________________________________
void PWFragment::Streamer(TBuffer &R__b)
{
   // Stream an object of class PWFragment.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(PWFragment::Class(),this);
   } else {
      R__b.WriteClassBuffer(PWFragment::Class(),this);
   }
}

//______________________________________________________________________________
void PWFragment::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class PWFragment.
      TClass *R__cl = ::PWFragment::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTimeStamp", &fTimeStamp);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fLargestHit", &fLargestHit);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNumberHits", &fNumberHits);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fSegments", (void*)&fSegments);
      R__insp.InspectMember("vector<PWSegment>", (void*)&fSegments, "fSegments.", false);
      TObject::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_PWFragment(void *p) {
      return  p ? new(p) ::PWFragment : new ::PWFragment;
   }
   static void *newArray_PWFragment(Long_t nElements, void *p) {
      return p ? new(p) ::PWFragment[nElements] : new ::PWFragment[nElements];
   }
   // Wrapper around operator delete
   static void delete_PWFragment(void *p) {
      delete ((::PWFragment*)p);
   }
   static void deleteArray_PWFragment(void *p) {
      delete [] ((::PWFragment*)p);
   }
   static void destruct_PWFragment(void *p) {
      typedef ::PWFragment current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::PWFragment

namespace ROOT {
   void vectorlEPWFragmentgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlEPWFragmentgR_Dictionary();
   static void *new_vectorlEPWFragmentgR(void *p = 0);
   static void *newArray_vectorlEPWFragmentgR(Long_t size, void *p);
   static void delete_vectorlEPWFragmentgR(void *p);
   static void deleteArray_vectorlEPWFragmentgR(void *p);
   static void destruct_vectorlEPWFragmentgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const vector<PWFragment>*)
   {
      vector<PWFragment> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<PWFragment>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<PWFragment>", -2, "/mnt/misc/sw/x86_64/Debian/7/root/gnu/5.34.14a/cint/cint/lib/prec_stl/vector", 49,
                  typeid(vector<PWFragment>), DefineBehavior(ptr, ptr),
                  0, &vectorlEPWFragmentgR_Dictionary, isa_proxy, 4,
                  sizeof(vector<PWFragment>) );
      instance.SetNew(&new_vectorlEPWFragmentgR);
      instance.SetNewArray(&newArray_vectorlEPWFragmentgR);
      instance.SetDelete(&delete_vectorlEPWFragmentgR);
      instance.SetDeleteArray(&deleteArray_vectorlEPWFragmentgR);
      instance.SetDestructor(&destruct_vectorlEPWFragmentgR);
      instance.AdoptCollectionProxyInfo(TCollectionProxyInfo::Generate(TCollectionProxyInfo::Pushback< vector<PWFragment> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<PWFragment>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlEPWFragmentgR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const vector<PWFragment>*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   // Wrappers around operator new
   static void *new_vectorlEPWFragmentgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<PWFragment> : new vector<PWFragment>;
   }
   static void *newArray_vectorlEPWFragmentgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<PWFragment>[nElements] : new vector<PWFragment>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlEPWFragmentgR(void *p) {
      delete ((vector<PWFragment>*)p);
   }
   static void deleteArray_vectorlEPWFragmentgR(void *p) {
      delete [] ((vector<PWFragment>*)p);
   }
   static void destruct_vectorlEPWFragmentgR(void *p) {
      typedef vector<PWFragment> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class vector<PWFragment>

namespace ROOT {
   void vectorlEPWSegmentgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlEPWSegmentgR_Dictionary();
   static void *new_vectorlEPWSegmentgR(void *p = 0);
   static void *newArray_vectorlEPWSegmentgR(Long_t size, void *p);
   static void delete_vectorlEPWSegmentgR(void *p);
   static void deleteArray_vectorlEPWSegmentgR(void *p);
   static void destruct_vectorlEPWSegmentgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const vector<PWSegment>*)
   {
      vector<PWSegment> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<PWSegment>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<PWSegment>", -2, "/mnt/misc/sw/x86_64/Debian/7/root/gnu/5.34.14a/cint/cint/lib/prec_stl/vector", 49,
                  typeid(vector<PWSegment>), DefineBehavior(ptr, ptr),
                  0, &vectorlEPWSegmentgR_Dictionary, isa_proxy, 4,
                  sizeof(vector<PWSegment>) );
      instance.SetNew(&new_vectorlEPWSegmentgR);
      instance.SetNewArray(&newArray_vectorlEPWSegmentgR);
      instance.SetDelete(&delete_vectorlEPWSegmentgR);
      instance.SetDeleteArray(&deleteArray_vectorlEPWSegmentgR);
      instance.SetDestructor(&destruct_vectorlEPWSegmentgR);
      instance.AdoptCollectionProxyInfo(TCollectionProxyInfo::Generate(TCollectionProxyInfo::Pushback< vector<PWSegment> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<PWSegment>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlEPWSegmentgR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const vector<PWSegment>*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   // Wrappers around operator new
   static void *new_vectorlEPWSegmentgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<PWSegment> : new vector<PWSegment>;
   }
   static void *newArray_vectorlEPWSegmentgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<PWSegment>[nElements] : new vector<PWSegment>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlEPWSegmentgR(void *p) {
      delete ((vector<PWSegment>*)p);
   }
   static void deleteArray_vectorlEPWSegmentgR(void *p) {
      delete [] ((vector<PWSegment>*)p);
   }
   static void destruct_vectorlEPWSegmentgR(void *p) {
      typedef vector<PWSegment> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class vector<PWSegment>

/********************************************************
* PWFormatDict.cxx
* CAUTION: DON'T CHANGE THIS FILE. THIS FILE IS AUTOMATICALLY GENERATED
*          FROM HEADER FILES LISTED IN G__setup_cpp_environmentXXX().
*          CHANGE THOSE HEADER FILES AND REGENERATE THIS FILE.
********************************************************/

#ifdef G__MEMTEST
#undef malloc
#undef free
#endif

#if defined(__GNUC__) && __GNUC__ >= 4 && ((__GNUC_MINOR__ == 2 && __GNUC_PATCHLEVEL__ >= 1) || (__GNUC_MINOR__ >= 3))
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif

extern "C" void G__cpp_reset_tagtablePWFormatDict();

extern "C" void G__set_cpp_environmentPWFormatDict() {
  G__cpp_reset_tagtablePWFormatDict();
}
#include <new>
extern "C" int G__cpp_dllrevPWFormatDict() { return(30051515); }

/*********************************************************
* Member function Interface Method
*********************************************************/

/* PWSegment */
static int G__PWFormatDict_226_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   PWSegment* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new PWSegment[n];
     } else {
       p = new((void*) gvp) PWSegment[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new PWSegment;
     } else {
       p = new((void*) gvp) PWSegment;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__PWFormatDictLN_PWSegment));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PWFormatDict_226_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   PWSegment* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new PWSegment(*(PWSegment*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) PWSegment(*(PWSegment*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__PWFormatDictLN_PWSegment));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PWFormatDict_226_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   PWSegment* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new PWSegment(*(TGEBEvent::TPWHit*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) PWSegment(*(TGEBEvent::TPWHit*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__PWFormatDictLN_PWSegment));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PWFormatDict_226_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const PWSegment& obj = ((PWSegment*) G__getstructoffset())->operator=(*(PWSegment*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PWFormatDict_226_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const PWSegment& obj = ((PWSegment*) G__getstructoffset())->operator=(*(TGEBEvent::TPWHit*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PWFormatDict_226_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((PWSegment*) G__getstructoffset())->Copy(*(PWSegment*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PWFormatDict_226_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((PWSegment*) G__getstructoffset())->Copy(*(TGEBEvent::TPWHit*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PWFormatDict_226_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((PWSegment*) G__getstructoffset())->Print((Option_t*) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((PWSegment*) G__getstructoffset())->Print();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PWFormatDict_226_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((PWSegment*) G__getstructoffset())->X());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PWFormatDict_226_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((PWSegment*) G__getstructoffset())->Y());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PWFormatDict_226_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((PWSegment*) G__getstructoffset())->Z());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PWFormatDict_226_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((PWSegment*) G__getstructoffset())->Mag());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PWFormatDict_226_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((PWSegment*) G__getstructoffset())->Theta());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PWFormatDict_226_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((PWSegment*) G__getstructoffset())->Phi());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PWFormatDict_226_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) ((PWSegment*) G__getstructoffset())->Pixel());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PWFormatDict_226_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) ((PWSegment*) G__getstructoffset())->A());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PWFormatDict_226_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) ((PWSegment*) G__getstructoffset())->B());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PWFormatDict_226_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) ((PWSegment*) G__getstructoffset())->C());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PWFormatDict_226_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) ((PWSegment*) G__getstructoffset())->Time());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PWFormatDict_226_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         TVector3* pobj;
         TVector3 xobj = ((PWSegment*) G__getstructoffset())->Position();
         pobj = new TVector3(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PWFormatDict_226_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         TVector3* pobj;
         TVector3 xobj = PWSegment::GetPosition((int) G__int(libp->para[0]));
         pobj = new TVector3(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PWFormatDict_226_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) PWSegment::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PWFormatDict_226_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) PWSegment::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PWFormatDict_226_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) PWSegment::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PWFormatDict_226_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      PWSegment::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PWFormatDict_226_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((PWSegment*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PWFormatDict_226_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) PWSegment::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PWFormatDict_226_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) PWSegment::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PWFormatDict_226_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) PWSegment::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PWFormatDict_226_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) PWSegment::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef PWSegment G__TPWSegment;
static int G__PWFormatDict_226_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (PWSegment*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((PWSegment*) (soff+(sizeof(PWSegment)*i)))->~G__TPWSegment();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (PWSegment*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((PWSegment*) (soff))->~G__TPWSegment();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* PWFragment */
static int G__PWFormatDict_321_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   PWFragment* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new PWFragment[n];
     } else {
       p = new((void*) gvp) PWFragment[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new PWFragment;
     } else {
       p = new((void*) gvp) PWFragment;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__PWFormatDictLN_PWFragment));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PWFormatDict_321_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   PWFragment* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new PWFragment(*(PWFragment*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) PWFragment(*(PWFragment*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__PWFormatDictLN_PWFragment));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PWFormatDict_321_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   PWFragment* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new PWFragment(*(TGEBEvent::TPWBank*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) PWFragment(*(TGEBEvent::TPWBank*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__PWFormatDictLN_PWFragment));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PWFormatDict_321_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   PWFragment* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new PWFragment(*(TGEBEvent*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) PWFragment(*(TGEBEvent*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__PWFormatDictLN_PWFragment));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PWFormatDict_321_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const PWFragment& obj = ((PWFragment*) G__getstructoffset())->operator=(*(PWFragment*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PWFormatDict_321_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const PWFragment& obj = ((PWFragment*) G__getstructoffset())->operator=(*(TGEBEvent::TPWBank*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PWFormatDict_321_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const PWFragment& obj = ((PWFragment*) G__getstructoffset())->operator=(*(TGEBEvent*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PWFormatDict_321_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((PWFragment*) G__getstructoffset())->Copy(*(PWFragment*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PWFormatDict_321_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((PWFragment*) G__getstructoffset())->Copy(*(TGEBEvent::TPWBank*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PWFormatDict_321_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((PWFragment*) G__getstructoffset())->Copy(*(TGEBEvent*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PWFormatDict_321_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((PWFragment*) G__getstructoffset())->Print((Option_t*) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((PWFragment*) G__getstructoffset())->Print();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PWFormatDict_321_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      {
         TH2F* pobj;
         TH2F xobj = ((PWFragment*) G__getstructoffset())->MakeHitPattern((Option_t*) G__int(libp->para[0]));
         pobj = new TH2F(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
      break;
   case 0:
      {
         TH2F* pobj;
         TH2F xobj = ((PWFragment*) G__getstructoffset())->MakeHitPattern();
         pobj = new TH2F(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PWFormatDict_321_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((PWFragment*) G__getstructoffset())->DrawSimpleHitPattern((Option_t*) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((PWFragment*) G__getstructoffset())->DrawSimpleHitPattern();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PWFormatDict_321_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const Int_t& obj = ((PWFragment*) G__getstructoffset())->GetNumberOfHits();
         result7->ref = (long) (&obj);
         G__letint(result7, 'i', (long)obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PWFormatDict_321_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const PWSegment& obj = ((PWFragment*) G__getstructoffset())->GetSegment(*(unsigned int*) G__UIntref(&libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PWFormatDict_321_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const PWSegment& obj = ((PWFragment*) G__getstructoffset())->Get(*(unsigned int*) G__UIntref(&libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PWFormatDict_321_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 108, (long) ((PWFragment*) G__getstructoffset())->GetTimeStamp());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PWFormatDict_321_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const PWSegment& obj = ((PWFragment*) G__getstructoffset())->GetLargest();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PWFormatDict_321_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) ((PWFragment*) G__getstructoffset())->GetA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PWFormatDict_321_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) ((PWFragment*) G__getstructoffset())->GetB());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PWFormatDict_321_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) ((PWFragment*) G__getstructoffset())->GetC());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PWFormatDict_321_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) ((PWFragment*) G__getstructoffset())->GetLargestNumber());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PWFormatDict_321_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) PWFragment::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PWFormatDict_321_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) PWFragment::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PWFormatDict_321_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) PWFragment::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PWFormatDict_321_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      PWFragment::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PWFormatDict_321_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((PWFragment*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PWFormatDict_321_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) PWFragment::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PWFormatDict_321_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) PWFragment::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PWFormatDict_321_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) PWFragment::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PWFormatDict_321_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) PWFragment::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef PWFragment G__TPWFragment;
static int G__PWFormatDict_321_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (PWFragment*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((PWFragment*) (soff+(sizeof(PWFragment)*i)))->~G__TPWFragment();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (PWFragment*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((PWFragment*) (soff))->~G__TPWFragment();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* vector<PWSegment,allocator<PWSegment> > */
static int G__PWFormatDict_323_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<PWSegment,allocator<PWSegment> >::reference obj = ((vector<PWSegment,allocator<PWSegment> >*) G__getstructoffset())->at((vector<PWSegment,allocator<PWSegment> >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PWFormatDict_323_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<PWSegment,allocator<PWSegment> >::const_reference obj = ((const vector<PWSegment,allocator<PWSegment> >*) G__getstructoffset())->at((vector<PWSegment,allocator<PWSegment> >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PWFormatDict_323_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<PWSegment,allocator<PWSegment> >::iterator* pobj;
         vector<PWSegment,allocator<PWSegment> >::iterator xobj = ((vector<PWSegment,allocator<PWSegment> >*) G__getstructoffset())->begin();
         pobj = new vector<PWSegment,allocator<PWSegment> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PWFormatDict_323_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<PWSegment,allocator<PWSegment> >::iterator* pobj;
         vector<PWSegment,allocator<PWSegment> >::iterator xobj = ((vector<PWSegment,allocator<PWSegment> >*) G__getstructoffset())->end();
         pobj = new vector<PWSegment,allocator<PWSegment> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PWFormatDict_323_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<PWSegment,allocator<PWSegment> >::reverse_iterator* pobj;
         vector<PWSegment,allocator<PWSegment> >::reverse_iterator xobj = ((vector<PWSegment,allocator<PWSegment> >*) G__getstructoffset())->rbegin();
         pobj = new vector<PWSegment,allocator<PWSegment> >::reverse_iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PWFormatDict_323_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<PWSegment,allocator<PWSegment> >::reverse_iterator* pobj;
         vector<PWSegment,allocator<PWSegment> >::reverse_iterator xobj = ((vector<PWSegment,allocator<PWSegment> >*) G__getstructoffset())->rend();
         pobj = new vector<PWSegment,allocator<PWSegment> >::reverse_iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PWFormatDict_323_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const vector<PWSegment,allocator<PWSegment> >*) G__getstructoffset())->size());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PWFormatDict_323_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const vector<PWSegment,allocator<PWSegment> >*) G__getstructoffset())->max_size());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PWFormatDict_323_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<PWSegment,allocator<PWSegment> >*) G__getstructoffset())->resize((vector<PWSegment,allocator<PWSegment> >::size_type) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PWFormatDict_323_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<PWSegment,allocator<PWSegment> >*) G__getstructoffset())->resize((vector<PWSegment,allocator<PWSegment> >::size_type) G__int(libp->para[0]), *((PWSegment*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PWFormatDict_323_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const vector<PWSegment,allocator<PWSegment> >*) G__getstructoffset())->capacity());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PWFormatDict_323_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const vector<PWSegment,allocator<PWSegment> >*) G__getstructoffset())->empty());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PWFormatDict_323_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<PWSegment,allocator<PWSegment> >::reference obj = ((vector<PWSegment,allocator<PWSegment> >*) G__getstructoffset())->operator[]((vector<PWSegment,allocator<PWSegment> >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PWFormatDict_323_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<PWSegment,allocator<PWSegment> >::const_reference obj = ((const vector<PWSegment,allocator<PWSegment> >*) G__getstructoffset())->operator[]((vector<PWSegment,allocator<PWSegment> >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PWFormatDict_323_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<PWSegment,allocator<PWSegment> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<PWSegment,allocator<PWSegment> >[n];
     } else {
       p = new((void*) gvp) vector<PWSegment,allocator<PWSegment> >[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<PWSegment,allocator<PWSegment> >;
     } else {
       p = new((void*) gvp) vector<PWSegment,allocator<PWSegment> >;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__PWFormatDictLN_vectorlEPWSegmentcOallocatorlEPWSegmentgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PWFormatDict_323_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<PWSegment,allocator<PWSegment> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<PWSegment,allocator<PWSegment> >((vector<PWSegment,allocator<PWSegment> >::size_type) G__int(libp->para[0]), *(PWSegment*) libp->para[1].ref);
     } else {
       p = new((void*) gvp) vector<PWSegment,allocator<PWSegment> >((vector<PWSegment,allocator<PWSegment> >::size_type) G__int(libp->para[0]), *(PWSegment*) libp->para[1].ref);
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<PWSegment,allocator<PWSegment> >((vector<PWSegment,allocator<PWSegment> >::size_type) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) vector<PWSegment,allocator<PWSegment> >((vector<PWSegment,allocator<PWSegment> >::size_type) G__int(libp->para[0]));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__PWFormatDictLN_vectorlEPWSegmentcOallocatorlEPWSegmentgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PWFormatDict_323_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<PWSegment,allocator<PWSegment> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new vector<PWSegment,allocator<PWSegment> >(*(vector<PWSegment,allocator<PWSegment> >*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) vector<PWSegment,allocator<PWSegment> >(*(vector<PWSegment,allocator<PWSegment> >*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__PWFormatDictLN_vectorlEPWSegmentcOallocatorlEPWSegmentgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PWFormatDict_323_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<PWSegment,allocator<PWSegment> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new vector<PWSegment,allocator<PWSegment> >(*((vector<PWSegment,allocator<PWSegment> >::const_iterator*) G__int(libp->para[0])), *((vector<PWSegment,allocator<PWSegment> >::const_iterator*) G__int(libp->para[1])));
   } else {
     p = new((void*) gvp) vector<PWSegment,allocator<PWSegment> >(*((vector<PWSegment,allocator<PWSegment> >::const_iterator*) G__int(libp->para[0])), *((vector<PWSegment,allocator<PWSegment> >::const_iterator*) G__int(libp->para[1])));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__PWFormatDictLN_vectorlEPWSegmentcOallocatorlEPWSegmentgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PWFormatDict_323_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<PWSegment,allocator<PWSegment> >& obj = ((vector<PWSegment,allocator<PWSegment> >*) G__getstructoffset())->operator=(*(vector<PWSegment,allocator<PWSegment> >*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PWFormatDict_323_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<PWSegment,allocator<PWSegment> >*) G__getstructoffset())->reserve((vector<PWSegment,allocator<PWSegment> >::size_type) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PWFormatDict_323_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const PWSegment& obj = ((vector<PWSegment,allocator<PWSegment> >*) G__getstructoffset())->front();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PWFormatDict_323_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const PWSegment& obj = ((vector<PWSegment,allocator<PWSegment> >*) G__getstructoffset())->back();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PWFormatDict_323_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<PWSegment,allocator<PWSegment> >*) G__getstructoffset())->push_back(*(PWSegment*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PWFormatDict_323_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<PWSegment,allocator<PWSegment> >*) G__getstructoffset())->swap(*(vector<PWSegment,allocator<PWSegment> >*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PWFormatDict_323_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<PWSegment,allocator<PWSegment> >::iterator* pobj;
         vector<PWSegment,allocator<PWSegment> >::iterator xobj = ((vector<PWSegment,allocator<PWSegment> >*) G__getstructoffset())->insert(*((vector<PWSegment,allocator<PWSegment> >::iterator*) G__int(libp->para[0])), *(PWSegment*) libp->para[1].ref);
         pobj = new vector<PWSegment,allocator<PWSegment> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PWFormatDict_323_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<PWSegment,allocator<PWSegment> >*) G__getstructoffset())->insert(*((vector<PWSegment,allocator<PWSegment> >::iterator*) G__int(libp->para[0])), *((vector<PWSegment,allocator<PWSegment> >::const_iterator*) G__int(libp->para[1]))
, *((vector<PWSegment,allocator<PWSegment> >::const_iterator*) G__int(libp->para[2])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PWFormatDict_323_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<PWSegment,allocator<PWSegment> >*) G__getstructoffset())->insert(*((vector<PWSegment,allocator<PWSegment> >::iterator*) G__int(libp->para[0])), (vector<PWSegment,allocator<PWSegment> >::size_type) G__int(libp->para[1])
, *(PWSegment*) libp->para[2].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PWFormatDict_323_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<PWSegment,allocator<PWSegment> >*) G__getstructoffset())->pop_back();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PWFormatDict_323_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<PWSegment,allocator<PWSegment> >*) G__getstructoffset())->erase(*((vector<PWSegment,allocator<PWSegment> >::iterator*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PWFormatDict_323_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<PWSegment,allocator<PWSegment> >*) G__getstructoffset())->erase(*((vector<PWSegment,allocator<PWSegment> >::iterator*) G__int(libp->para[0])), *((vector<PWSegment,allocator<PWSegment> >::iterator*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PWFormatDict_323_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<PWSegment,allocator<PWSegment> >*) G__getstructoffset())->clear();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef vector<PWSegment,allocator<PWSegment> > G__TvectorlEPWSegmentcOallocatorlEPWSegmentgRsPgR;
static int G__PWFormatDict_323_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (vector<PWSegment,allocator<PWSegment> >*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((vector<PWSegment,allocator<PWSegment> >*) (soff+(sizeof(vector<PWSegment,allocator<PWSegment> >)*i)))->~G__TvectorlEPWSegmentcOallocatorlEPWSegmentgRsPgR();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (vector<PWSegment,allocator<PWSegment> >*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((vector<PWSegment,allocator<PWSegment> >*) (soff))->~G__TvectorlEPWSegmentcOallocatorlEPWSegmentgRsPgR();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* vector<PWFragment,allocator<PWFragment> > */
static int G__PWFormatDict_327_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<PWFragment,allocator<PWFragment> >::reference obj = ((vector<PWFragment,allocator<PWFragment> >*) G__getstructoffset())->at((vector<PWFragment,allocator<PWFragment> >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PWFormatDict_327_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<PWFragment,allocator<PWFragment> >::const_reference obj = ((const vector<PWFragment,allocator<PWFragment> >*) G__getstructoffset())->at((vector<PWFragment,allocator<PWFragment> >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PWFormatDict_327_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<PWFragment,allocator<PWFragment> >::iterator* pobj;
         vector<PWFragment,allocator<PWFragment> >::iterator xobj = ((vector<PWFragment,allocator<PWFragment> >*) G__getstructoffset())->begin();
         pobj = new vector<PWFragment,allocator<PWFragment> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PWFormatDict_327_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<PWFragment,allocator<PWFragment> >::iterator* pobj;
         vector<PWFragment,allocator<PWFragment> >::iterator xobj = ((vector<PWFragment,allocator<PWFragment> >*) G__getstructoffset())->end();
         pobj = new vector<PWFragment,allocator<PWFragment> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PWFormatDict_327_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<PWFragment,allocator<PWFragment> >::reverse_iterator* pobj;
         vector<PWFragment,allocator<PWFragment> >::reverse_iterator xobj = ((vector<PWFragment,allocator<PWFragment> >*) G__getstructoffset())->rbegin();
         pobj = new vector<PWFragment,allocator<PWFragment> >::reverse_iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PWFormatDict_327_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<PWFragment,allocator<PWFragment> >::reverse_iterator* pobj;
         vector<PWFragment,allocator<PWFragment> >::reverse_iterator xobj = ((vector<PWFragment,allocator<PWFragment> >*) G__getstructoffset())->rend();
         pobj = new vector<PWFragment,allocator<PWFragment> >::reverse_iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PWFormatDict_327_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const vector<PWFragment,allocator<PWFragment> >*) G__getstructoffset())->size());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PWFormatDict_327_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const vector<PWFragment,allocator<PWFragment> >*) G__getstructoffset())->max_size());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PWFormatDict_327_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<PWFragment,allocator<PWFragment> >*) G__getstructoffset())->resize((vector<PWFragment,allocator<PWFragment> >::size_type) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PWFormatDict_327_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<PWFragment,allocator<PWFragment> >*) G__getstructoffset())->resize((vector<PWFragment,allocator<PWFragment> >::size_type) G__int(libp->para[0]), *((PWFragment*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PWFormatDict_327_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const vector<PWFragment,allocator<PWFragment> >*) G__getstructoffset())->capacity());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PWFormatDict_327_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const vector<PWFragment,allocator<PWFragment> >*) G__getstructoffset())->empty());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PWFormatDict_327_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<PWFragment,allocator<PWFragment> >::reference obj = ((vector<PWFragment,allocator<PWFragment> >*) G__getstructoffset())->operator[]((vector<PWFragment,allocator<PWFragment> >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PWFormatDict_327_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<PWFragment,allocator<PWFragment> >::const_reference obj = ((const vector<PWFragment,allocator<PWFragment> >*) G__getstructoffset())->operator[]((vector<PWFragment,allocator<PWFragment> >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PWFormatDict_327_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<PWFragment,allocator<PWFragment> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<PWFragment,allocator<PWFragment> >[n];
     } else {
       p = new((void*) gvp) vector<PWFragment,allocator<PWFragment> >[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<PWFragment,allocator<PWFragment> >;
     } else {
       p = new((void*) gvp) vector<PWFragment,allocator<PWFragment> >;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__PWFormatDictLN_vectorlEPWFragmentcOallocatorlEPWFragmentgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PWFormatDict_327_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<PWFragment,allocator<PWFragment> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<PWFragment,allocator<PWFragment> >((vector<PWFragment,allocator<PWFragment> >::size_type) G__int(libp->para[0]), *(PWFragment*) libp->para[1].ref);
     } else {
       p = new((void*) gvp) vector<PWFragment,allocator<PWFragment> >((vector<PWFragment,allocator<PWFragment> >::size_type) G__int(libp->para[0]), *(PWFragment*) libp->para[1].ref);
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<PWFragment,allocator<PWFragment> >((vector<PWFragment,allocator<PWFragment> >::size_type) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) vector<PWFragment,allocator<PWFragment> >((vector<PWFragment,allocator<PWFragment> >::size_type) G__int(libp->para[0]));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__PWFormatDictLN_vectorlEPWFragmentcOallocatorlEPWFragmentgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PWFormatDict_327_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<PWFragment,allocator<PWFragment> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new vector<PWFragment,allocator<PWFragment> >(*(vector<PWFragment,allocator<PWFragment> >*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) vector<PWFragment,allocator<PWFragment> >(*(vector<PWFragment,allocator<PWFragment> >*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__PWFormatDictLN_vectorlEPWFragmentcOallocatorlEPWFragmentgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PWFormatDict_327_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<PWFragment,allocator<PWFragment> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new vector<PWFragment,allocator<PWFragment> >(*((vector<PWFragment,allocator<PWFragment> >::const_iterator*) G__int(libp->para[0])), *((vector<PWFragment,allocator<PWFragment> >::const_iterator*) G__int(libp->para[1])));
   } else {
     p = new((void*) gvp) vector<PWFragment,allocator<PWFragment> >(*((vector<PWFragment,allocator<PWFragment> >::const_iterator*) G__int(libp->para[0])), *((vector<PWFragment,allocator<PWFragment> >::const_iterator*) G__int(libp->para[1])));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__PWFormatDictLN_vectorlEPWFragmentcOallocatorlEPWFragmentgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PWFormatDict_327_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<PWFragment,allocator<PWFragment> >& obj = ((vector<PWFragment,allocator<PWFragment> >*) G__getstructoffset())->operator=(*(vector<PWFragment,allocator<PWFragment> >*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PWFormatDict_327_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<PWFragment,allocator<PWFragment> >*) G__getstructoffset())->reserve((vector<PWFragment,allocator<PWFragment> >::size_type) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PWFormatDict_327_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const PWFragment& obj = ((vector<PWFragment,allocator<PWFragment> >*) G__getstructoffset())->front();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PWFormatDict_327_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const PWFragment& obj = ((vector<PWFragment,allocator<PWFragment> >*) G__getstructoffset())->back();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PWFormatDict_327_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<PWFragment,allocator<PWFragment> >*) G__getstructoffset())->push_back(*(PWFragment*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PWFormatDict_327_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<PWFragment,allocator<PWFragment> >*) G__getstructoffset())->swap(*(vector<PWFragment,allocator<PWFragment> >*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PWFormatDict_327_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<PWFragment,allocator<PWFragment> >::iterator* pobj;
         vector<PWFragment,allocator<PWFragment> >::iterator xobj = ((vector<PWFragment,allocator<PWFragment> >*) G__getstructoffset())->insert(*((vector<PWFragment,allocator<PWFragment> >::iterator*) G__int(libp->para[0])), *(PWFragment*) libp->para[1].ref);
         pobj = new vector<PWFragment,allocator<PWFragment> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PWFormatDict_327_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<PWFragment,allocator<PWFragment> >*) G__getstructoffset())->insert(*((vector<PWFragment,allocator<PWFragment> >::iterator*) G__int(libp->para[0])), *((vector<PWFragment,allocator<PWFragment> >::const_iterator*) G__int(libp->para[1]))
, *((vector<PWFragment,allocator<PWFragment> >::const_iterator*) G__int(libp->para[2])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PWFormatDict_327_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<PWFragment,allocator<PWFragment> >*) G__getstructoffset())->insert(*((vector<PWFragment,allocator<PWFragment> >::iterator*) G__int(libp->para[0])), (vector<PWFragment,allocator<PWFragment> >::size_type) G__int(libp->para[1])
, *(PWFragment*) libp->para[2].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PWFormatDict_327_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<PWFragment,allocator<PWFragment> >*) G__getstructoffset())->pop_back();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PWFormatDict_327_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<PWFragment,allocator<PWFragment> >*) G__getstructoffset())->erase(*((vector<PWFragment,allocator<PWFragment> >::iterator*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PWFormatDict_327_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<PWFragment,allocator<PWFragment> >*) G__getstructoffset())->erase(*((vector<PWFragment,allocator<PWFragment> >::iterator*) G__int(libp->para[0])), *((vector<PWFragment,allocator<PWFragment> >::iterator*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PWFormatDict_327_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<PWFragment,allocator<PWFragment> >*) G__getstructoffset())->clear();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef vector<PWFragment,allocator<PWFragment> > G__TvectorlEPWFragmentcOallocatorlEPWFragmentgRsPgR;
static int G__PWFormatDict_327_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (vector<PWFragment,allocator<PWFragment> >*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((vector<PWFragment,allocator<PWFragment> >*) (soff+(sizeof(vector<PWFragment,allocator<PWFragment> >)*i)))->~G__TvectorlEPWFragmentcOallocatorlEPWFragmentgRsPgR();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (vector<PWFragment,allocator<PWFragment> >*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((vector<PWFragment,allocator<PWFragment> >*) (soff))->~G__TvectorlEPWFragmentcOallocatorlEPWFragmentgRsPgR();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* Setting up global function */

/*********************************************************
* Member function Stub
*********************************************************/

/* PWSegment */

/* PWFragment */

/* vector<PWSegment,allocator<PWSegment> > */

/* vector<PWFragment,allocator<PWFragment> > */

/*********************************************************
* Global function Stub
*********************************************************/

/*********************************************************
* Get size of pointer to member function
*********************************************************/
class G__Sizep2memfuncPWFormatDict {
 public:
  G__Sizep2memfuncPWFormatDict(): p(&G__Sizep2memfuncPWFormatDict::sizep2memfunc) {}
    size_t sizep2memfunc() { return(sizeof(p)); }
  private:
    size_t (G__Sizep2memfuncPWFormatDict::*p)();
};

size_t G__get_sizep2memfuncPWFormatDict()
{
  G__Sizep2memfuncPWFormatDict a;
  G__setsizep2memfunc((int)a.sizep2memfunc());
  return((size_t)a.sizep2memfunc());
}


/*********************************************************
* virtual base class offset calculation interface
*********************************************************/

   /* Setting up class inheritance */

/*********************************************************
* Inheritance information setup/
*********************************************************/
extern "C" void G__cpp_setup_inheritancePWFormatDict() {

   /* Setting up class inheritance */
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__PWFormatDictLN_PWSegment))) {
     PWSegment *G__Lderived;
     G__Lderived=(PWSegment*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__PWFormatDictLN_PWSegment),G__get_linked_tagnum(&G__PWFormatDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__PWFormatDictLN_PWFragment))) {
     PWFragment *G__Lderived;
     G__Lderived=(PWFragment*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__PWFormatDictLN_PWFragment),G__get_linked_tagnum(&G__PWFormatDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
}

/*********************************************************
* typedef information setup/
*********************************************************/
extern "C" void G__cpp_setup_typetablePWFormatDict() {

   /* Setting up typedef entry */
   G__search_typename2("Short_t",115,-1,0,-1);
   G__setnewtype(-1,"Signed Short integer 2 bytes (short)",0);
   G__search_typename2("Int_t",105,-1,0,-1);
   G__setnewtype(-1,"Signed integer 4 bytes (int)",0);
   G__search_typename2("Long_t",108,-1,0,-1);
   G__setnewtype(-1,"Signed long integer 8 bytes (long)",0);
   G__search_typename2("Double_t",100,-1,0,-1);
   G__setnewtype(-1,"Double 8 bytes",0);
   G__search_typename2("Version_t",115,-1,0,-1);
   G__setnewtype(-1,"Class version identifier (short)",0);
   G__search_typename2("Option_t",99,-1,256,-1);
   G__setnewtype(-1,"Option string (const char)",0);
   G__search_typename2("vector<ROOT::TSchemaHelper>",117,G__get_linked_tagnum(&G__PWFormatDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__PWFormatDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__PWFormatDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__PWFormatDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__PWFormatDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<TVirtualArray*>",117,G__get_linked_tagnum(&G__PWFormatDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__PWFormatDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__PWFormatDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__PWFormatDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__PWFormatDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTBase<Float_t>",117,G__get_linked_tagnum(&G__PWFormatDictLN_TMatrixTBaselEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTBase<Double_t>",117,G__get_linked_tagnum(&G__PWFormatDictLN_TMatrixTBaselEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TVectorT<Float_t>",117,G__get_linked_tagnum(&G__PWFormatDictLN_TVectorTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TVectorT<Double_t>",117,G__get_linked_tagnum(&G__PWFormatDictLN_TVectorTlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixT<Float_t>",117,G__get_linked_tagnum(&G__PWFormatDictLN_TMatrixTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTRow_const<Float_t>",117,G__get_linked_tagnum(&G__PWFormatDictLN_TMatrixTRow_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTColumn_const<Float_t>",117,G__get_linked_tagnum(&G__PWFormatDictLN_TMatrixTColumn_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTDiag_const<Float_t>",117,G__get_linked_tagnum(&G__PWFormatDictLN_TMatrixTDiag_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTFlat_const<Float_t>",117,G__get_linked_tagnum(&G__PWFormatDictLN_TMatrixTFlat_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSub_const<Float_t>",117,G__get_linked_tagnum(&G__PWFormatDictLN_TMatrixTSub_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseRow_const<Float_t>",117,G__get_linked_tagnum(&G__PWFormatDictLN_TMatrixTSparseRow_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseDiag_const<Float_t>",117,G__get_linked_tagnum(&G__PWFormatDictLN_TMatrixTSparseDiag_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTRow<Float_t>",117,G__get_linked_tagnum(&G__PWFormatDictLN_TMatrixTRowlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTColumn<Float_t>",117,G__get_linked_tagnum(&G__PWFormatDictLN_TMatrixTColumnlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTDiag<Float_t>",117,G__get_linked_tagnum(&G__PWFormatDictLN_TMatrixTDiaglEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTFlat<Float_t>",117,G__get_linked_tagnum(&G__PWFormatDictLN_TMatrixTFlatlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSub<Float_t>",117,G__get_linked_tagnum(&G__PWFormatDictLN_TMatrixTSublEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseRow<Float_t>",117,G__get_linked_tagnum(&G__PWFormatDictLN_TMatrixTSparseRowlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseDiag<Float_t>",117,G__get_linked_tagnum(&G__PWFormatDictLN_TMatrixTSparseDiaglEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TElementActionT<Float_t>",117,G__get_linked_tagnum(&G__PWFormatDictLN_TElementActionTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TElementPosActionT<Float_t>",117,G__get_linked_tagnum(&G__PWFormatDictLN_TElementPosActionTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("pair<UInt_t,Int_t>",117,G__get_linked_tagnum(&G__PWFormatDictLN_pairlEunsignedsPintcOintgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<std::pair<UInt_t,Int_t> >",117,G__get_linked_tagnum(&G__PWFormatDictLN_vectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<pair<UInt_t,Int_t> >",117,G__get_linked_tagnum(&G__PWFormatDictLN_vectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__PWFormatDictLN_reverse_iteratorlEvectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__PWFormatDictLN_vectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__PWFormatDictLN_reverse_iteratorlEvectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__PWFormatDictLN_vectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<pair<unsigned int,int> >",117,G__get_linked_tagnum(&G__PWFormatDictLN_vectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<PWSegment>",117,G__get_linked_tagnum(&G__PWFormatDictLN_vectorlEPWSegmentcOallocatorlEPWSegmentgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("value_type",117,G__get_linked_tagnum(&G__PWFormatDictLN_PWSegment),0,G__get_linked_tagnum(&G__PWFormatDictLN_vectorlEPWSegmentcOallocatorlEPWSegmentgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("pointer",85,G__get_linked_tagnum(&G__PWFormatDictLN_PWSegment),0,G__get_linked_tagnum(&G__PWFormatDictLN_vectorlEPWSegmentcOallocatorlEPWSegmentgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_pointer",85,G__get_linked_tagnum(&G__PWFormatDictLN_PWSegment),256,G__get_linked_tagnum(&G__PWFormatDictLN_vectorlEPWSegmentcOallocatorlEPWSegmentgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reference",117,G__get_linked_tagnum(&G__PWFormatDictLN_PWSegment),1,G__get_linked_tagnum(&G__PWFormatDictLN_vectorlEPWSegmentcOallocatorlEPWSegmentgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_reference",117,G__get_linked_tagnum(&G__PWFormatDictLN_PWSegment),257,G__get_linked_tagnum(&G__PWFormatDictLN_vectorlEPWSegmentcOallocatorlEPWSegmentgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("size_type",107,-1,0,G__get_linked_tagnum(&G__PWFormatDictLN_vectorlEPWSegmentcOallocatorlEPWSegmentgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("difference_type",108,-1,0,G__get_linked_tagnum(&G__PWFormatDictLN_vectorlEPWSegmentcOallocatorlEPWSegmentgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_iterator",117,G__get_linked_tagnum(&G__PWFormatDictLN_vectorlEPWSegmentcOallocatorlEPWSegmentgRsPgRcLcLiterator),256,G__get_linked_tagnum(&G__PWFormatDictLN_vectorlEPWSegmentcOallocatorlEPWSegmentgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__PWFormatDictLN_reverse_iteratorlEvectorlEPWSegmentcOallocatorlEPWSegmentgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__PWFormatDictLN_vectorlEPWSegmentcOallocatorlEPWSegmentgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_reverse_iterator",117,G__get_linked_tagnum(&G__PWFormatDictLN_reverse_iteratorlEvectorlEPWSegmentcOallocatorlEPWSegmentgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__PWFormatDictLN_vectorlEPWSegmentcOallocatorlEPWSegmentgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__PWFormatDictLN_reverse_iteratorlEvectorlEPWSegmentcOallocatorlEPWSegmentgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__PWFormatDictLN_vectorlEPWSegmentcOallocatorlEPWSegmentgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator",117,G__get_linked_tagnum(&G__PWFormatDictLN_reverse_iteratorlEvectorlEPWSegmentcOallocatorlEPWSegmentgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__PWFormatDictLN_vectorlEPWSegmentcOallocatorlEPWSegmentgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<PWFragment>",117,G__get_linked_tagnum(&G__PWFormatDictLN_vectorlEPWFragmentcOallocatorlEPWFragmentgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("value_type",117,G__get_linked_tagnum(&G__PWFormatDictLN_PWFragment),0,G__get_linked_tagnum(&G__PWFormatDictLN_vectorlEPWFragmentcOallocatorlEPWFragmentgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("pointer",85,G__get_linked_tagnum(&G__PWFormatDictLN_PWFragment),0,G__get_linked_tagnum(&G__PWFormatDictLN_vectorlEPWFragmentcOallocatorlEPWFragmentgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_pointer",85,G__get_linked_tagnum(&G__PWFormatDictLN_PWFragment),256,G__get_linked_tagnum(&G__PWFormatDictLN_vectorlEPWFragmentcOallocatorlEPWFragmentgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reference",117,G__get_linked_tagnum(&G__PWFormatDictLN_PWFragment),1,G__get_linked_tagnum(&G__PWFormatDictLN_vectorlEPWFragmentcOallocatorlEPWFragmentgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_reference",117,G__get_linked_tagnum(&G__PWFormatDictLN_PWFragment),257,G__get_linked_tagnum(&G__PWFormatDictLN_vectorlEPWFragmentcOallocatorlEPWFragmentgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("size_type",107,-1,0,G__get_linked_tagnum(&G__PWFormatDictLN_vectorlEPWFragmentcOallocatorlEPWFragmentgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("difference_type",108,-1,0,G__get_linked_tagnum(&G__PWFormatDictLN_vectorlEPWFragmentcOallocatorlEPWFragmentgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_iterator",117,G__get_linked_tagnum(&G__PWFormatDictLN_vectorlEPWFragmentcOallocatorlEPWFragmentgRsPgRcLcLiterator),256,G__get_linked_tagnum(&G__PWFormatDictLN_vectorlEPWFragmentcOallocatorlEPWFragmentgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__PWFormatDictLN_reverse_iteratorlEvectorlEPWFragmentcOallocatorlEPWFragmentgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__PWFormatDictLN_vectorlEPWFragmentcOallocatorlEPWFragmentgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_reverse_iterator",117,G__get_linked_tagnum(&G__PWFormatDictLN_reverse_iteratorlEvectorlEPWFragmentcOallocatorlEPWFragmentgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__PWFormatDictLN_vectorlEPWFragmentcOallocatorlEPWFragmentgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__PWFormatDictLN_reverse_iteratorlEvectorlEPWFragmentcOallocatorlEPWFragmentgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__PWFormatDictLN_vectorlEPWFragmentcOallocatorlEPWFragmentgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator",117,G__get_linked_tagnum(&G__PWFormatDictLN_reverse_iteratorlEvectorlEPWFragmentcOallocatorlEPWFragmentgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__PWFormatDictLN_vectorlEPWFragmentcOallocatorlEPWFragmentgRsPgR));
   G__setnewtype(-1,NULL,0);
}

/*********************************************************
* Data Member information setup/
*********************************************************/

   /* Setting up class,struct,union tag member variable */

   /* PWSegment */
static void G__setup_memvarPWSegment(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__PWFormatDictLN_PWSegment));
   { PWSegment *p; p=(PWSegment*)0x1000; if (p) { }
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__PWFormatDictLN_TVector3),-1,-1,4,"fPosition=",0,(char*)NULL);
   G__memvar_setup((void*)0,115,0,0,-1,G__defined_typename("Short_t"),-1,4,"fACharge=",0,(char*)NULL);
   G__memvar_setup((void*)0,115,0,0,-1,G__defined_typename("Short_t"),-1,4,"fBCharge=",0,(char*)NULL);
   G__memvar_setup((void*)0,115,0,0,-1,G__defined_typename("Short_t"),-1,4,"fCCharge=",0,(char*)NULL);
   G__memvar_setup((void*)0,115,0,0,-1,G__defined_typename("Short_t"),-1,4,"fPixel=",0,(char*)NULL);
   G__memvar_setup((void*)0,115,0,0,-1,G__defined_typename("Short_t"),-1,4,"fTime=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__PWFormatDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* PWFragment */
static void G__setup_memvarPWFragment(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__PWFormatDictLN_PWFragment));
   { PWFragment *p; p=(PWFragment*)0x1000; if (p) { }
   G__memvar_setup((void*)0,108,0,0,-1,G__defined_typename("Long_t"),-1,4,"fTimeStamp=",0,(char*)NULL);
   G__memvar_setup((void*)0,115,0,0,-1,G__defined_typename("Short_t"),-1,4,"fLargestHit=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fNumberHits=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__PWFormatDictLN_vectorlEPWSegmentcOallocatorlEPWSegmentgRsPgR),G__defined_typename("vector<PWSegment>"),-1,4,"fSegments=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__PWFormatDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* vector<PWSegment,allocator<PWSegment> > */
static void G__setup_memvarvectorlEPWSegmentcOallocatorlEPWSegmentgRsPgR(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__PWFormatDictLN_vectorlEPWSegmentcOallocatorlEPWSegmentgRsPgR));
   { vector<PWSegment,allocator<PWSegment> > *p; p=(vector<PWSegment,allocator<PWSegment> >*)0x1000; if (p) { }
   }
   G__tag_memvar_reset();
}


   /* vector<PWFragment,allocator<PWFragment> > */
static void G__setup_memvarvectorlEPWFragmentcOallocatorlEPWFragmentgRsPgR(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__PWFormatDictLN_vectorlEPWFragmentcOallocatorlEPWFragmentgRsPgR));
   { vector<PWFragment,allocator<PWFragment> > *p; p=(vector<PWFragment,allocator<PWFragment> >*)0x1000; if (p) { }
   }
   G__tag_memvar_reset();
}

extern "C" void G__cpp_setup_memvarPWFormatDict() {
}
/***********************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
***********************************************************/

/*********************************************************
* Member function information setup for each class
*********************************************************/
static void G__setup_memfuncPWSegment(void) {
   /* PWSegment */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__PWFormatDictLN_PWSegment));
   G__memfunc_setup("PWSegment",890,G__PWFormatDict_226_0_1, 105, G__get_linked_tagnum(&G__PWFormatDictLN_PWSegment), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("PWSegment",890,G__PWFormatDict_226_0_2, 105, G__get_linked_tagnum(&G__PWFormatDictLN_PWSegment), -1, 0, 1, 1, 1, 0, "u 'PWSegment' - 11 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("PWSegment",890,G__PWFormatDict_226_0_3, 105, G__get_linked_tagnum(&G__PWFormatDictLN_PWSegment), -1, 0, 1, 1, 1, 0, "u 'TGEBEvent::TPWHit' 'TGEBEvent::TPWHit' 11 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,G__PWFormatDict_226_0_4, 117, G__get_linked_tagnum(&G__PWFormatDictLN_PWSegment), -1, 1, 1, 1, 1, 0, "u 'PWSegment' - 11 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,G__PWFormatDict_226_0_5, 117, G__get_linked_tagnum(&G__PWFormatDictLN_PWSegment), -1, 1, 1, 1, 1, 0, "u 'TGEBEvent::TPWHit' 'TGEBEvent::TPWHit' 11 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Copy",411,G__PWFormatDict_226_0_6, 121, -1, -1, 0, 1, 1, 1, 0, "u 'PWSegment' - 11 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Copy",411,G__PWFormatDict_226_0_7, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TGEBEvent::TPWHit' 'TGEBEvent::TPWHit' 11 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Clear",487,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "C - 'Option_t' 10 '\"\"' opt", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Print",525,G__PWFormatDict_226_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "C - 'Option_t' 10 '\"\"' opt", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("X",88,G__PWFormatDict_226_0_10, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Y",89,G__PWFormatDict_226_0_11, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Z",90,G__PWFormatDict_226_0_12, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Mag",277,G__PWFormatDict_226_0_13, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Theta",502,G__PWFormatDict_226_0_14, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Phi",289,G__PWFormatDict_226_0_15, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Pixel",514,G__PWFormatDict_226_0_16, 115, -1, G__defined_typename("Short_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("A",65,G__PWFormatDict_226_0_17, 115, -1, G__defined_typename("Short_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("B",66,G__PWFormatDict_226_0_18, 115, -1, G__defined_typename("Short_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("C",67,G__PWFormatDict_226_0_19, 115, -1, G__defined_typename("Short_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Time",399,G__PWFormatDict_226_0_20, 115, -1, G__defined_typename("Short_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Position",853,G__PWFormatDict_226_0_21, 117, G__get_linked_tagnum(&G__PWFormatDictLN_TVector3), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetPosition",1141,G__PWFormatDict_226_0_22, 117, G__get_linked_tagnum(&G__PWFormatDictLN_TVector3), -1, 0, 1, 3, 1, 0, "i - - 0 - PixelId", (char*)NULL, (void*) G__func2void( (TVector3 (*)(int))(&PWSegment::GetPosition) ), 0);
   G__memfunc_setup("Class",502,G__PWFormatDict_226_0_23, 85, G__get_linked_tagnum(&G__PWFormatDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&PWSegment::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__PWFormatDict_226_0_24, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&PWSegment::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__PWFormatDict_226_0_25, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&PWSegment::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__PWFormatDict_226_0_26, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&PWSegment::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__PWFormatDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__PWFormatDict_226_0_30, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__PWFormatDict_226_0_31, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&PWSegment::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__PWFormatDict_226_0_32, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&PWSegment::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__PWFormatDict_226_0_33, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&PWSegment::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__PWFormatDict_226_0_34, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&PWSegment::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~PWSegment", 1016, G__PWFormatDict_226_0_35, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncPWFragment(void) {
   /* PWFragment */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__PWFormatDictLN_PWFragment));
   G__memfunc_setup("PWFragment",987,G__PWFormatDict_321_0_1, 105, G__get_linked_tagnum(&G__PWFormatDictLN_PWFragment), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("PWFragment",987,G__PWFormatDict_321_0_2, 105, G__get_linked_tagnum(&G__PWFormatDictLN_PWFragment), -1, 0, 1, 1, 1, 0, "u 'PWFragment' - 11 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("PWFragment",987,G__PWFormatDict_321_0_3, 105, G__get_linked_tagnum(&G__PWFormatDictLN_PWFragment), -1, 0, 1, 1, 1, 0, "u 'TGEBEvent::TPWBank' 'TGEBEvent::TPWBank' 11 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("PWFragment",987,G__PWFormatDict_321_0_4, 105, G__get_linked_tagnum(&G__PWFormatDictLN_PWFragment), -1, 0, 1, 1, 1, 0, "u 'TGEBEvent' - 11 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,G__PWFormatDict_321_0_5, 117, G__get_linked_tagnum(&G__PWFormatDictLN_PWFragment), -1, 1, 1, 1, 1, 0, "u 'PWFragment' - 11 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,G__PWFormatDict_321_0_6, 117, G__get_linked_tagnum(&G__PWFormatDictLN_PWFragment), -1, 1, 1, 1, 1, 0, "u 'TGEBEvent::TPWBank' 'TGEBEvent::TPWBank' 11 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,G__PWFormatDict_321_0_7, 117, G__get_linked_tagnum(&G__PWFormatDictLN_PWFragment), -1, 1, 1, 1, 1, 0, "u 'TGEBEvent' - 11 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Copy",411,G__PWFormatDict_321_0_8, 121, -1, -1, 0, 1, 1, 1, 0, "u 'PWFragment' - 11 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Copy",411,G__PWFormatDict_321_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TGEBEvent::TPWBank' 'TGEBEvent::TPWBank' 11 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Copy",411,G__PWFormatDict_321_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TGEBEvent' - 11 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Clear",487,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "C - 'Option_t' 10 '\"\"' opt", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Print",525,G__PWFormatDict_321_0_12, 121, -1, -1, 0, 1, 1, 1, 0, "C - 'Option_t' 10 '\"\"' opt", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Draw",398,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "C - 'Option_t' 10 '\"\"' opt", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("MakeHitPattern",1409,G__PWFormatDict_321_0_14, 117, G__get_linked_tagnum(&G__PWFormatDictLN_TH2F), -1, 0, 1, 1, 1, 0, "C - 'Option_t' 10 '\"\"' opt", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DrawSimpleHitPattern",2043,G__PWFormatDict_321_0_15, 121, -1, -1, 0, 1, 1, 1, 0, "C - 'Option_t' 10 '\"\"' opt", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetNumberOfHits",1494,G__PWFormatDict_321_0_16, 105, -1, G__defined_typename("Int_t"), 1, 0, 1, 1, 1, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetSegment",1011,G__PWFormatDict_321_0_17, 117, G__get_linked_tagnum(&G__PWFormatDictLN_PWSegment), -1, 1, 1, 1, 1, 0, "h - - 1 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Get",288,G__PWFormatDict_321_0_18, 117, G__get_linked_tagnum(&G__PWFormatDictLN_PWSegment), -1, 1, 1, 1, 1, 1, "h - - 1 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTimeStamp",1204,G__PWFormatDict_321_0_19, 108, -1, G__defined_typename("Long_t"), 0, 0, 1, 1, 1, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetLargest",1010,G__PWFormatDict_321_0_20, 117, G__get_linked_tagnum(&G__PWFormatDictLN_PWSegment), -1, 1, 0, 1, 1, 1, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetA",353,G__PWFormatDict_321_0_21, 115, -1, G__defined_typename("Short_t"), 0, 0, 1, 1, 1, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetB",354,G__PWFormatDict_321_0_22, 115, -1, G__defined_typename("Short_t"), 0, 0, 1, 1, 1, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetC",355,G__PWFormatDict_321_0_23, 115, -1, G__defined_typename("Short_t"), 0, 0, 1, 1, 1, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetLargestNumber",1627,G__PWFormatDict_321_0_24, 115, -1, G__defined_typename("Short_t"), 0, 0, 1, 1, 1, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__PWFormatDict_321_0_25, 85, G__get_linked_tagnum(&G__PWFormatDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&PWFragment::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__PWFormatDict_321_0_26, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&PWFragment::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__PWFormatDict_321_0_27, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&PWFragment::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__PWFormatDict_321_0_28, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&PWFragment::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__PWFormatDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__PWFormatDict_321_0_32, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__PWFormatDict_321_0_33, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&PWFragment::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__PWFormatDict_321_0_34, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&PWFragment::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__PWFormatDict_321_0_35, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&PWFragment::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__PWFormatDict_321_0_36, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&PWFragment::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~PWFragment", 1113, G__PWFormatDict_321_0_37, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncvectorlEPWSegmentcOallocatorlEPWSegmentgRsPgR(void) {
   /* vector<PWSegment,allocator<PWSegment> > */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__PWFormatDictLN_vectorlEPWSegmentcOallocatorlEPWSegmentgRsPgR));
   G__memfunc_setup("at",213,G__PWFormatDict_323_0_1, 117, G__get_linked_tagnum(&G__PWFormatDictLN_PWSegment), G__defined_typename("vector<PWSegment,allocator<PWSegment> >::reference"), 1, 1, 1, 1, 0, "k - 'vector<PWSegment,allocator<PWSegment> >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("at",213,G__PWFormatDict_323_0_2, 117, G__get_linked_tagnum(&G__PWFormatDictLN_PWSegment), G__defined_typename("vector<PWSegment,allocator<PWSegment> >::const_reference"), 1, 1, 1, 1, 8, "k - 'vector<PWSegment,allocator<PWSegment> >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("begin",517,G__PWFormatDict_323_0_3, 117, G__get_linked_tagnum(&G__PWFormatDictLN_vectorlEPWSegmentcOallocatorlEPWSegmentgRsPgRcLcLiterator), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("end",311,G__PWFormatDict_323_0_4, 117, G__get_linked_tagnum(&G__PWFormatDictLN_vectorlEPWSegmentcOallocatorlEPWSegmentgRsPgRcLcLiterator), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("rbegin",631,G__PWFormatDict_323_0_5, 117, G__get_linked_tagnum(&G__PWFormatDictLN_reverse_iteratorlEvectorlEPWSegmentcOallocatorlEPWSegmentgRsPgRcLcLiteratorgR), G__defined_typename("vector<PWSegment,allocator<PWSegment> >::reverse_iterator"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("rend",425,G__PWFormatDict_323_0_6, 117, G__get_linked_tagnum(&G__PWFormatDictLN_reverse_iteratorlEvectorlEPWSegmentcOallocatorlEPWSegmentgRsPgRcLcLiteratorgR), G__defined_typename("vector<PWSegment,allocator<PWSegment> >::reverse_iterator"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("size",443,G__PWFormatDict_323_0_7, 107, -1, G__defined_typename("vector<PWSegment,allocator<PWSegment> >::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("max_size",864,G__PWFormatDict_323_0_8, 107, -1, G__defined_typename("vector<PWSegment,allocator<PWSegment> >::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("resize",658,G__PWFormatDict_323_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "k - 'vector<PWSegment,allocator<PWSegment> >::size_type' 0 - sz", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("resize",658,G__PWFormatDict_323_0_10, 121, -1, -1, 0, 2, 1, 1, 0, 
"k - 'vector<PWSegment,allocator<PWSegment> >::size_type' 0 - sz u 'PWSegment' - 0 - c", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("capacity",846,G__PWFormatDict_323_0_11, 107, -1, G__defined_typename("vector<PWSegment,allocator<PWSegment> >::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("empty",559,G__PWFormatDict_323_0_12, 103, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__PWFormatDict_323_0_13, 117, G__get_linked_tagnum(&G__PWFormatDictLN_PWSegment), G__defined_typename("vector<PWSegment,allocator<PWSegment> >::reference"), 1, 1, 1, 1, 0, "k - 'vector<PWSegment,allocator<PWSegment> >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__PWFormatDict_323_0_14, 117, G__get_linked_tagnum(&G__PWFormatDictLN_PWSegment), G__defined_typename("vector<PWSegment,allocator<PWSegment> >::const_reference"), 1, 1, 1, 1, 8, "k - 'vector<PWSegment,allocator<PWSegment> >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<PWSegment,allocator<PWSegment> >",3720,G__PWFormatDict_323_0_15, 105, G__get_linked_tagnum(&G__PWFormatDictLN_vectorlEPWSegmentcOallocatorlEPWSegmentgRsPgR), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<PWSegment,allocator<PWSegment> >",3720,G__PWFormatDict_323_0_16, 105, G__get_linked_tagnum(&G__PWFormatDictLN_vectorlEPWSegmentcOallocatorlEPWSegmentgRsPgR), -1, 0, 2, 1, 1, 0, 
"k - 'vector<PWSegment,allocator<PWSegment> >::size_type' 0 - n u 'PWSegment' - 11 'PWSegment()' value", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<PWSegment,allocator<PWSegment> >",3720,G__PWFormatDict_323_0_17, 105, G__get_linked_tagnum(&G__PWFormatDictLN_vectorlEPWSegmentcOallocatorlEPWSegmentgRsPgR), -1, 0, 1, 1, 1, 0, "u 'vector<PWSegment,allocator<PWSegment> >' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<PWSegment,allocator<PWSegment> >",3720,G__PWFormatDict_323_0_18, 105, G__get_linked_tagnum(&G__PWFormatDictLN_vectorlEPWSegmentcOallocatorlEPWSegmentgRsPgR), -1, 0, 2, 1, 1, 0, 
"u 'vector<PWSegment,allocator<PWSegment> >::iterator' 'vector<PWSegment,allocator<PWSegment> >::const_iterator' 10 - first u 'vector<PWSegment,allocator<PWSegment> >::iterator' 'vector<PWSegment,allocator<PWSegment> >::const_iterator' 10 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,G__PWFormatDict_323_0_19, 117, G__get_linked_tagnum(&G__PWFormatDictLN_vectorlEPWSegmentcOallocatorlEPWSegmentgRsPgR), -1, 1, 1, 1, 1, 0, "u 'vector<PWSegment,allocator<PWSegment> >' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("reserve",764,G__PWFormatDict_323_0_20, 121, -1, -1, 0, 1, 1, 1, 0, "k - 'vector<PWSegment,allocator<PWSegment> >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("front",553,G__PWFormatDict_323_0_21, 117, G__get_linked_tagnum(&G__PWFormatDictLN_PWSegment), -1, 1, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("back",401,G__PWFormatDict_323_0_22, 117, G__get_linked_tagnum(&G__PWFormatDictLN_PWSegment), -1, 1, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("push_back",944,G__PWFormatDict_323_0_23, 121, -1, -1, 0, 1, 1, 1, 0, "u 'PWSegment' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("swap",443,G__PWFormatDict_323_0_24, 121, -1, -1, 0, 1, 1, 1, 0, "u 'vector<PWSegment,allocator<PWSegment> >' - 1 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__PWFormatDict_323_0_25, 117, G__get_linked_tagnum(&G__PWFormatDictLN_vectorlEPWSegmentcOallocatorlEPWSegmentgRsPgRcLcLiterator), -1, 0, 2, 1, 1, 0, 
"u 'vector<PWSegment,allocator<PWSegment> >::iterator' - 0 - position u 'PWSegment' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__PWFormatDict_323_0_26, 121, -1, -1, 0, 3, 1, 1, 0, 
"u 'vector<PWSegment,allocator<PWSegment> >::iterator' - 0 - position u 'vector<PWSegment,allocator<PWSegment> >::iterator' 'vector<PWSegment,allocator<PWSegment> >::const_iterator' 10 - first "
"u 'vector<PWSegment,allocator<PWSegment> >::iterator' 'vector<PWSegment,allocator<PWSegment> >::const_iterator' 10 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__PWFormatDict_323_0_27, 121, -1, -1, 0, 3, 1, 1, 0, 
"u 'vector<PWSegment,allocator<PWSegment> >::iterator' - 0 - position k - 'vector<PWSegment,allocator<PWSegment> >::size_type' 0 - n "
"u 'PWSegment' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("pop_back",831,G__PWFormatDict_323_0_28, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("erase",528,G__PWFormatDict_323_0_29, 121, -1, -1, 0, 1, 1, 1, 0, "u 'vector<PWSegment,allocator<PWSegment> >::iterator' - 0 - position", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("erase",528,G__PWFormatDict_323_0_30, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'vector<PWSegment,allocator<PWSegment> >::iterator' - 0 - first u 'vector<PWSegment,allocator<PWSegment> >::iterator' - 0 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("clear",519,G__PWFormatDict_323_0_31, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~vector<PWSegment,allocator<PWSegment> >", 3846, G__PWFormatDict_323_0_32, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncvectorlEPWFragmentcOallocatorlEPWFragmentgRsPgR(void) {
   /* vector<PWFragment,allocator<PWFragment> > */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__PWFormatDictLN_vectorlEPWFragmentcOallocatorlEPWFragmentgRsPgR));
   G__memfunc_setup("at",213,G__PWFormatDict_327_0_1, 117, G__get_linked_tagnum(&G__PWFormatDictLN_PWFragment), G__defined_typename("vector<PWFragment,allocator<PWFragment> >::reference"), 1, 1, 1, 1, 0, "k - 'vector<PWFragment,allocator<PWFragment> >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("at",213,G__PWFormatDict_327_0_2, 117, G__get_linked_tagnum(&G__PWFormatDictLN_PWFragment), G__defined_typename("vector<PWFragment,allocator<PWFragment> >::const_reference"), 1, 1, 1, 1, 8, "k - 'vector<PWFragment,allocator<PWFragment> >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("begin",517,G__PWFormatDict_327_0_3, 117, G__get_linked_tagnum(&G__PWFormatDictLN_vectorlEPWFragmentcOallocatorlEPWFragmentgRsPgRcLcLiterator), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("end",311,G__PWFormatDict_327_0_4, 117, G__get_linked_tagnum(&G__PWFormatDictLN_vectorlEPWFragmentcOallocatorlEPWFragmentgRsPgRcLcLiterator), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("rbegin",631,G__PWFormatDict_327_0_5, 117, G__get_linked_tagnum(&G__PWFormatDictLN_reverse_iteratorlEvectorlEPWFragmentcOallocatorlEPWFragmentgRsPgRcLcLiteratorgR), G__defined_typename("vector<PWFragment,allocator<PWFragment> >::reverse_iterator"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("rend",425,G__PWFormatDict_327_0_6, 117, G__get_linked_tagnum(&G__PWFormatDictLN_reverse_iteratorlEvectorlEPWFragmentcOallocatorlEPWFragmentgRsPgRcLcLiteratorgR), G__defined_typename("vector<PWFragment,allocator<PWFragment> >::reverse_iterator"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("size",443,G__PWFormatDict_327_0_7, 107, -1, G__defined_typename("vector<PWFragment,allocator<PWFragment> >::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("max_size",864,G__PWFormatDict_327_0_8, 107, -1, G__defined_typename("vector<PWFragment,allocator<PWFragment> >::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("resize",658,G__PWFormatDict_327_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "k - 'vector<PWFragment,allocator<PWFragment> >::size_type' 0 - sz", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("resize",658,G__PWFormatDict_327_0_10, 121, -1, -1, 0, 2, 1, 1, 0, 
"k - 'vector<PWFragment,allocator<PWFragment> >::size_type' 0 - sz u 'PWFragment' - 0 - c", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("capacity",846,G__PWFormatDict_327_0_11, 107, -1, G__defined_typename("vector<PWFragment,allocator<PWFragment> >::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("empty",559,G__PWFormatDict_327_0_12, 103, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__PWFormatDict_327_0_13, 117, G__get_linked_tagnum(&G__PWFormatDictLN_PWFragment), G__defined_typename("vector<PWFragment,allocator<PWFragment> >::reference"), 1, 1, 1, 1, 0, "k - 'vector<PWFragment,allocator<PWFragment> >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__PWFormatDict_327_0_14, 117, G__get_linked_tagnum(&G__PWFormatDictLN_PWFragment), G__defined_typename("vector<PWFragment,allocator<PWFragment> >::const_reference"), 1, 1, 1, 1, 8, "k - 'vector<PWFragment,allocator<PWFragment> >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<PWFragment,allocator<PWFragment> >",3914,G__PWFormatDict_327_0_15, 105, G__get_linked_tagnum(&G__PWFormatDictLN_vectorlEPWFragmentcOallocatorlEPWFragmentgRsPgR), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<PWFragment,allocator<PWFragment> >",3914,G__PWFormatDict_327_0_16, 105, G__get_linked_tagnum(&G__PWFormatDictLN_vectorlEPWFragmentcOallocatorlEPWFragmentgRsPgR), -1, 0, 2, 1, 1, 0, 
"k - 'vector<PWFragment,allocator<PWFragment> >::size_type' 0 - n u 'PWFragment' - 11 'PWFragment()' value", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<PWFragment,allocator<PWFragment> >",3914,G__PWFormatDict_327_0_17, 105, G__get_linked_tagnum(&G__PWFormatDictLN_vectorlEPWFragmentcOallocatorlEPWFragmentgRsPgR), -1, 0, 1, 1, 1, 0, "u 'vector<PWFragment,allocator<PWFragment> >' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<PWFragment,allocator<PWFragment> >",3914,G__PWFormatDict_327_0_18, 105, G__get_linked_tagnum(&G__PWFormatDictLN_vectorlEPWFragmentcOallocatorlEPWFragmentgRsPgR), -1, 0, 2, 1, 1, 0, 
"u 'vector<PWFragment,allocator<PWFragment> >::iterator' 'vector<PWFragment,allocator<PWFragment> >::const_iterator' 10 - first u 'vector<PWFragment,allocator<PWFragment> >::iterator' 'vector<PWFragment,allocator<PWFragment> >::const_iterator' 10 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,G__PWFormatDict_327_0_19, 117, G__get_linked_tagnum(&G__PWFormatDictLN_vectorlEPWFragmentcOallocatorlEPWFragmentgRsPgR), -1, 1, 1, 1, 1, 0, "u 'vector<PWFragment,allocator<PWFragment> >' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("reserve",764,G__PWFormatDict_327_0_20, 121, -1, -1, 0, 1, 1, 1, 0, "k - 'vector<PWFragment,allocator<PWFragment> >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("front",553,G__PWFormatDict_327_0_21, 117, G__get_linked_tagnum(&G__PWFormatDictLN_PWFragment), -1, 1, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("back",401,G__PWFormatDict_327_0_22, 117, G__get_linked_tagnum(&G__PWFormatDictLN_PWFragment), -1, 1, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("push_back",944,G__PWFormatDict_327_0_23, 121, -1, -1, 0, 1, 1, 1, 0, "u 'PWFragment' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("swap",443,G__PWFormatDict_327_0_24, 121, -1, -1, 0, 1, 1, 1, 0, "u 'vector<PWFragment,allocator<PWFragment> >' - 1 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__PWFormatDict_327_0_25, 117, G__get_linked_tagnum(&G__PWFormatDictLN_vectorlEPWFragmentcOallocatorlEPWFragmentgRsPgRcLcLiterator), -1, 0, 2, 1, 1, 0, 
"u 'vector<PWFragment,allocator<PWFragment> >::iterator' - 0 - position u 'PWFragment' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__PWFormatDict_327_0_26, 121, -1, -1, 0, 3, 1, 1, 0, 
"u 'vector<PWFragment,allocator<PWFragment> >::iterator' - 0 - position u 'vector<PWFragment,allocator<PWFragment> >::iterator' 'vector<PWFragment,allocator<PWFragment> >::const_iterator' 10 - first "
"u 'vector<PWFragment,allocator<PWFragment> >::iterator' 'vector<PWFragment,allocator<PWFragment> >::const_iterator' 10 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__PWFormatDict_327_0_27, 121, -1, -1, 0, 3, 1, 1, 0, 
"u 'vector<PWFragment,allocator<PWFragment> >::iterator' - 0 - position k - 'vector<PWFragment,allocator<PWFragment> >::size_type' 0 - n "
"u 'PWFragment' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("pop_back",831,G__PWFormatDict_327_0_28, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("erase",528,G__PWFormatDict_327_0_29, 121, -1, -1, 0, 1, 1, 1, 0, "u 'vector<PWFragment,allocator<PWFragment> >::iterator' - 0 - position", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("erase",528,G__PWFormatDict_327_0_30, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'vector<PWFragment,allocator<PWFragment> >::iterator' - 0 - first u 'vector<PWFragment,allocator<PWFragment> >::iterator' - 0 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("clear",519,G__PWFormatDict_327_0_31, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~vector<PWFragment,allocator<PWFragment> >", 4040, G__PWFormatDict_327_0_32, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}


/*********************************************************
* Member function information setup
*********************************************************/
extern "C" void G__cpp_setup_memfuncPWFormatDict() {
}

/*********************************************************
* Global variable information setup for each class
*********************************************************/
static void G__cpp_setup_global0() {

   /* Setting up global variables */
   G__resetplocal();

}

static void G__cpp_setup_global1() {
}

static void G__cpp_setup_global2() {
}

static void G__cpp_setup_global3() {
}

static void G__cpp_setup_global4() {

   G__resetglobalenv();
}
extern "C" void G__cpp_setup_globalPWFormatDict() {
  G__cpp_setup_global0();
  G__cpp_setup_global1();
  G__cpp_setup_global2();
  G__cpp_setup_global3();
  G__cpp_setup_global4();
}

/*********************************************************
* Global function information setup for each class
*********************************************************/
static void G__cpp_setup_func0() {
   G__lastifuncposition();

}

static void G__cpp_setup_func1() {
}

static void G__cpp_setup_func2() {
}

static void G__cpp_setup_func3() {
}

static void G__cpp_setup_func4() {
}

static void G__cpp_setup_func5() {
}

static void G__cpp_setup_func6() {
}

static void G__cpp_setup_func7() {
}

static void G__cpp_setup_func8() {
}

static void G__cpp_setup_func9() {
}

static void G__cpp_setup_func10() {
}

static void G__cpp_setup_func11() {
}

static void G__cpp_setup_func12() {
}

static void G__cpp_setup_func13() {
}

static void G__cpp_setup_func14() {
}

static void G__cpp_setup_func15() {
}

static void G__cpp_setup_func16() {

   G__resetifuncposition();
}

extern "C" void G__cpp_setup_funcPWFormatDict() {
  G__cpp_setup_func0();
  G__cpp_setup_func1();
  G__cpp_setup_func2();
  G__cpp_setup_func3();
  G__cpp_setup_func4();
  G__cpp_setup_func5();
  G__cpp_setup_func6();
  G__cpp_setup_func7();
  G__cpp_setup_func8();
  G__cpp_setup_func9();
  G__cpp_setup_func10();
  G__cpp_setup_func11();
  G__cpp_setup_func12();
  G__cpp_setup_func13();
  G__cpp_setup_func14();
  G__cpp_setup_func15();
  G__cpp_setup_func16();
}

/*********************************************************
* Class,struct,union,enum tag information setup
*********************************************************/
/* Setup class/struct taginfo */
G__linked_taginfo G__PWFormatDictLN_TClass = { "TClass" , 99 , -1 };
G__linked_taginfo G__PWFormatDictLN_TBuffer = { "TBuffer" , 99 , -1 };
G__linked_taginfo G__PWFormatDictLN_TMemberInspector = { "TMemberInspector" , 99 , -1 };
G__linked_taginfo G__PWFormatDictLN_TObject = { "TObject" , 99 , -1 };
G__linked_taginfo G__PWFormatDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR = { "vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >" , 99 , -1 };
G__linked_taginfo G__PWFormatDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR = { "reverse_iterator<vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >::iterator>" , 99 , -1 };
G__linked_taginfo G__PWFormatDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR = { "vector<TVirtualArray*,allocator<TVirtualArray*> >" , 99 , -1 };
G__linked_taginfo G__PWFormatDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<TVirtualArray*,allocator<TVirtualArray*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__PWFormatDictLN_TMatrixTBaselEfloatgR = { "TMatrixTBase<float>" , 99 , -1 };
G__linked_taginfo G__PWFormatDictLN_TMatrixTBaselEdoublegR = { "TMatrixTBase<double>" , 99 , -1 };
G__linked_taginfo G__PWFormatDictLN_TVectorTlEfloatgR = { "TVectorT<float>" , 99 , -1 };
G__linked_taginfo G__PWFormatDictLN_TVectorTlEdoublegR = { "TVectorT<double>" , 99 , -1 };
G__linked_taginfo G__PWFormatDictLN_TElementActionTlEfloatgR = { "TElementActionT<float>" , 99 , -1 };
G__linked_taginfo G__PWFormatDictLN_TElementPosActionTlEfloatgR = { "TElementPosActionT<float>" , 99 , -1 };
G__linked_taginfo G__PWFormatDictLN_TMatrixTlEfloatgR = { "TMatrixT<float>" , 99 , -1 };
G__linked_taginfo G__PWFormatDictLN_TMatrixTRow_constlEfloatgR = { "TMatrixTRow_const<float>" , 99 , -1 };
G__linked_taginfo G__PWFormatDictLN_TMatrixTRowlEfloatgR = { "TMatrixTRow<float>" , 99 , -1 };
G__linked_taginfo G__PWFormatDictLN_TMatrixTDiag_constlEfloatgR = { "TMatrixTDiag_const<float>" , 99 , -1 };
G__linked_taginfo G__PWFormatDictLN_TMatrixTColumn_constlEfloatgR = { "TMatrixTColumn_const<float>" , 99 , -1 };
G__linked_taginfo G__PWFormatDictLN_TMatrixTFlat_constlEfloatgR = { "TMatrixTFlat_const<float>" , 99 , -1 };
G__linked_taginfo G__PWFormatDictLN_TMatrixTSub_constlEfloatgR = { "TMatrixTSub_const<float>" , 99 , -1 };
G__linked_taginfo G__PWFormatDictLN_TMatrixTSparseRow_constlEfloatgR = { "TMatrixTSparseRow_const<float>" , 99 , -1 };
G__linked_taginfo G__PWFormatDictLN_TMatrixTSparseDiag_constlEfloatgR = { "TMatrixTSparseDiag_const<float>" , 99 , -1 };
G__linked_taginfo G__PWFormatDictLN_TMatrixTColumnlEfloatgR = { "TMatrixTColumn<float>" , 99 , -1 };
G__linked_taginfo G__PWFormatDictLN_TMatrixTDiaglEfloatgR = { "TMatrixTDiag<float>" , 99 , -1 };
G__linked_taginfo G__PWFormatDictLN_TMatrixTFlatlEfloatgR = { "TMatrixTFlat<float>" , 99 , -1 };
G__linked_taginfo G__PWFormatDictLN_TMatrixTSublEfloatgR = { "TMatrixTSub<float>" , 99 , -1 };
G__linked_taginfo G__PWFormatDictLN_TMatrixTSparseRowlEfloatgR = { "TMatrixTSparseRow<float>" , 99 , -1 };
G__linked_taginfo G__PWFormatDictLN_TMatrixTSparseDiaglEfloatgR = { "TMatrixTSparseDiag<float>" , 99 , -1 };
G__linked_taginfo G__PWFormatDictLN_TVector3 = { "TVector3" , 99 , -1 };
G__linked_taginfo G__PWFormatDictLN_TGEBEvent = { "TGEBEvent" , 99 , -1 };
G__linked_taginfo G__PWFormatDictLN_TGEBEventcLcLTPWHit = { "TGEBEvent::TPWHit" , 115 , -1 };
G__linked_taginfo G__PWFormatDictLN_TGEBEventcLcLTPWBank = { "TGEBEvent::TPWBank" , 115 , -1 };
G__linked_taginfo G__PWFormatDictLN_PWSegment = { "PWSegment" , 99 , -1 };
G__linked_taginfo G__PWFormatDictLN_pairlEunsignedsPintcOintgR = { "pair<unsigned int,int>" , 115 , -1 };
G__linked_taginfo G__PWFormatDictLN_vectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgR = { "vector<pair<unsigned int,int>,allocator<pair<unsigned int,int> > >" , 99 , -1 };
G__linked_taginfo G__PWFormatDictLN_reverse_iteratorlEvectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<pair<unsigned int,int>,allocator<pair<unsigned int,int> > >::iterator>" , 99 , -1 };
G__linked_taginfo G__PWFormatDictLN_TH2F = { "TH2F" , 99 , -1 };
G__linked_taginfo G__PWFormatDictLN_PWFragment = { "PWFragment" , 99 , -1 };
G__linked_taginfo G__PWFormatDictLN_vectorlEPWSegmentcOallocatorlEPWSegmentgRsPgR = { "vector<PWSegment,allocator<PWSegment> >" , 99 , -1 };
G__linked_taginfo G__PWFormatDictLN_vectorlEPWSegmentcOallocatorlEPWSegmentgRsPgRcLcLiterator = { "vector<PWSegment,allocator<PWSegment> >::iterator" , 99 , -1 };
G__linked_taginfo G__PWFormatDictLN_reverse_iteratorlEvectorlEPWSegmentcOallocatorlEPWSegmentgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<PWSegment,allocator<PWSegment> >::iterator>" , 99 , -1 };
G__linked_taginfo G__PWFormatDictLN_vectorlEPWFragmentcOallocatorlEPWFragmentgRsPgR = { "vector<PWFragment,allocator<PWFragment> >" , 99 , -1 };
G__linked_taginfo G__PWFormatDictLN_vectorlEPWFragmentcOallocatorlEPWFragmentgRsPgRcLcLiterator = { "vector<PWFragment,allocator<PWFragment> >::iterator" , 99 , -1 };
G__linked_taginfo G__PWFormatDictLN_reverse_iteratorlEvectorlEPWFragmentcOallocatorlEPWFragmentgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<PWFragment,allocator<PWFragment> >::iterator>" , 99 , -1 };

/* Reset class/struct taginfo */
extern "C" void G__cpp_reset_tagtablePWFormatDict() {
  G__PWFormatDictLN_TClass.tagnum = -1 ;
  G__PWFormatDictLN_TBuffer.tagnum = -1 ;
  G__PWFormatDictLN_TMemberInspector.tagnum = -1 ;
  G__PWFormatDictLN_TObject.tagnum = -1 ;
  G__PWFormatDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR.tagnum = -1 ;
  G__PWFormatDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__PWFormatDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR.tagnum = -1 ;
  G__PWFormatDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__PWFormatDictLN_TMatrixTBaselEfloatgR.tagnum = -1 ;
  G__PWFormatDictLN_TMatrixTBaselEdoublegR.tagnum = -1 ;
  G__PWFormatDictLN_TVectorTlEfloatgR.tagnum = -1 ;
  G__PWFormatDictLN_TVectorTlEdoublegR.tagnum = -1 ;
  G__PWFormatDictLN_TElementActionTlEfloatgR.tagnum = -1 ;
  G__PWFormatDictLN_TElementPosActionTlEfloatgR.tagnum = -1 ;
  G__PWFormatDictLN_TMatrixTlEfloatgR.tagnum = -1 ;
  G__PWFormatDictLN_TMatrixTRow_constlEfloatgR.tagnum = -1 ;
  G__PWFormatDictLN_TMatrixTRowlEfloatgR.tagnum = -1 ;
  G__PWFormatDictLN_TMatrixTDiag_constlEfloatgR.tagnum = -1 ;
  G__PWFormatDictLN_TMatrixTColumn_constlEfloatgR.tagnum = -1 ;
  G__PWFormatDictLN_TMatrixTFlat_constlEfloatgR.tagnum = -1 ;
  G__PWFormatDictLN_TMatrixTSub_constlEfloatgR.tagnum = -1 ;
  G__PWFormatDictLN_TMatrixTSparseRow_constlEfloatgR.tagnum = -1 ;
  G__PWFormatDictLN_TMatrixTSparseDiag_constlEfloatgR.tagnum = -1 ;
  G__PWFormatDictLN_TMatrixTColumnlEfloatgR.tagnum = -1 ;
  G__PWFormatDictLN_TMatrixTDiaglEfloatgR.tagnum = -1 ;
  G__PWFormatDictLN_TMatrixTFlatlEfloatgR.tagnum = -1 ;
  G__PWFormatDictLN_TMatrixTSublEfloatgR.tagnum = -1 ;
  G__PWFormatDictLN_TMatrixTSparseRowlEfloatgR.tagnum = -1 ;
  G__PWFormatDictLN_TMatrixTSparseDiaglEfloatgR.tagnum = -1 ;
  G__PWFormatDictLN_TVector3.tagnum = -1 ;
  G__PWFormatDictLN_TGEBEvent.tagnum = -1 ;
  G__PWFormatDictLN_TGEBEventcLcLTPWHit.tagnum = -1 ;
  G__PWFormatDictLN_TGEBEventcLcLTPWBank.tagnum = -1 ;
  G__PWFormatDictLN_PWSegment.tagnum = -1 ;
  G__PWFormatDictLN_pairlEunsignedsPintcOintgR.tagnum = -1 ;
  G__PWFormatDictLN_vectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgR.tagnum = -1 ;
  G__PWFormatDictLN_reverse_iteratorlEvectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__PWFormatDictLN_TH2F.tagnum = -1 ;
  G__PWFormatDictLN_PWFragment.tagnum = -1 ;
  G__PWFormatDictLN_vectorlEPWSegmentcOallocatorlEPWSegmentgRsPgR.tagnum = -1 ;
  G__PWFormatDictLN_vectorlEPWSegmentcOallocatorlEPWSegmentgRsPgRcLcLiterator.tagnum = -1 ;
  G__PWFormatDictLN_reverse_iteratorlEvectorlEPWSegmentcOallocatorlEPWSegmentgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__PWFormatDictLN_vectorlEPWFragmentcOallocatorlEPWFragmentgRsPgR.tagnum = -1 ;
  G__PWFormatDictLN_vectorlEPWFragmentcOallocatorlEPWFragmentgRsPgRcLcLiterator.tagnum = -1 ;
  G__PWFormatDictLN_reverse_iteratorlEvectorlEPWFragmentcOallocatorlEPWFragmentgRsPgRcLcLiteratorgR.tagnum = -1 ;
}


extern "C" void G__cpp_setup_tagtablePWFormatDict() {

   /* Setting up class,struct,union tag entry */
   G__get_linked_tagnum_fwd(&G__PWFormatDictLN_TClass);
   G__get_linked_tagnum_fwd(&G__PWFormatDictLN_TBuffer);
   G__get_linked_tagnum_fwd(&G__PWFormatDictLN_TMemberInspector);
   G__get_linked_tagnum_fwd(&G__PWFormatDictLN_TObject);
   G__get_linked_tagnum_fwd(&G__PWFormatDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR);
   G__get_linked_tagnum_fwd(&G__PWFormatDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__PWFormatDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR);
   G__get_linked_tagnum_fwd(&G__PWFormatDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__PWFormatDictLN_TMatrixTBaselEfloatgR);
   G__get_linked_tagnum_fwd(&G__PWFormatDictLN_TMatrixTBaselEdoublegR);
   G__get_linked_tagnum_fwd(&G__PWFormatDictLN_TVectorTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__PWFormatDictLN_TVectorTlEdoublegR);
   G__get_linked_tagnum_fwd(&G__PWFormatDictLN_TElementActionTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__PWFormatDictLN_TElementPosActionTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__PWFormatDictLN_TMatrixTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__PWFormatDictLN_TMatrixTRow_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__PWFormatDictLN_TMatrixTRowlEfloatgR);
   G__get_linked_tagnum_fwd(&G__PWFormatDictLN_TMatrixTDiag_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__PWFormatDictLN_TMatrixTColumn_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__PWFormatDictLN_TMatrixTFlat_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__PWFormatDictLN_TMatrixTSub_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__PWFormatDictLN_TMatrixTSparseRow_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__PWFormatDictLN_TMatrixTSparseDiag_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__PWFormatDictLN_TMatrixTColumnlEfloatgR);
   G__get_linked_tagnum_fwd(&G__PWFormatDictLN_TMatrixTDiaglEfloatgR);
   G__get_linked_tagnum_fwd(&G__PWFormatDictLN_TMatrixTFlatlEfloatgR);
   G__get_linked_tagnum_fwd(&G__PWFormatDictLN_TMatrixTSublEfloatgR);
   G__get_linked_tagnum_fwd(&G__PWFormatDictLN_TMatrixTSparseRowlEfloatgR);
   G__get_linked_tagnum_fwd(&G__PWFormatDictLN_TMatrixTSparseDiaglEfloatgR);
   G__get_linked_tagnum_fwd(&G__PWFormatDictLN_TVector3);
   G__get_linked_tagnum_fwd(&G__PWFormatDictLN_TGEBEvent);
   G__get_linked_tagnum_fwd(&G__PWFormatDictLN_TGEBEventcLcLTPWHit);
   G__get_linked_tagnum_fwd(&G__PWFormatDictLN_TGEBEventcLcLTPWBank);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__PWFormatDictLN_PWSegment),sizeof(PWSegment),-1,327424,(char*)NULL,G__setup_memvarPWSegment,G__setup_memfuncPWSegment);
   G__get_linked_tagnum_fwd(&G__PWFormatDictLN_pairlEunsignedsPintcOintgR);
   G__get_linked_tagnum_fwd(&G__PWFormatDictLN_vectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__PWFormatDictLN_reverse_iteratorlEvectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__PWFormatDictLN_TH2F);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__PWFormatDictLN_PWFragment),sizeof(PWFragment),-1,327424,(char*)NULL,G__setup_memvarPWFragment,G__setup_memfuncPWFragment);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__PWFormatDictLN_vectorlEPWSegmentcOallocatorlEPWSegmentgRsPgR),sizeof(vector<PWSegment,allocator<PWSegment> >),-1,298752,(char*)NULL,G__setup_memvarvectorlEPWSegmentcOallocatorlEPWSegmentgRsPgR,G__setup_memfuncvectorlEPWSegmentcOallocatorlEPWSegmentgRsPgR);
   G__get_linked_tagnum_fwd(&G__PWFormatDictLN_vectorlEPWSegmentcOallocatorlEPWSegmentgRsPgRcLcLiterator);
   G__get_linked_tagnum_fwd(&G__PWFormatDictLN_reverse_iteratorlEvectorlEPWSegmentcOallocatorlEPWSegmentgRsPgRcLcLiteratorgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__PWFormatDictLN_vectorlEPWFragmentcOallocatorlEPWFragmentgRsPgR),sizeof(vector<PWFragment,allocator<PWFragment> >),-1,298752,(char*)NULL,G__setup_memvarvectorlEPWFragmentcOallocatorlEPWFragmentgRsPgR,G__setup_memfuncvectorlEPWFragmentcOallocatorlEPWFragmentgRsPgR);
   G__get_linked_tagnum_fwd(&G__PWFormatDictLN_vectorlEPWFragmentcOallocatorlEPWFragmentgRsPgRcLcLiterator);
   G__get_linked_tagnum_fwd(&G__PWFormatDictLN_reverse_iteratorlEvectorlEPWFragmentcOallocatorlEPWFragmentgRsPgRcLcLiteratorgR);
}
extern "C" void G__cpp_setupPWFormatDict(void) {
  G__check_setup_version(30051515,"G__cpp_setupPWFormatDict()");
  G__set_cpp_environmentPWFormatDict();
  G__cpp_setup_tagtablePWFormatDict();

  G__cpp_setup_inheritancePWFormatDict();

  G__cpp_setup_typetablePWFormatDict();

  G__cpp_setup_memvarPWFormatDict();

  G__cpp_setup_memfuncPWFormatDict();
  G__cpp_setup_globalPWFormatDict();
  G__cpp_setup_funcPWFormatDict();

   if(0==G__getsizep2memfunc()) G__get_sizep2memfuncPWFormatDict();
  return;
}
class G__cpp_setup_initPWFormatDict {
  public:
    G__cpp_setup_initPWFormatDict() { G__add_setup_func("PWFormatDict",(G__incsetup)(&G__cpp_setupPWFormatDict)); G__call_setup_funcs(); }
   ~G__cpp_setup_initPWFormatDict() { G__remove_setup_func("PWFormatDict"); }
};
G__cpp_setup_initPWFormatDict G__cpp_setup_initializerPWFormatDict;


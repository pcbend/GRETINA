//
// File generated by rootcint at Sun Mar 22 15:53:20 2015

// Do NOT change. Changes will be lost next time file is generated
//

#define R__DICTIONARY_FILENAME TPhosWallDict
#include "RConfig.h" //rootcint 4834
#if !defined(R__ACCESS_IN_SYMBOL)
//Break the privacy of classes -- Disabled for the moment
#define private public
#define protected public
#endif

// Since CINT ignores the std namespace, we need to do so in this file.
namespace std {} using namespace std;
#include "TPhosWallDict.h"

#include "TCollectionProxyInfo.h"
#include "TClass.h"
#include "TBuffer.h"
#include "TMemberInspector.h"
#include "TError.h"

#ifndef G__ROOT
#define G__ROOT
#endif

#include "RtypesImp.h"
#include "TIsAProxy.h"
#include "TFileMergeInfo.h"

// Direct notice to TROOT of the dictionary's loading.
namespace {
   static struct DictInit {
      DictInit() {
         ROOT::RegisterModule();
      }
   } __TheDictionaryInitializer;
}

// START OF SHADOWS

namespace ROOT {
   namespace Shadow {
   } // of namespace Shadow
} // of namespace ROOT
// END OF SHADOWS

namespace ROOT {
   void TPhosWall_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_TPhosWall(void *p = 0);
   static void *newArray_TPhosWall(Long_t size, void *p);
   static void delete_TPhosWall(void *p);
   static void deleteArray_TPhosWall(void *p);
   static void destruct_TPhosWall(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::TPhosWall*)
   {
      ::TPhosWall *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TPhosWall >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TPhosWall", ::TPhosWall::Class_Version(), "/user/benderp/Programs/GRETINA/include/TPhosWall.h", 9,
                  typeid(::TPhosWall), DefineBehavior(ptr, ptr),
                  &::TPhosWall::Dictionary, isa_proxy, 4,
                  sizeof(::TPhosWall) );
      instance.SetNew(&new_TPhosWall);
      instance.SetNewArray(&newArray_TPhosWall);
      instance.SetDelete(&delete_TPhosWall);
      instance.SetDeleteArray(&deleteArray_TPhosWall);
      instance.SetDestructor(&destruct_TPhosWall);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::TPhosWall*)
   {
      return GenerateInitInstanceLocal((::TPhosWall*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TPhosWall*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

//______________________________________________________________________________
TClass *TPhosWall::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TPhosWall::Class_Name()
{
   return "TPhosWall";
}

//______________________________________________________________________________
const char *TPhosWall::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TPhosWall*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TPhosWall::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TPhosWall*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TPhosWall::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TPhosWall*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TPhosWall::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TPhosWall*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
void TPhosWall::Streamer(TBuffer &R__b)
{
   // Stream an object of class TPhosWall.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(TPhosWall::Class(),this);
   } else {
      R__b.WriteClassBuffer(TPhosWall::Class(),this);
   }
}

//______________________________________________________________________________
void TPhosWall::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class TPhosWall.
      TClass *R__cl = ::TPhosWall::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTimeStamp", &fTimeStamp);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fLargestHit", &fLargestHit);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fPosition", (void*)&fPosition);
      R__insp.InspectMember("vector<TVector3>", (void*)&fPosition, "fPosition.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fACharge", (void*)&fACharge);
      R__insp.InspectMember("vector<Short_t>", (void*)&fACharge, "fACharge.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fBCharge", (void*)&fBCharge);
      R__insp.InspectMember("vector<Short_t>", (void*)&fBCharge, "fBCharge.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fCCharge", (void*)&fCCharge);
      R__insp.InspectMember("vector<Short_t>", (void*)&fCCharge, "fCCharge.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fPixel", (void*)&fPixel);
      R__insp.InspectMember("vector<Short_t>", (void*)&fPixel, "fPixel.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTime", (void*)&fTime);
      R__insp.InspectMember("vector<Short_t>", (void*)&fTime, "fTime.", false);
      TObject::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_TPhosWall(void *p) {
      return  p ? new(p) ::TPhosWall : new ::TPhosWall;
   }
   static void *newArray_TPhosWall(Long_t nElements, void *p) {
      return p ? new(p) ::TPhosWall[nElements] : new ::TPhosWall[nElements];
   }
   // Wrapper around operator delete
   static void delete_TPhosWall(void *p) {
      delete ((::TPhosWall*)p);
   }
   static void deleteArray_TPhosWall(void *p) {
      delete [] ((::TPhosWall*)p);
   }
   static void destruct_TPhosWall(void *p) {
      typedef ::TPhosWall current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TPhosWall

namespace ROOT {
   void vectorlEPWFragmentgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlEPWFragmentgR_Dictionary();
   static void *new_vectorlEPWFragmentgR(void *p = 0);
   static void *newArray_vectorlEPWFragmentgR(Long_t size, void *p);
   static void delete_vectorlEPWFragmentgR(void *p);
   static void deleteArray_vectorlEPWFragmentgR(void *p);
   static void destruct_vectorlEPWFragmentgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const vector<PWFragment>*)
   {
      vector<PWFragment> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<PWFragment>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<PWFragment>", -2, "/mnt/misc/sw/x86_64/Debian/7/root/gnu/5.34.14a/cint/cint/lib/prec_stl/vector", 49,
                  typeid(vector<PWFragment>), DefineBehavior(ptr, ptr),
                  0, &vectorlEPWFragmentgR_Dictionary, isa_proxy, 4,
                  sizeof(vector<PWFragment>) );
      instance.SetNew(&new_vectorlEPWFragmentgR);
      instance.SetNewArray(&newArray_vectorlEPWFragmentgR);
      instance.SetDelete(&delete_vectorlEPWFragmentgR);
      instance.SetDeleteArray(&deleteArray_vectorlEPWFragmentgR);
      instance.SetDestructor(&destruct_vectorlEPWFragmentgR);
      instance.AdoptCollectionProxyInfo(TCollectionProxyInfo::Generate(TCollectionProxyInfo::Pushback< vector<PWFragment> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<PWFragment>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlEPWFragmentgR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const vector<PWFragment>*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   // Wrappers around operator new
   static void *new_vectorlEPWFragmentgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<PWFragment> : new vector<PWFragment>;
   }
   static void *newArray_vectorlEPWFragmentgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<PWFragment>[nElements] : new vector<PWFragment>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlEPWFragmentgR(void *p) {
      delete ((vector<PWFragment>*)p);
   }
   static void deleteArray_vectorlEPWFragmentgR(void *p) {
      delete [] ((vector<PWFragment>*)p);
   }
   static void destruct_vectorlEPWFragmentgR(void *p) {
      typedef vector<PWFragment> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class vector<PWFragment>

namespace ROOT {
   void vectorlETVector3gR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlETVector3gR_Dictionary();
   static void *new_vectorlETVector3gR(void *p = 0);
   static void *newArray_vectorlETVector3gR(Long_t size, void *p);
   static void delete_vectorlETVector3gR(void *p);
   static void deleteArray_vectorlETVector3gR(void *p);
   static void destruct_vectorlETVector3gR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const vector<TVector3>*)
   {
      vector<TVector3> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<TVector3>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<TVector3>", -2, "/mnt/misc/sw/x86_64/Debian/7/root/gnu/5.34.14a/cint/cint/lib/prec_stl/vector", 49,
                  typeid(vector<TVector3>), DefineBehavior(ptr, ptr),
                  0, &vectorlETVector3gR_Dictionary, isa_proxy, 0,
                  sizeof(vector<TVector3>) );
      instance.SetNew(&new_vectorlETVector3gR);
      instance.SetNewArray(&newArray_vectorlETVector3gR);
      instance.SetDelete(&delete_vectorlETVector3gR);
      instance.SetDeleteArray(&deleteArray_vectorlETVector3gR);
      instance.SetDestructor(&destruct_vectorlETVector3gR);
      instance.AdoptCollectionProxyInfo(TCollectionProxyInfo::Generate(TCollectionProxyInfo::Pushback< vector<TVector3> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<TVector3>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlETVector3gR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const vector<TVector3>*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   // Wrappers around operator new
   static void *new_vectorlETVector3gR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<TVector3> : new vector<TVector3>;
   }
   static void *newArray_vectorlETVector3gR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<TVector3>[nElements] : new vector<TVector3>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlETVector3gR(void *p) {
      delete ((vector<TVector3>*)p);
   }
   static void deleteArray_vectorlETVector3gR(void *p) {
      delete [] ((vector<TVector3>*)p);
   }
   static void destruct_vectorlETVector3gR(void *p) {
      typedef vector<TVector3> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class vector<TVector3>

namespace ROOT {
   void vectorlEshortgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlEshortgR_Dictionary();
   static void *new_vectorlEshortgR(void *p = 0);
   static void *newArray_vectorlEshortgR(Long_t size, void *p);
   static void delete_vectorlEshortgR(void *p);
   static void deleteArray_vectorlEshortgR(void *p);
   static void destruct_vectorlEshortgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const vector<short>*)
   {
      vector<short> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<short>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<short>", -2, "vector.dll", 0,
                  typeid(vector<short>), DefineBehavior(ptr, ptr),
                  0, &vectorlEshortgR_Dictionary, isa_proxy, 0,
                  sizeof(vector<short>) );
      instance.SetNew(&new_vectorlEshortgR);
      instance.SetNewArray(&newArray_vectorlEshortgR);
      instance.SetDelete(&delete_vectorlEshortgR);
      instance.SetDeleteArray(&deleteArray_vectorlEshortgR);
      instance.SetDestructor(&destruct_vectorlEshortgR);
      instance.AdoptCollectionProxyInfo(TCollectionProxyInfo::Generate(TCollectionProxyInfo::Pushback< vector<short> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<short>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlEshortgR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const vector<short>*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   // Wrappers around operator new
   static void *new_vectorlEshortgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<short> : new vector<short>;
   }
   static void *newArray_vectorlEshortgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<short>[nElements] : new vector<short>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlEshortgR(void *p) {
      delete ((vector<short>*)p);
   }
   static void deleteArray_vectorlEshortgR(void *p) {
      delete [] ((vector<short>*)p);
   }
   static void destruct_vectorlEshortgR(void *p) {
      typedef vector<short> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class vector<short>

/********************************************************
* TPhosWallDict.cxx
* CAUTION: DON'T CHANGE THIS FILE. THIS FILE IS AUTOMATICALLY GENERATED
*          FROM HEADER FILES LISTED IN G__setup_cpp_environmentXXX().
*          CHANGE THOSE HEADER FILES AND REGENERATE THIS FILE.
********************************************************/

#ifdef G__MEMTEST
#undef malloc
#undef free
#endif

#if defined(__GNUC__) && __GNUC__ >= 4 && ((__GNUC_MINOR__ == 2 && __GNUC_PATCHLEVEL__ >= 1) || (__GNUC_MINOR__ >= 3))
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif

extern "C" void G__cpp_reset_tagtableTPhosWallDict();

extern "C" void G__set_cpp_environmentTPhosWallDict() {
  G__cpp_reset_tagtableTPhosWallDict();
}
#include <new>
extern "C" int G__cpp_dllrevTPhosWallDict() { return(30051515); }

/*********************************************************
* Member function Interface Method
*********************************************************/

/* TPhosWall */
static int G__TPhosWallDict_326_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TPhosWall* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TPhosWall[n];
     } else {
       p = new((void*) gvp) TPhosWall[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TPhosWall;
     } else {
       p = new((void*) gvp) TPhosWall;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__TPhosWallDictLN_TPhosWall));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TPhosWallDict_326_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TPhosWall*) G__getstructoffset())->AddPWHit(*(PWFragment*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TPhosWallDict_326_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TPhosWall*) G__getstructoffset())->Size());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TPhosWallDict_326_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) ((TPhosWall*) G__getstructoffset())->GetA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TPhosWallDict_326_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) ((TPhosWall*) G__getstructoffset())->GetB());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TPhosWallDict_326_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) ((TPhosWall*) G__getstructoffset())->GetC());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TPhosWallDict_326_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) ((TPhosWall*) G__getstructoffset())->GetTime());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TPhosWallDict_326_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) ((TPhosWall*) G__getstructoffset())->GetLargestNumber());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TPhosWallDict_326_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((TPhosWall*) G__getstructoffset())->Print((Option_t*) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((TPhosWall*) G__getstructoffset())->Print();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TPhosWallDict_326_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TPhosWall::FindWallPosition(*(int*) G__Intref(&libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TPhosWallDict_326_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TPhosWall::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TPhosWallDict_326_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TPhosWall::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TPhosWallDict_326_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TPhosWall::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TPhosWallDict_326_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TPhosWall::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TPhosWallDict_326_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TPhosWall*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TPhosWallDict_326_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TPhosWall::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TPhosWallDict_326_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TPhosWall::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TPhosWallDict_326_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TPhosWall::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TPhosWallDict_326_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TPhosWall::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__TPhosWallDict_326_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   TPhosWall* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new TPhosWall(*(TPhosWall*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__TPhosWallDictLN_TPhosWall));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TPhosWall G__TTPhosWall;
static int G__TPhosWallDict_326_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TPhosWall*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TPhosWall*) (soff+(sizeof(TPhosWall)*i)))->~G__TTPhosWall();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TPhosWall*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TPhosWall*) (soff))->~G__TTPhosWall();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__TPhosWallDict_326_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TPhosWall* dest = (TPhosWall*) G__getstructoffset();
   *dest = *(TPhosWall*) libp->para[0].ref;
   const TPhosWall& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* vector<PWFragment,allocator<PWFragment> > */
static int G__TPhosWallDict_332_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<PWFragment,allocator<PWFragment> >::reference obj = ((vector<PWFragment,allocator<PWFragment> >*) G__getstructoffset())->at((vector<PWFragment,allocator<PWFragment> >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TPhosWallDict_332_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<PWFragment,allocator<PWFragment> >::const_reference obj = ((const vector<PWFragment,allocator<PWFragment> >*) G__getstructoffset())->at((vector<PWFragment,allocator<PWFragment> >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TPhosWallDict_332_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<PWFragment,allocator<PWFragment> >::iterator* pobj;
         vector<PWFragment,allocator<PWFragment> >::iterator xobj = ((vector<PWFragment,allocator<PWFragment> >*) G__getstructoffset())->begin();
         pobj = new vector<PWFragment,allocator<PWFragment> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TPhosWallDict_332_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<PWFragment,allocator<PWFragment> >::iterator* pobj;
         vector<PWFragment,allocator<PWFragment> >::iterator xobj = ((vector<PWFragment,allocator<PWFragment> >*) G__getstructoffset())->end();
         pobj = new vector<PWFragment,allocator<PWFragment> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TPhosWallDict_332_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<PWFragment,allocator<PWFragment> >::reverse_iterator* pobj;
         vector<PWFragment,allocator<PWFragment> >::reverse_iterator xobj = ((vector<PWFragment,allocator<PWFragment> >*) G__getstructoffset())->rbegin();
         pobj = new vector<PWFragment,allocator<PWFragment> >::reverse_iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TPhosWallDict_332_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<PWFragment,allocator<PWFragment> >::reverse_iterator* pobj;
         vector<PWFragment,allocator<PWFragment> >::reverse_iterator xobj = ((vector<PWFragment,allocator<PWFragment> >*) G__getstructoffset())->rend();
         pobj = new vector<PWFragment,allocator<PWFragment> >::reverse_iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TPhosWallDict_332_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const vector<PWFragment,allocator<PWFragment> >*) G__getstructoffset())->size());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TPhosWallDict_332_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const vector<PWFragment,allocator<PWFragment> >*) G__getstructoffset())->max_size());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TPhosWallDict_332_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<PWFragment,allocator<PWFragment> >*) G__getstructoffset())->resize((vector<PWFragment,allocator<PWFragment> >::size_type) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TPhosWallDict_332_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<PWFragment,allocator<PWFragment> >*) G__getstructoffset())->resize((vector<PWFragment,allocator<PWFragment> >::size_type) G__int(libp->para[0]), *((PWFragment*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TPhosWallDict_332_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const vector<PWFragment,allocator<PWFragment> >*) G__getstructoffset())->capacity());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TPhosWallDict_332_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const vector<PWFragment,allocator<PWFragment> >*) G__getstructoffset())->empty());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TPhosWallDict_332_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<PWFragment,allocator<PWFragment> >::reference obj = ((vector<PWFragment,allocator<PWFragment> >*) G__getstructoffset())->operator[]((vector<PWFragment,allocator<PWFragment> >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TPhosWallDict_332_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<PWFragment,allocator<PWFragment> >::const_reference obj = ((const vector<PWFragment,allocator<PWFragment> >*) G__getstructoffset())->operator[]((vector<PWFragment,allocator<PWFragment> >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TPhosWallDict_332_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<PWFragment,allocator<PWFragment> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<PWFragment,allocator<PWFragment> >[n];
     } else {
       p = new((void*) gvp) vector<PWFragment,allocator<PWFragment> >[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<PWFragment,allocator<PWFragment> >;
     } else {
       p = new((void*) gvp) vector<PWFragment,allocator<PWFragment> >;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__TPhosWallDictLN_vectorlEPWFragmentcOallocatorlEPWFragmentgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TPhosWallDict_332_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<PWFragment,allocator<PWFragment> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<PWFragment,allocator<PWFragment> >((vector<PWFragment,allocator<PWFragment> >::size_type) G__int(libp->para[0]), *(PWFragment*) libp->para[1].ref);
     } else {
       p = new((void*) gvp) vector<PWFragment,allocator<PWFragment> >((vector<PWFragment,allocator<PWFragment> >::size_type) G__int(libp->para[0]), *(PWFragment*) libp->para[1].ref);
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<PWFragment,allocator<PWFragment> >((vector<PWFragment,allocator<PWFragment> >::size_type) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) vector<PWFragment,allocator<PWFragment> >((vector<PWFragment,allocator<PWFragment> >::size_type) G__int(libp->para[0]));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__TPhosWallDictLN_vectorlEPWFragmentcOallocatorlEPWFragmentgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TPhosWallDict_332_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<PWFragment,allocator<PWFragment> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new vector<PWFragment,allocator<PWFragment> >(*(vector<PWFragment,allocator<PWFragment> >*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) vector<PWFragment,allocator<PWFragment> >(*(vector<PWFragment,allocator<PWFragment> >*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__TPhosWallDictLN_vectorlEPWFragmentcOallocatorlEPWFragmentgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TPhosWallDict_332_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<PWFragment,allocator<PWFragment> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new vector<PWFragment,allocator<PWFragment> >(*((vector<PWFragment,allocator<PWFragment> >::const_iterator*) G__int(libp->para[0])), *((vector<PWFragment,allocator<PWFragment> >::const_iterator*) G__int(libp->para[1])));
   } else {
     p = new((void*) gvp) vector<PWFragment,allocator<PWFragment> >(*((vector<PWFragment,allocator<PWFragment> >::const_iterator*) G__int(libp->para[0])), *((vector<PWFragment,allocator<PWFragment> >::const_iterator*) G__int(libp->para[1])));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__TPhosWallDictLN_vectorlEPWFragmentcOallocatorlEPWFragmentgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TPhosWallDict_332_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<PWFragment,allocator<PWFragment> >& obj = ((vector<PWFragment,allocator<PWFragment> >*) G__getstructoffset())->operator=(*(vector<PWFragment,allocator<PWFragment> >*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TPhosWallDict_332_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<PWFragment,allocator<PWFragment> >*) G__getstructoffset())->reserve((vector<PWFragment,allocator<PWFragment> >::size_type) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TPhosWallDict_332_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const PWFragment& obj = ((vector<PWFragment,allocator<PWFragment> >*) G__getstructoffset())->front();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TPhosWallDict_332_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const PWFragment& obj = ((vector<PWFragment,allocator<PWFragment> >*) G__getstructoffset())->back();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TPhosWallDict_332_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<PWFragment,allocator<PWFragment> >*) G__getstructoffset())->push_back(*(PWFragment*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TPhosWallDict_332_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<PWFragment,allocator<PWFragment> >*) G__getstructoffset())->swap(*(vector<PWFragment,allocator<PWFragment> >*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TPhosWallDict_332_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<PWFragment,allocator<PWFragment> >::iterator* pobj;
         vector<PWFragment,allocator<PWFragment> >::iterator xobj = ((vector<PWFragment,allocator<PWFragment> >*) G__getstructoffset())->insert(*((vector<PWFragment,allocator<PWFragment> >::iterator*) G__int(libp->para[0])), *(PWFragment*) libp->para[1].ref);
         pobj = new vector<PWFragment,allocator<PWFragment> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TPhosWallDict_332_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<PWFragment,allocator<PWFragment> >*) G__getstructoffset())->insert(*((vector<PWFragment,allocator<PWFragment> >::iterator*) G__int(libp->para[0])), *((vector<PWFragment,allocator<PWFragment> >::const_iterator*) G__int(libp->para[1]))
, *((vector<PWFragment,allocator<PWFragment> >::const_iterator*) G__int(libp->para[2])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TPhosWallDict_332_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<PWFragment,allocator<PWFragment> >*) G__getstructoffset())->insert(*((vector<PWFragment,allocator<PWFragment> >::iterator*) G__int(libp->para[0])), (vector<PWFragment,allocator<PWFragment> >::size_type) G__int(libp->para[1])
, *(PWFragment*) libp->para[2].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TPhosWallDict_332_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<PWFragment,allocator<PWFragment> >*) G__getstructoffset())->pop_back();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TPhosWallDict_332_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<PWFragment,allocator<PWFragment> >*) G__getstructoffset())->erase(*((vector<PWFragment,allocator<PWFragment> >::iterator*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TPhosWallDict_332_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<PWFragment,allocator<PWFragment> >*) G__getstructoffset())->erase(*((vector<PWFragment,allocator<PWFragment> >::iterator*) G__int(libp->para[0])), *((vector<PWFragment,allocator<PWFragment> >::iterator*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TPhosWallDict_332_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<PWFragment,allocator<PWFragment> >*) G__getstructoffset())->clear();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef vector<PWFragment,allocator<PWFragment> > G__TvectorlEPWFragmentcOallocatorlEPWFragmentgRsPgR;
static int G__TPhosWallDict_332_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (vector<PWFragment,allocator<PWFragment> >*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((vector<PWFragment,allocator<PWFragment> >*) (soff+(sizeof(vector<PWFragment,allocator<PWFragment> >)*i)))->~G__TvectorlEPWFragmentcOallocatorlEPWFragmentgRsPgR();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (vector<PWFragment,allocator<PWFragment> >*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((vector<PWFragment,allocator<PWFragment> >*) (soff))->~G__TvectorlEPWFragmentcOallocatorlEPWFragmentgRsPgR();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* Setting up global function */

/*********************************************************
* Member function Stub
*********************************************************/

/* TPhosWall */

/* vector<PWFragment,allocator<PWFragment> > */

/*********************************************************
* Global function Stub
*********************************************************/

/*********************************************************
* Get size of pointer to member function
*********************************************************/
class G__Sizep2memfuncTPhosWallDict {
 public:
  G__Sizep2memfuncTPhosWallDict(): p(&G__Sizep2memfuncTPhosWallDict::sizep2memfunc) {}
    size_t sizep2memfunc() { return(sizeof(p)); }
  private:
    size_t (G__Sizep2memfuncTPhosWallDict::*p)();
};

size_t G__get_sizep2memfuncTPhosWallDict()
{
  G__Sizep2memfuncTPhosWallDict a;
  G__setsizep2memfunc((int)a.sizep2memfunc());
  return((size_t)a.sizep2memfunc());
}


/*********************************************************
* virtual base class offset calculation interface
*********************************************************/

   /* Setting up class inheritance */

/*********************************************************
* Inheritance information setup/
*********************************************************/
extern "C" void G__cpp_setup_inheritanceTPhosWallDict() {

   /* Setting up class inheritance */
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__TPhosWallDictLN_TPhosWall))) {
     TPhosWall *G__Lderived;
     G__Lderived=(TPhosWall*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__TPhosWallDictLN_TPhosWall),G__get_linked_tagnum(&G__TPhosWallDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
}

/*********************************************************
* typedef information setup/
*********************************************************/
extern "C" void G__cpp_setup_typetableTPhosWallDict() {

   /* Setting up typedef entry */
   G__search_typename2("Short_t",115,-1,0,-1);
   G__setnewtype(-1,"Signed Short integer 2 bytes (short)",0);
   G__search_typename2("Version_t",115,-1,0,-1);
   G__setnewtype(-1,"Class version identifier (short)",0);
   G__search_typename2("Option_t",99,-1,256,-1);
   G__setnewtype(-1,"Option string (const char)",0);
   G__search_typename2("vector<ROOT::TSchemaHelper>",117,G__get_linked_tagnum(&G__TPhosWallDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__TPhosWallDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__TPhosWallDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__TPhosWallDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__TPhosWallDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<TVirtualArray*>",117,G__get_linked_tagnum(&G__TPhosWallDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__TPhosWallDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__TPhosWallDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__TPhosWallDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__TPhosWallDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTBase<Float_t>",117,G__get_linked_tagnum(&G__TPhosWallDictLN_TMatrixTBaselEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTBase<Double_t>",117,G__get_linked_tagnum(&G__TPhosWallDictLN_TMatrixTBaselEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TVectorT<Float_t>",117,G__get_linked_tagnum(&G__TPhosWallDictLN_TVectorTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TVectorT<Double_t>",117,G__get_linked_tagnum(&G__TPhosWallDictLN_TVectorTlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixT<Float_t>",117,G__get_linked_tagnum(&G__TPhosWallDictLN_TMatrixTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTRow_const<Float_t>",117,G__get_linked_tagnum(&G__TPhosWallDictLN_TMatrixTRow_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTColumn_const<Float_t>",117,G__get_linked_tagnum(&G__TPhosWallDictLN_TMatrixTColumn_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTDiag_const<Float_t>",117,G__get_linked_tagnum(&G__TPhosWallDictLN_TMatrixTDiag_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTFlat_const<Float_t>",117,G__get_linked_tagnum(&G__TPhosWallDictLN_TMatrixTFlat_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSub_const<Float_t>",117,G__get_linked_tagnum(&G__TPhosWallDictLN_TMatrixTSub_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseRow_const<Float_t>",117,G__get_linked_tagnum(&G__TPhosWallDictLN_TMatrixTSparseRow_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseDiag_const<Float_t>",117,G__get_linked_tagnum(&G__TPhosWallDictLN_TMatrixTSparseDiag_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTRow<Float_t>",117,G__get_linked_tagnum(&G__TPhosWallDictLN_TMatrixTRowlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTColumn<Float_t>",117,G__get_linked_tagnum(&G__TPhosWallDictLN_TMatrixTColumnlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTDiag<Float_t>",117,G__get_linked_tagnum(&G__TPhosWallDictLN_TMatrixTDiaglEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTFlat<Float_t>",117,G__get_linked_tagnum(&G__TPhosWallDictLN_TMatrixTFlatlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSub<Float_t>",117,G__get_linked_tagnum(&G__TPhosWallDictLN_TMatrixTSublEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseRow<Float_t>",117,G__get_linked_tagnum(&G__TPhosWallDictLN_TMatrixTSparseRowlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseDiag<Float_t>",117,G__get_linked_tagnum(&G__TPhosWallDictLN_TMatrixTSparseDiaglEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TElementActionT<Float_t>",117,G__get_linked_tagnum(&G__TPhosWallDictLN_TElementActionTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TElementPosActionT<Float_t>",117,G__get_linked_tagnum(&G__TPhosWallDictLN_TElementPosActionTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("pair<UInt_t,Int_t>",117,G__get_linked_tagnum(&G__TPhosWallDictLN_pairlEunsignedsPintcOintgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<std::pair<UInt_t,Int_t> >",117,G__get_linked_tagnum(&G__TPhosWallDictLN_vectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<pair<UInt_t,Int_t> >",117,G__get_linked_tagnum(&G__TPhosWallDictLN_vectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__TPhosWallDictLN_reverse_iteratorlEvectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__TPhosWallDictLN_vectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__TPhosWallDictLN_reverse_iteratorlEvectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__TPhosWallDictLN_vectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<pair<unsigned int,int> >",117,G__get_linked_tagnum(&G__TPhosWallDictLN_vectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<PWSegment>",117,G__get_linked_tagnum(&G__TPhosWallDictLN_vectorlEPWSegmentcOallocatorlEPWSegmentgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__TPhosWallDictLN_reverse_iteratorlEvectorlEPWSegmentcOallocatorlEPWSegmentgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__TPhosWallDictLN_vectorlEPWSegmentcOallocatorlEPWSegmentgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__TPhosWallDictLN_reverse_iteratorlEvectorlEPWSegmentcOallocatorlEPWSegmentgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__TPhosWallDictLN_vectorlEPWSegmentcOallocatorlEPWSegmentgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<TVector3>",117,G__get_linked_tagnum(&G__TPhosWallDictLN_vectorlETVector3cOallocatorlETVector3gRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__TPhosWallDictLN_reverse_iteratorlEvectorlETVector3cOallocatorlETVector3gRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__TPhosWallDictLN_vectorlETVector3cOallocatorlETVector3gRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__TPhosWallDictLN_reverse_iteratorlEvectorlETVector3cOallocatorlETVector3gRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__TPhosWallDictLN_vectorlETVector3cOallocatorlETVector3gRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<Short_t>",117,G__get_linked_tagnum(&G__TPhosWallDictLN_vectorlEshortcOallocatorlEshortgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<PWFragment>",117,G__get_linked_tagnum(&G__TPhosWallDictLN_vectorlEPWFragmentcOallocatorlEPWFragmentgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("value_type",117,G__get_linked_tagnum(&G__TPhosWallDictLN_PWFragment),0,G__get_linked_tagnum(&G__TPhosWallDictLN_vectorlEPWFragmentcOallocatorlEPWFragmentgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("pointer",85,G__get_linked_tagnum(&G__TPhosWallDictLN_PWFragment),0,G__get_linked_tagnum(&G__TPhosWallDictLN_vectorlEPWFragmentcOallocatorlEPWFragmentgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_pointer",85,G__get_linked_tagnum(&G__TPhosWallDictLN_PWFragment),256,G__get_linked_tagnum(&G__TPhosWallDictLN_vectorlEPWFragmentcOallocatorlEPWFragmentgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reference",117,G__get_linked_tagnum(&G__TPhosWallDictLN_PWFragment),1,G__get_linked_tagnum(&G__TPhosWallDictLN_vectorlEPWFragmentcOallocatorlEPWFragmentgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_reference",117,G__get_linked_tagnum(&G__TPhosWallDictLN_PWFragment),257,G__get_linked_tagnum(&G__TPhosWallDictLN_vectorlEPWFragmentcOallocatorlEPWFragmentgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("size_type",107,-1,0,G__get_linked_tagnum(&G__TPhosWallDictLN_vectorlEPWFragmentcOallocatorlEPWFragmentgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("difference_type",108,-1,0,G__get_linked_tagnum(&G__TPhosWallDictLN_vectorlEPWFragmentcOallocatorlEPWFragmentgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_iterator",117,G__get_linked_tagnum(&G__TPhosWallDictLN_vectorlEPWFragmentcOallocatorlEPWFragmentgRsPgRcLcLiterator),256,G__get_linked_tagnum(&G__TPhosWallDictLN_vectorlEPWFragmentcOallocatorlEPWFragmentgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__TPhosWallDictLN_reverse_iteratorlEvectorlEPWFragmentcOallocatorlEPWFragmentgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__TPhosWallDictLN_vectorlEPWFragmentcOallocatorlEPWFragmentgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_reverse_iterator",117,G__get_linked_tagnum(&G__TPhosWallDictLN_reverse_iteratorlEvectorlEPWFragmentcOallocatorlEPWFragmentgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__TPhosWallDictLN_vectorlEPWFragmentcOallocatorlEPWFragmentgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__TPhosWallDictLN_reverse_iteratorlEvectorlEPWFragmentcOallocatorlEPWFragmentgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__TPhosWallDictLN_vectorlEPWFragmentcOallocatorlEPWFragmentgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator",117,G__get_linked_tagnum(&G__TPhosWallDictLN_reverse_iteratorlEvectorlEPWFragmentcOallocatorlEPWFragmentgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__TPhosWallDictLN_vectorlEPWFragmentcOallocatorlEPWFragmentgRsPgR));
   G__setnewtype(-1,NULL,0);
}

/*********************************************************
* Data Member information setup/
*********************************************************/

   /* Setting up class,struct,union tag member variable */

   /* TPhosWall */
static void G__setup_memvarTPhosWall(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__TPhosWallDictLN_TPhosWall));
   { TPhosWall *p; p=(TPhosWall*)0x1000; if (p) { }
   G__memvar_setup((void*)0,108,0,0,-1,G__defined_typename("Long_t"),-1,4,"fTimeStamp=",0,(char*)NULL);
   G__memvar_setup((void*)0,115,0,0,-1,G__defined_typename("Short_t"),-1,4,"fLargestHit=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__TPhosWallDictLN_vectorlETVector3cOallocatorlETVector3gRsPgR),G__defined_typename("vector<TVector3>"),-1,4,"fPosition=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__TPhosWallDictLN_vectorlEshortcOallocatorlEshortgRsPgR),G__defined_typename("vector<Short_t>"),-1,4,"fACharge=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__TPhosWallDictLN_vectorlEshortcOallocatorlEshortgRsPgR),G__defined_typename("vector<Short_t>"),-1,4,"fBCharge=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__TPhosWallDictLN_vectorlEshortcOallocatorlEshortgRsPgR),G__defined_typename("vector<Short_t>"),-1,4,"fCCharge=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__TPhosWallDictLN_vectorlEshortcOallocatorlEshortgRsPgR),G__defined_typename("vector<Short_t>"),-1,4,"fPixel=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__TPhosWallDictLN_vectorlEshortcOallocatorlEshortgRsPgR),G__defined_typename("vector<Short_t>"),-1,4,"fTime=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__TPhosWallDictLN_TVector3),-1,-2,4,"fWallPositions[256]=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,-1,-2,4,"fPositionsSet=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__TPhosWallDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* vector<PWFragment,allocator<PWFragment> > */
static void G__setup_memvarvectorlEPWFragmentcOallocatorlEPWFragmentgRsPgR(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__TPhosWallDictLN_vectorlEPWFragmentcOallocatorlEPWFragmentgRsPgR));
   { vector<PWFragment,allocator<PWFragment> > *p; p=(vector<PWFragment,allocator<PWFragment> >*)0x1000; if (p) { }
   }
   G__tag_memvar_reset();
}

extern "C" void G__cpp_setup_memvarTPhosWallDict() {
}
/***********************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
***********************************************************/

/*********************************************************
* Member function information setup for each class
*********************************************************/
static void G__setup_memfuncTPhosWall(void) {
   /* TPhosWall */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__TPhosWallDictLN_TPhosWall));
   G__memfunc_setup("TPhosWall",894,G__TPhosWallDict_326_0_1, 105, G__get_linked_tagnum(&G__TPhosWallDictLN_TPhosWall), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AddPWHit",725,G__TPhosWallDict_326_0_2, 121, -1, -1, 0, 1, 1, 1, 0, "u 'PWFragment' - 1 - frag", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Size",411,G__TPhosWallDict_326_0_3, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetA",353,G__TPhosWallDict_326_0_4, 115, -1, G__defined_typename("Short_t"), 0, 0, 1, 1, 1, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetB",354,G__TPhosWallDict_326_0_5, 115, -1, G__defined_typename("Short_t"), 0, 0, 1, 1, 1, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetC",355,G__TPhosWallDict_326_0_6, 115, -1, G__defined_typename("Short_t"), 0, 0, 1, 1, 1, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTime",687,G__TPhosWallDict_326_0_7, 115, -1, G__defined_typename("Short_t"), 0, 0, 1, 1, 1, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetLargestNumber",1627,G__TPhosWallDict_326_0_8, 115, -1, G__defined_typename("Short_t"), 0, 0, 1, 1, 1, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Print",525,G__TPhosWallDict_326_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "C - 'Option_t' 10 '\"\"' opt", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Clear",487,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "C - 'Option_t' 10 '\"\"' opt", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("FindWallPosition",1638,G__TPhosWallDict_326_0_11, 85, G__get_linked_tagnum(&G__TPhosWallDictLN_TVector3), -1, 0, 1, 3, 1, 0, "i - - 11 - pixel", (char*)NULL, (void*) G__func2void( (TVector3* (*)(const int&))(&TPhosWall::FindWallPosition) ), 0);
   G__memfunc_setup("SetWallPositions",1668,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 3, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__TPhosWallDict_326_0_13, 85, G__get_linked_tagnum(&G__TPhosWallDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TPhosWall::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__TPhosWallDict_326_0_14, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TPhosWall::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__TPhosWallDict_326_0_15, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TPhosWall::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__TPhosWallDict_326_0_16, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TPhosWall::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__TPhosWallDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__TPhosWallDict_326_0_20, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__TPhosWallDict_326_0_21, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TPhosWall::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__TPhosWallDict_326_0_22, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TPhosWall::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__TPhosWallDict_326_0_23, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TPhosWall::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__TPhosWallDict_326_0_24, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TPhosWall::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("TPhosWall", 894, G__TPhosWallDict_326_0_25, (int) ('i'), G__get_linked_tagnum(&G__TPhosWallDictLN_TPhosWall), -1, 0, 1, 1, 1, 0, "u 'TPhosWall' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~TPhosWall", 1020, G__TPhosWallDict_326_0_26, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__TPhosWallDict_326_0_27, (int) ('u'), G__get_linked_tagnum(&G__TPhosWallDictLN_TPhosWall), -1, 1, 1, 1, 1, 0, "u 'TPhosWall' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncvectorlEPWFragmentcOallocatorlEPWFragmentgRsPgR(void) {
   /* vector<PWFragment,allocator<PWFragment> > */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__TPhosWallDictLN_vectorlEPWFragmentcOallocatorlEPWFragmentgRsPgR));
   G__memfunc_setup("at",213,G__TPhosWallDict_332_0_1, 117, G__get_linked_tagnum(&G__TPhosWallDictLN_PWFragment), G__defined_typename("vector<PWFragment,allocator<PWFragment> >::reference"), 1, 1, 1, 1, 0, "k - 'vector<PWFragment,allocator<PWFragment> >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("at",213,G__TPhosWallDict_332_0_2, 117, G__get_linked_tagnum(&G__TPhosWallDictLN_PWFragment), G__defined_typename("vector<PWFragment,allocator<PWFragment> >::const_reference"), 1, 1, 1, 1, 8, "k - 'vector<PWFragment,allocator<PWFragment> >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("begin",517,G__TPhosWallDict_332_0_3, 117, G__get_linked_tagnum(&G__TPhosWallDictLN_vectorlEPWFragmentcOallocatorlEPWFragmentgRsPgRcLcLiterator), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("end",311,G__TPhosWallDict_332_0_4, 117, G__get_linked_tagnum(&G__TPhosWallDictLN_vectorlEPWFragmentcOallocatorlEPWFragmentgRsPgRcLcLiterator), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("rbegin",631,G__TPhosWallDict_332_0_5, 117, G__get_linked_tagnum(&G__TPhosWallDictLN_reverse_iteratorlEvectorlEPWFragmentcOallocatorlEPWFragmentgRsPgRcLcLiteratorgR), G__defined_typename("vector<PWFragment,allocator<PWFragment> >::reverse_iterator"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("rend",425,G__TPhosWallDict_332_0_6, 117, G__get_linked_tagnum(&G__TPhosWallDictLN_reverse_iteratorlEvectorlEPWFragmentcOallocatorlEPWFragmentgRsPgRcLcLiteratorgR), G__defined_typename("vector<PWFragment,allocator<PWFragment> >::reverse_iterator"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("size",443,G__TPhosWallDict_332_0_7, 107, -1, G__defined_typename("vector<PWFragment,allocator<PWFragment> >::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("max_size",864,G__TPhosWallDict_332_0_8, 107, -1, G__defined_typename("vector<PWFragment,allocator<PWFragment> >::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("resize",658,G__TPhosWallDict_332_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "k - 'vector<PWFragment,allocator<PWFragment> >::size_type' 0 - sz", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("resize",658,G__TPhosWallDict_332_0_10, 121, -1, -1, 0, 2, 1, 1, 0, 
"k - 'vector<PWFragment,allocator<PWFragment> >::size_type' 0 - sz u 'PWFragment' - 0 - c", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("capacity",846,G__TPhosWallDict_332_0_11, 107, -1, G__defined_typename("vector<PWFragment,allocator<PWFragment> >::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("empty",559,G__TPhosWallDict_332_0_12, 103, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__TPhosWallDict_332_0_13, 117, G__get_linked_tagnum(&G__TPhosWallDictLN_PWFragment), G__defined_typename("vector<PWFragment,allocator<PWFragment> >::reference"), 1, 1, 1, 1, 0, "k - 'vector<PWFragment,allocator<PWFragment> >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__TPhosWallDict_332_0_14, 117, G__get_linked_tagnum(&G__TPhosWallDictLN_PWFragment), G__defined_typename("vector<PWFragment,allocator<PWFragment> >::const_reference"), 1, 1, 1, 1, 8, "k - 'vector<PWFragment,allocator<PWFragment> >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<PWFragment,allocator<PWFragment> >",3914,G__TPhosWallDict_332_0_15, 105, G__get_linked_tagnum(&G__TPhosWallDictLN_vectorlEPWFragmentcOallocatorlEPWFragmentgRsPgR), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<PWFragment,allocator<PWFragment> >",3914,G__TPhosWallDict_332_0_16, 105, G__get_linked_tagnum(&G__TPhosWallDictLN_vectorlEPWFragmentcOallocatorlEPWFragmentgRsPgR), -1, 0, 2, 1, 1, 0, 
"k - 'vector<PWFragment,allocator<PWFragment> >::size_type' 0 - n u 'PWFragment' - 11 'PWFragment()' value", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<PWFragment,allocator<PWFragment> >",3914,G__TPhosWallDict_332_0_17, 105, G__get_linked_tagnum(&G__TPhosWallDictLN_vectorlEPWFragmentcOallocatorlEPWFragmentgRsPgR), -1, 0, 1, 1, 1, 0, "u 'vector<PWFragment,allocator<PWFragment> >' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<PWFragment,allocator<PWFragment> >",3914,G__TPhosWallDict_332_0_18, 105, G__get_linked_tagnum(&G__TPhosWallDictLN_vectorlEPWFragmentcOallocatorlEPWFragmentgRsPgR), -1, 0, 2, 1, 1, 0, 
"u 'vector<PWFragment,allocator<PWFragment> >::iterator' 'vector<PWFragment,allocator<PWFragment> >::const_iterator' 10 - first u 'vector<PWFragment,allocator<PWFragment> >::iterator' 'vector<PWFragment,allocator<PWFragment> >::const_iterator' 10 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,G__TPhosWallDict_332_0_19, 117, G__get_linked_tagnum(&G__TPhosWallDictLN_vectorlEPWFragmentcOallocatorlEPWFragmentgRsPgR), -1, 1, 1, 1, 1, 0, "u 'vector<PWFragment,allocator<PWFragment> >' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("reserve",764,G__TPhosWallDict_332_0_20, 121, -1, -1, 0, 1, 1, 1, 0, "k - 'vector<PWFragment,allocator<PWFragment> >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("front",553,G__TPhosWallDict_332_0_21, 117, G__get_linked_tagnum(&G__TPhosWallDictLN_PWFragment), -1, 1, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("back",401,G__TPhosWallDict_332_0_22, 117, G__get_linked_tagnum(&G__TPhosWallDictLN_PWFragment), -1, 1, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("push_back",944,G__TPhosWallDict_332_0_23, 121, -1, -1, 0, 1, 1, 1, 0, "u 'PWFragment' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("swap",443,G__TPhosWallDict_332_0_24, 121, -1, -1, 0, 1, 1, 1, 0, "u 'vector<PWFragment,allocator<PWFragment> >' - 1 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__TPhosWallDict_332_0_25, 117, G__get_linked_tagnum(&G__TPhosWallDictLN_vectorlEPWFragmentcOallocatorlEPWFragmentgRsPgRcLcLiterator), -1, 0, 2, 1, 1, 0, 
"u 'vector<PWFragment,allocator<PWFragment> >::iterator' - 0 - position u 'PWFragment' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__TPhosWallDict_332_0_26, 121, -1, -1, 0, 3, 1, 1, 0, 
"u 'vector<PWFragment,allocator<PWFragment> >::iterator' - 0 - position u 'vector<PWFragment,allocator<PWFragment> >::iterator' 'vector<PWFragment,allocator<PWFragment> >::const_iterator' 10 - first "
"u 'vector<PWFragment,allocator<PWFragment> >::iterator' 'vector<PWFragment,allocator<PWFragment> >::const_iterator' 10 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__TPhosWallDict_332_0_27, 121, -1, -1, 0, 3, 1, 1, 0, 
"u 'vector<PWFragment,allocator<PWFragment> >::iterator' - 0 - position k - 'vector<PWFragment,allocator<PWFragment> >::size_type' 0 - n "
"u 'PWFragment' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("pop_back",831,G__TPhosWallDict_332_0_28, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("erase",528,G__TPhosWallDict_332_0_29, 121, -1, -1, 0, 1, 1, 1, 0, "u 'vector<PWFragment,allocator<PWFragment> >::iterator' - 0 - position", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("erase",528,G__TPhosWallDict_332_0_30, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'vector<PWFragment,allocator<PWFragment> >::iterator' - 0 - first u 'vector<PWFragment,allocator<PWFragment> >::iterator' - 0 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("clear",519,G__TPhosWallDict_332_0_31, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~vector<PWFragment,allocator<PWFragment> >", 4040, G__TPhosWallDict_332_0_32, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}


/*********************************************************
* Member function information setup
*********************************************************/
extern "C" void G__cpp_setup_memfuncTPhosWallDict() {
}

/*********************************************************
* Global variable information setup for each class
*********************************************************/
static void G__cpp_setup_global0() {

   /* Setting up global variables */
   G__resetplocal();

}

static void G__cpp_setup_global1() {
}

static void G__cpp_setup_global2() {
}

static void G__cpp_setup_global3() {
}

static void G__cpp_setup_global4() {

   G__resetglobalenv();
}
extern "C" void G__cpp_setup_globalTPhosWallDict() {
  G__cpp_setup_global0();
  G__cpp_setup_global1();
  G__cpp_setup_global2();
  G__cpp_setup_global3();
  G__cpp_setup_global4();
}

/*********************************************************
* Global function information setup for each class
*********************************************************/
static void G__cpp_setup_func0() {
   G__lastifuncposition();

}

static void G__cpp_setup_func1() {
}

static void G__cpp_setup_func2() {
}

static void G__cpp_setup_func3() {
}

static void G__cpp_setup_func4() {
}

static void G__cpp_setup_func5() {
}

static void G__cpp_setup_func6() {
}

static void G__cpp_setup_func7() {
}

static void G__cpp_setup_func8() {
}

static void G__cpp_setup_func9() {
}

static void G__cpp_setup_func10() {
}

static void G__cpp_setup_func11() {
}

static void G__cpp_setup_func12() {
}

static void G__cpp_setup_func13() {
}

static void G__cpp_setup_func14() {
}

static void G__cpp_setup_func15() {
}

static void G__cpp_setup_func16() {
}

static void G__cpp_setup_func17() {

   G__resetifuncposition();
}

extern "C" void G__cpp_setup_funcTPhosWallDict() {
  G__cpp_setup_func0();
  G__cpp_setup_func1();
  G__cpp_setup_func2();
  G__cpp_setup_func3();
  G__cpp_setup_func4();
  G__cpp_setup_func5();
  G__cpp_setup_func6();
  G__cpp_setup_func7();
  G__cpp_setup_func8();
  G__cpp_setup_func9();
  G__cpp_setup_func10();
  G__cpp_setup_func11();
  G__cpp_setup_func12();
  G__cpp_setup_func13();
  G__cpp_setup_func14();
  G__cpp_setup_func15();
  G__cpp_setup_func16();
  G__cpp_setup_func17();
}

/*********************************************************
* Class,struct,union,enum tag information setup
*********************************************************/
/* Setup class/struct taginfo */
G__linked_taginfo G__TPhosWallDictLN_TClass = { "TClass" , 99 , -1 };
G__linked_taginfo G__TPhosWallDictLN_TBuffer = { "TBuffer" , 99 , -1 };
G__linked_taginfo G__TPhosWallDictLN_TMemberInspector = { "TMemberInspector" , 99 , -1 };
G__linked_taginfo G__TPhosWallDictLN_TObject = { "TObject" , 99 , -1 };
G__linked_taginfo G__TPhosWallDictLN_vectorlEshortcOallocatorlEshortgRsPgR = { "vector<short,allocator<short> >" , 99 , -1 };
G__linked_taginfo G__TPhosWallDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR = { "vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >" , 99 , -1 };
G__linked_taginfo G__TPhosWallDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR = { "reverse_iterator<vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >::iterator>" , 99 , -1 };
G__linked_taginfo G__TPhosWallDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR = { "vector<TVirtualArray*,allocator<TVirtualArray*> >" , 99 , -1 };
G__linked_taginfo G__TPhosWallDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<TVirtualArray*,allocator<TVirtualArray*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__TPhosWallDictLN_TMatrixTBaselEfloatgR = { "TMatrixTBase<float>" , 99 , -1 };
G__linked_taginfo G__TPhosWallDictLN_TMatrixTBaselEdoublegR = { "TMatrixTBase<double>" , 99 , -1 };
G__linked_taginfo G__TPhosWallDictLN_TVectorTlEfloatgR = { "TVectorT<float>" , 99 , -1 };
G__linked_taginfo G__TPhosWallDictLN_TVectorTlEdoublegR = { "TVectorT<double>" , 99 , -1 };
G__linked_taginfo G__TPhosWallDictLN_TElementActionTlEfloatgR = { "TElementActionT<float>" , 99 , -1 };
G__linked_taginfo G__TPhosWallDictLN_TElementPosActionTlEfloatgR = { "TElementPosActionT<float>" , 99 , -1 };
G__linked_taginfo G__TPhosWallDictLN_TMatrixTlEfloatgR = { "TMatrixT<float>" , 99 , -1 };
G__linked_taginfo G__TPhosWallDictLN_TMatrixTRow_constlEfloatgR = { "TMatrixTRow_const<float>" , 99 , -1 };
G__linked_taginfo G__TPhosWallDictLN_TMatrixTRowlEfloatgR = { "TMatrixTRow<float>" , 99 , -1 };
G__linked_taginfo G__TPhosWallDictLN_TMatrixTDiag_constlEfloatgR = { "TMatrixTDiag_const<float>" , 99 , -1 };
G__linked_taginfo G__TPhosWallDictLN_TMatrixTColumn_constlEfloatgR = { "TMatrixTColumn_const<float>" , 99 , -1 };
G__linked_taginfo G__TPhosWallDictLN_TMatrixTFlat_constlEfloatgR = { "TMatrixTFlat_const<float>" , 99 , -1 };
G__linked_taginfo G__TPhosWallDictLN_TMatrixTSub_constlEfloatgR = { "TMatrixTSub_const<float>" , 99 , -1 };
G__linked_taginfo G__TPhosWallDictLN_TMatrixTSparseRow_constlEfloatgR = { "TMatrixTSparseRow_const<float>" , 99 , -1 };
G__linked_taginfo G__TPhosWallDictLN_TMatrixTSparseDiag_constlEfloatgR = { "TMatrixTSparseDiag_const<float>" , 99 , -1 };
G__linked_taginfo G__TPhosWallDictLN_TMatrixTColumnlEfloatgR = { "TMatrixTColumn<float>" , 99 , -1 };
G__linked_taginfo G__TPhosWallDictLN_TMatrixTDiaglEfloatgR = { "TMatrixTDiag<float>" , 99 , -1 };
G__linked_taginfo G__TPhosWallDictLN_TMatrixTFlatlEfloatgR = { "TMatrixTFlat<float>" , 99 , -1 };
G__linked_taginfo G__TPhosWallDictLN_TMatrixTSublEfloatgR = { "TMatrixTSub<float>" , 99 , -1 };
G__linked_taginfo G__TPhosWallDictLN_TMatrixTSparseRowlEfloatgR = { "TMatrixTSparseRow<float>" , 99 , -1 };
G__linked_taginfo G__TPhosWallDictLN_TMatrixTSparseDiaglEfloatgR = { "TMatrixTSparseDiag<float>" , 99 , -1 };
G__linked_taginfo G__TPhosWallDictLN_TVector3 = { "TVector3" , 99 , -1 };
G__linked_taginfo G__TPhosWallDictLN_pairlEunsignedsPintcOintgR = { "pair<unsigned int,int>" , 115 , -1 };
G__linked_taginfo G__TPhosWallDictLN_vectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgR = { "vector<pair<unsigned int,int>,allocator<pair<unsigned int,int> > >" , 99 , -1 };
G__linked_taginfo G__TPhosWallDictLN_reverse_iteratorlEvectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<pair<unsigned int,int>,allocator<pair<unsigned int,int> > >::iterator>" , 99 , -1 };
G__linked_taginfo G__TPhosWallDictLN_PWFragment = { "PWFragment" , 99 , -1 };
G__linked_taginfo G__TPhosWallDictLN_vectorlEPWSegmentcOallocatorlEPWSegmentgRsPgR = { "vector<PWSegment,allocator<PWSegment> >" , 99 , -1 };
G__linked_taginfo G__TPhosWallDictLN_reverse_iteratorlEvectorlEPWSegmentcOallocatorlEPWSegmentgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<PWSegment,allocator<PWSegment> >::iterator>" , 99 , -1 };
G__linked_taginfo G__TPhosWallDictLN_TPhosWall = { "TPhosWall" , 99 , -1 };
G__linked_taginfo G__TPhosWallDictLN_vectorlETVector3cOallocatorlETVector3gRsPgR = { "vector<TVector3,allocator<TVector3> >" , 99 , -1 };
G__linked_taginfo G__TPhosWallDictLN_reverse_iteratorlEvectorlETVector3cOallocatorlETVector3gRsPgRcLcLiteratorgR = { "reverse_iterator<vector<TVector3,allocator<TVector3> >::iterator>" , 99 , -1 };
G__linked_taginfo G__TPhosWallDictLN_vectorlEPWFragmentcOallocatorlEPWFragmentgRsPgR = { "vector<PWFragment,allocator<PWFragment> >" , 99 , -1 };
G__linked_taginfo G__TPhosWallDictLN_vectorlEPWFragmentcOallocatorlEPWFragmentgRsPgRcLcLiterator = { "vector<PWFragment,allocator<PWFragment> >::iterator" , 99 , -1 };
G__linked_taginfo G__TPhosWallDictLN_reverse_iteratorlEvectorlEPWFragmentcOallocatorlEPWFragmentgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<PWFragment,allocator<PWFragment> >::iterator>" , 99 , -1 };

/* Reset class/struct taginfo */
extern "C" void G__cpp_reset_tagtableTPhosWallDict() {
  G__TPhosWallDictLN_TClass.tagnum = -1 ;
  G__TPhosWallDictLN_TBuffer.tagnum = -1 ;
  G__TPhosWallDictLN_TMemberInspector.tagnum = -1 ;
  G__TPhosWallDictLN_TObject.tagnum = -1 ;
  G__TPhosWallDictLN_vectorlEshortcOallocatorlEshortgRsPgR.tagnum = -1 ;
  G__TPhosWallDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR.tagnum = -1 ;
  G__TPhosWallDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__TPhosWallDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR.tagnum = -1 ;
  G__TPhosWallDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__TPhosWallDictLN_TMatrixTBaselEfloatgR.tagnum = -1 ;
  G__TPhosWallDictLN_TMatrixTBaselEdoublegR.tagnum = -1 ;
  G__TPhosWallDictLN_TVectorTlEfloatgR.tagnum = -1 ;
  G__TPhosWallDictLN_TVectorTlEdoublegR.tagnum = -1 ;
  G__TPhosWallDictLN_TElementActionTlEfloatgR.tagnum = -1 ;
  G__TPhosWallDictLN_TElementPosActionTlEfloatgR.tagnum = -1 ;
  G__TPhosWallDictLN_TMatrixTlEfloatgR.tagnum = -1 ;
  G__TPhosWallDictLN_TMatrixTRow_constlEfloatgR.tagnum = -1 ;
  G__TPhosWallDictLN_TMatrixTRowlEfloatgR.tagnum = -1 ;
  G__TPhosWallDictLN_TMatrixTDiag_constlEfloatgR.tagnum = -1 ;
  G__TPhosWallDictLN_TMatrixTColumn_constlEfloatgR.tagnum = -1 ;
  G__TPhosWallDictLN_TMatrixTFlat_constlEfloatgR.tagnum = -1 ;
  G__TPhosWallDictLN_TMatrixTSub_constlEfloatgR.tagnum = -1 ;
  G__TPhosWallDictLN_TMatrixTSparseRow_constlEfloatgR.tagnum = -1 ;
  G__TPhosWallDictLN_TMatrixTSparseDiag_constlEfloatgR.tagnum = -1 ;
  G__TPhosWallDictLN_TMatrixTColumnlEfloatgR.tagnum = -1 ;
  G__TPhosWallDictLN_TMatrixTDiaglEfloatgR.tagnum = -1 ;
  G__TPhosWallDictLN_TMatrixTFlatlEfloatgR.tagnum = -1 ;
  G__TPhosWallDictLN_TMatrixTSublEfloatgR.tagnum = -1 ;
  G__TPhosWallDictLN_TMatrixTSparseRowlEfloatgR.tagnum = -1 ;
  G__TPhosWallDictLN_TMatrixTSparseDiaglEfloatgR.tagnum = -1 ;
  G__TPhosWallDictLN_TVector3.tagnum = -1 ;
  G__TPhosWallDictLN_pairlEunsignedsPintcOintgR.tagnum = -1 ;
  G__TPhosWallDictLN_vectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgR.tagnum = -1 ;
  G__TPhosWallDictLN_reverse_iteratorlEvectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__TPhosWallDictLN_PWFragment.tagnum = -1 ;
  G__TPhosWallDictLN_vectorlEPWSegmentcOallocatorlEPWSegmentgRsPgR.tagnum = -1 ;
  G__TPhosWallDictLN_reverse_iteratorlEvectorlEPWSegmentcOallocatorlEPWSegmentgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__TPhosWallDictLN_TPhosWall.tagnum = -1 ;
  G__TPhosWallDictLN_vectorlETVector3cOallocatorlETVector3gRsPgR.tagnum = -1 ;
  G__TPhosWallDictLN_reverse_iteratorlEvectorlETVector3cOallocatorlETVector3gRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__TPhosWallDictLN_vectorlEPWFragmentcOallocatorlEPWFragmentgRsPgR.tagnum = -1 ;
  G__TPhosWallDictLN_vectorlEPWFragmentcOallocatorlEPWFragmentgRsPgRcLcLiterator.tagnum = -1 ;
  G__TPhosWallDictLN_reverse_iteratorlEvectorlEPWFragmentcOallocatorlEPWFragmentgRsPgRcLcLiteratorgR.tagnum = -1 ;
}


extern "C" void G__cpp_setup_tagtableTPhosWallDict() {

   /* Setting up class,struct,union tag entry */
   G__get_linked_tagnum_fwd(&G__TPhosWallDictLN_TClass);
   G__get_linked_tagnum_fwd(&G__TPhosWallDictLN_TBuffer);
   G__get_linked_tagnum_fwd(&G__TPhosWallDictLN_TMemberInspector);
   G__get_linked_tagnum_fwd(&G__TPhosWallDictLN_TObject);
   G__get_linked_tagnum_fwd(&G__TPhosWallDictLN_vectorlEshortcOallocatorlEshortgRsPgR);
   G__get_linked_tagnum_fwd(&G__TPhosWallDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR);
   G__get_linked_tagnum_fwd(&G__TPhosWallDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__TPhosWallDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR);
   G__get_linked_tagnum_fwd(&G__TPhosWallDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__TPhosWallDictLN_TMatrixTBaselEfloatgR);
   G__get_linked_tagnum_fwd(&G__TPhosWallDictLN_TMatrixTBaselEdoublegR);
   G__get_linked_tagnum_fwd(&G__TPhosWallDictLN_TVectorTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__TPhosWallDictLN_TVectorTlEdoublegR);
   G__get_linked_tagnum_fwd(&G__TPhosWallDictLN_TElementActionTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__TPhosWallDictLN_TElementPosActionTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__TPhosWallDictLN_TMatrixTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__TPhosWallDictLN_TMatrixTRow_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__TPhosWallDictLN_TMatrixTRowlEfloatgR);
   G__get_linked_tagnum_fwd(&G__TPhosWallDictLN_TMatrixTDiag_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__TPhosWallDictLN_TMatrixTColumn_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__TPhosWallDictLN_TMatrixTFlat_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__TPhosWallDictLN_TMatrixTSub_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__TPhosWallDictLN_TMatrixTSparseRow_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__TPhosWallDictLN_TMatrixTSparseDiag_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__TPhosWallDictLN_TMatrixTColumnlEfloatgR);
   G__get_linked_tagnum_fwd(&G__TPhosWallDictLN_TMatrixTDiaglEfloatgR);
   G__get_linked_tagnum_fwd(&G__TPhosWallDictLN_TMatrixTFlatlEfloatgR);
   G__get_linked_tagnum_fwd(&G__TPhosWallDictLN_TMatrixTSublEfloatgR);
   G__get_linked_tagnum_fwd(&G__TPhosWallDictLN_TMatrixTSparseRowlEfloatgR);
   G__get_linked_tagnum_fwd(&G__TPhosWallDictLN_TMatrixTSparseDiaglEfloatgR);
   G__get_linked_tagnum_fwd(&G__TPhosWallDictLN_TVector3);
   G__get_linked_tagnum_fwd(&G__TPhosWallDictLN_pairlEunsignedsPintcOintgR);
   G__get_linked_tagnum_fwd(&G__TPhosWallDictLN_vectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__TPhosWallDictLN_reverse_iteratorlEvectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__TPhosWallDictLN_PWFragment);
   G__get_linked_tagnum_fwd(&G__TPhosWallDictLN_vectorlEPWSegmentcOallocatorlEPWSegmentgRsPgR);
   G__get_linked_tagnum_fwd(&G__TPhosWallDictLN_reverse_iteratorlEvectorlEPWSegmentcOallocatorlEPWSegmentgRsPgRcLcLiteratorgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__TPhosWallDictLN_TPhosWall),sizeof(TPhosWall),-1,292096,(char*)NULL,G__setup_memvarTPhosWall,G__setup_memfuncTPhosWall);
   G__get_linked_tagnum_fwd(&G__TPhosWallDictLN_vectorlETVector3cOallocatorlETVector3gRsPgR);
   G__get_linked_tagnum_fwd(&G__TPhosWallDictLN_reverse_iteratorlEvectorlETVector3cOallocatorlETVector3gRsPgRcLcLiteratorgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__TPhosWallDictLN_vectorlEPWFragmentcOallocatorlEPWFragmentgRsPgR),sizeof(vector<PWFragment,allocator<PWFragment> >),-1,298752,(char*)NULL,G__setup_memvarvectorlEPWFragmentcOallocatorlEPWFragmentgRsPgR,G__setup_memfuncvectorlEPWFragmentcOallocatorlEPWFragmentgRsPgR);
   G__get_linked_tagnum_fwd(&G__TPhosWallDictLN_vectorlEPWFragmentcOallocatorlEPWFragmentgRsPgRcLcLiterator);
   G__get_linked_tagnum_fwd(&G__TPhosWallDictLN_reverse_iteratorlEvectorlEPWFragmentcOallocatorlEPWFragmentgRsPgRcLcLiteratorgR);
}
extern "C" void G__cpp_setupTPhosWallDict(void) {
  G__check_setup_version(30051515,"G__cpp_setupTPhosWallDict()");
  G__set_cpp_environmentTPhosWallDict();
  G__cpp_setup_tagtableTPhosWallDict();

  G__cpp_setup_inheritanceTPhosWallDict();

  G__cpp_setup_typetableTPhosWallDict();

  G__cpp_setup_memvarTPhosWallDict();

  G__cpp_setup_memfuncTPhosWallDict();
  G__cpp_setup_globalTPhosWallDict();
  G__cpp_setup_funcTPhosWallDict();

   if(0==G__getsizep2memfunc()) G__get_sizep2memfuncTPhosWallDict();
  return;
}
class G__cpp_setup_initTPhosWallDict {
  public:
    G__cpp_setup_initTPhosWallDict() { G__add_setup_func("TPhosWallDict",(G__incsetup)(&G__cpp_setupTPhosWallDict)); G__call_setup_funcs(); }
   ~G__cpp_setup_initTPhosWallDict() { G__remove_setup_func("TPhosWallDict"); }
};
G__cpp_setup_initTPhosWallDict G__cpp_setup_initializerTPhosWallDict;


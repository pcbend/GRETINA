//
// File generated by rootcint at Mon May 25 18:02:38 2015

// Do NOT change. Changes will be lost next time file is generated
//

#define R__DICTIONARY_FILENAME TGEBFormatDict
#include "RConfig.h" //rootcint 4834
#if !defined(R__ACCESS_IN_SYMBOL)
//Break the privacy of classes -- Disabled for the moment
#define private public
#define protected public
#endif

// Since CINT ignores the std namespace, we need to do so in this file.
namespace std {} using namespace std;
#include "TGEBFormatDict.h"

#include "TClass.h"
#include "TBuffer.h"
#include "TMemberInspector.h"
#include "TError.h"

#ifndef G__ROOT
#define G__ROOT
#endif

#include "RtypesImp.h"
#include "TIsAProxy.h"
#include "TFileMergeInfo.h"

// Direct notice to TROOT of the dictionary's loading.
namespace {
   static struct DictInit {
      DictInit() {
         ROOT::RegisterModule();
      }
   } __TheDictionaryInitializer;
}

// START OF SHADOWS

namespace ROOT {
   namespace Shadow {
      #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
      typedef ::TGEBEventHeader TGEBEventHeader;
      #else
      class TGEBEventHeader  {
         public:
         //friend XX;
         int type; //int32_t
         int size; //int32_t
         long timestamp; //int64_t
      };
      #endif

   } // of namespace Shadow
} // of namespace ROOT
// END OF SHADOWS

namespace ROOT {
   void TGEBEvent_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_TGEBEvent(void *p = 0);
   static void *newArray_TGEBEvent(Long_t size, void *p);
   static void delete_TGEBEvent(void *p);
   static void deleteArray_TGEBEvent(void *p);
   static void destruct_TGEBEvent(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::TGEBEvent*)
   {
      ::TGEBEvent *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TGEBEvent >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TGEBEvent", ::TGEBEvent::Class_Version(), "/user/benderp/Programs/GRETINA/include/TGEBEvent.h", 15,
                  typeid(::TGEBEvent), DefineBehavior(ptr, ptr),
                  &::TGEBEvent::Dictionary, isa_proxy, 4,
                  sizeof(::TGEBEvent) );
      instance.SetNew(&new_TGEBEvent);
      instance.SetNewArray(&newArray_TGEBEvent);
      instance.SetDelete(&delete_TGEBEvent);
      instance.SetDeleteArray(&deleteArray_TGEBEvent);
      instance.SetDestructor(&destruct_TGEBEvent);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::TGEBEvent*)
   {
      return GenerateInitInstanceLocal((::TGEBEvent*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TGEBEvent*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void TGEBFile_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_TGEBFile(void *p = 0);
   static void *newArray_TGEBFile(Long_t size, void *p);
   static void delete_TGEBFile(void *p);
   static void deleteArray_TGEBFile(void *p);
   static void destruct_TGEBFile(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::TGEBFile*)
   {
      ::TGEBFile *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TGEBFile >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TGEBFile", ::TGEBFile::Class_Version(), "/user/benderp/Programs/GRETINA/include/TGEBFile.h", 14,
                  typeid(::TGEBFile), DefineBehavior(ptr, ptr),
                  &::TGEBFile::Dictionary, isa_proxy, 4,
                  sizeof(::TGEBFile) );
      instance.SetNew(&new_TGEBFile);
      instance.SetNewArray(&newArray_TGEBFile);
      instance.SetDelete(&delete_TGEBFile);
      instance.SetDeleteArray(&deleteArray_TGEBFile);
      instance.SetDestructor(&destruct_TGEBFile);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::TGEBFile*)
   {
      return GenerateInitInstanceLocal((::TGEBFile*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TGEBFile*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void TGEBEventHeader_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void TGEBEventHeader_Dictionary();
   static void *new_TGEBEventHeader(void *p = 0);
   static void *newArray_TGEBEventHeader(Long_t size, void *p);
   static void delete_TGEBEventHeader(void *p);
   static void deleteArray_TGEBEventHeader(void *p);
   static void destruct_TGEBEventHeader(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::TGEBEventHeader*)
   {
      // Make sure the shadow class has the right sizeof
      R__ASSERT(sizeof(::TGEBEventHeader) == sizeof(::ROOT::Shadow::TGEBEventHeader));
      ::TGEBEventHeader *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::TGEBEventHeader),0);
      static ::ROOT::TGenericClassInfo 
         instance("TGEBEventHeader", "/user/benderp/Programs/GRETINA/include/TGEBEventHeader.h", 8,
                  typeid(::TGEBEventHeader), DefineBehavior(ptr, ptr),
                  &TGEBEventHeader_ShowMembers, &TGEBEventHeader_Dictionary, isa_proxy, 4,
                  sizeof(::TGEBEventHeader) );
      instance.SetNew(&new_TGEBEventHeader);
      instance.SetNewArray(&newArray_TGEBEventHeader);
      instance.SetDelete(&delete_TGEBEventHeader);
      instance.SetDeleteArray(&deleteArray_TGEBEventHeader);
      instance.SetDestructor(&destruct_TGEBEventHeader);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::TGEBEventHeader*)
   {
      return GenerateInitInstanceLocal((::TGEBEventHeader*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TGEBEventHeader*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void TGEBEventHeader_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const ::TGEBEventHeader*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   void TGEBMultiFile_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_TGEBMultiFile(void *p = 0);
   static void *newArray_TGEBMultiFile(Long_t size, void *p);
   static void delete_TGEBMultiFile(void *p);
   static void deleteArray_TGEBMultiFile(void *p);
   static void destruct_TGEBMultiFile(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::TGEBMultiFile*)
   {
      ::TGEBMultiFile *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TGEBMultiFile >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TGEBMultiFile", ::TGEBMultiFile::Class_Version(), "/user/benderp/Programs/GRETINA/include/TGEBMultiFile.h", 16,
                  typeid(::TGEBMultiFile), DefineBehavior(ptr, ptr),
                  &::TGEBMultiFile::Dictionary, isa_proxy, 4,
                  sizeof(::TGEBMultiFile) );
      instance.SetNew(&new_TGEBMultiFile);
      instance.SetNewArray(&newArray_TGEBMultiFile);
      instance.SetDelete(&delete_TGEBMultiFile);
      instance.SetDeleteArray(&deleteArray_TGEBMultiFile);
      instance.SetDestructor(&destruct_TGEBMultiFile);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::TGEBMultiFile*)
   {
      return GenerateInitInstanceLocal((::TGEBMultiFile*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TGEBMultiFile*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

//______________________________________________________________________________
TClass *TGEBEvent::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TGEBEvent::Class_Name()
{
   return "TGEBEvent";
}

//______________________________________________________________________________
const char *TGEBEvent::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TGEBEvent*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TGEBEvent::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TGEBEvent*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TGEBEvent::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TGEBEvent*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TGEBEvent::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TGEBEvent*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TGEBFile::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TGEBFile::Class_Name()
{
   return "TGEBFile";
}

//______________________________________________________________________________
const char *TGEBFile::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TGEBFile*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TGEBFile::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TGEBFile*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TGEBFile::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TGEBFile*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TGEBFile::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TGEBFile*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TGEBMultiFile::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TGEBMultiFile::Class_Name()
{
   return "TGEBMultiFile";
}

//______________________________________________________________________________
const char *TGEBMultiFile::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TGEBMultiFile*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TGEBMultiFile::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TGEBMultiFile*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TGEBMultiFile::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TGEBMultiFile*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TGEBMultiFile::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TGEBMultiFile*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
void TGEBEvent::Streamer(TBuffer &R__b)
{
   // Stream an object of class TGEBEvent.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(TGEBEvent::Class(),this);
   } else {
      R__b.WriteClassBuffer(TGEBEvent::Class(),this);
   }
}

//______________________________________________________________________________
void TGEBEvent::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class TGEBEvent.
      TClass *R__cl = ::TGEBEvent::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fEventHeader", (void*)&fEventHeader);
      R__insp.InspectMember("TGEBEventHeader", (void*)&fEventHeader, "fEventHeader.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fData", &fData);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fAllocatedByUs", &fAllocatedByUs);
      TObject::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_TGEBEvent(void *p) {
      return  p ? new(p) ::TGEBEvent : new ::TGEBEvent;
   }
   static void *newArray_TGEBEvent(Long_t nElements, void *p) {
      return p ? new(p) ::TGEBEvent[nElements] : new ::TGEBEvent[nElements];
   }
   // Wrapper around operator delete
   static void delete_TGEBEvent(void *p) {
      delete ((::TGEBEvent*)p);
   }
   static void deleteArray_TGEBEvent(void *p) {
      delete [] ((::TGEBEvent*)p);
   }
   static void destruct_TGEBEvent(void *p) {
      typedef ::TGEBEvent current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TGEBEvent

//______________________________________________________________________________
void TGEBFile::Streamer(TBuffer &R__b)
{
   // Stream an object of class TGEBFile.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(TGEBFile::Class(),this);
   } else {
      R__b.WriteClassBuffer(TGEBFile::Class(),this);
   }
}

//______________________________________________________________________________
void TGEBFile::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class TGEBFile.
      TClass *R__cl = ::TGEBFile::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fFilename", (void*)&fFilename);
      R__insp.InspectMember("string", (void*)&fFilename, "fFilename.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fOutFilename", (void*)&fOutFilename);
      R__insp.InspectMember("string", (void*)&fOutFilename, "fOutFilename.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fLastErrno", &fLastErrno);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fLastError", (void*)&fLastError);
      R__insp.InspectMember("string", (void*)&fLastError, "fLastError.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fDoByteSwap", &fDoByteSwap);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fFileSize", &fFileSize);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fBytesRead", &fBytesRead);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fBytesWritten", &fBytesWritten);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fExperimentNumber", &fExperimentNumber);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fRunNumber", &fRunNumber);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fFile", &fFile);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fGzFile", &fGzFile);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fPoFile", &fPoFile);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fOutFile", &fOutFile);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fOutGzFile", &fOutGzFile);
      TObject::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_TGEBFile(void *p) {
      return  p ? new(p) ::TGEBFile : new ::TGEBFile;
   }
   static void *newArray_TGEBFile(Long_t nElements, void *p) {
      return p ? new(p) ::TGEBFile[nElements] : new ::TGEBFile[nElements];
   }
   // Wrapper around operator delete
   static void delete_TGEBFile(void *p) {
      delete ((::TGEBFile*)p);
   }
   static void deleteArray_TGEBFile(void *p) {
      delete [] ((::TGEBFile*)p);
   }
   static void destruct_TGEBFile(void *p) {
      typedef ::TGEBFile current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TGEBFile

//______________________________________________________________________________
void TGEBMultiFile::Streamer(TBuffer &R__b)
{
   // Stream an object of class TGEBMultiFile.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(TGEBMultiFile::Class(),this);
   } else {
      R__b.WriteClassBuffer(TGEBMultiFile::Class(),this);
   }
}

//______________________________________________________________________________
void TGEBMultiFile::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class TGEBMultiFile.
      TClass *R__cl = ::TGEBMultiFile::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fFileList", (void*)&fFileList);
      R__insp.InspectMember("vector<std::string>", (void*)&fFileList, "fFileList.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fLastFileNumber", &fLastFileNumber);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fLastErrno", &fLastErrno);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fLastError", (void*)&fLastError);
      R__insp.InspectMember("string", (void*)&fLastError, "fLastError.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fExperimentNumber", &fExperimentNumber);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fRunNumber", &fRunNumber);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fEvents", (void*)&fEvents);
      R__insp.InspectMember("vector<TGEBEvent*>", (void*)&fEvents, "fEvents.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fFiles", (void*)&fFiles);
      R__insp.InspectMember("vector<TGEBFile*>", (void*)&fFiles, "fFiles.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fEventCounter", (void*)&fEventCounter);
      R__insp.InspectMember("vector<int>", (void*)&fEventCounter, "fEventCounter.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fLastTimeStamp", (void*)&fLastTimeStamp);
      R__insp.InspectMember("vector<Long_t>", (void*)&fLastTimeStamp, "fLastTimeStamp.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fBytes", (void*)&fBytes);
      R__insp.InspectMember("vector<size_t>", (void*)&fBytes, "fBytes.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fBytesRead", (void*)&fBytesRead);
      R__insp.InspectMember("vector<size_t>", (void*)&fBytesRead, "fBytesRead.", false);
      TObject::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_TGEBMultiFile(void *p) {
      return  p ? new(p) ::TGEBMultiFile : new ::TGEBMultiFile;
   }
   static void *newArray_TGEBMultiFile(Long_t nElements, void *p) {
      return p ? new(p) ::TGEBMultiFile[nElements] : new ::TGEBMultiFile[nElements];
   }
   // Wrapper around operator delete
   static void delete_TGEBMultiFile(void *p) {
      delete ((::TGEBMultiFile*)p);
   }
   static void deleteArray_TGEBMultiFile(void *p) {
      delete [] ((::TGEBMultiFile*)p);
   }
   static void destruct_TGEBMultiFile(void *p) {
      typedef ::TGEBMultiFile current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TGEBMultiFile

//______________________________________________________________________________
namespace ROOT {
   void TGEBEventHeader_ShowMembers(void *obj, TMemberInspector &R__insp)
   {
      // Inspect the data members of an object of class TGEBEventHeader.
      typedef ::ROOT::Shadow::TGEBEventHeader ShadowClass;
      ShadowClass *sobj = (ShadowClass*)obj;
      if (sobj) { } // Dummy usage just in case there is no datamember.

      TClass *R__cl  = ::ROOT::GenerateInitInstanceLocal((const ::TGEBEventHeader*)0x0)->GetClass();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "type", &sobj->type);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "size", &sobj->size);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "timestamp", &sobj->timestamp);
   }

}

namespace ROOT {
   // Wrappers around operator new
   static void *new_TGEBEventHeader(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::TGEBEventHeader : new ::TGEBEventHeader;
   }
   static void *newArray_TGEBEventHeader(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::TGEBEventHeader[nElements] : new ::TGEBEventHeader[nElements];
   }
   // Wrapper around operator delete
   static void delete_TGEBEventHeader(void *p) {
      delete ((::TGEBEventHeader*)p);
   }
   static void deleteArray_TGEBEventHeader(void *p) {
      delete [] ((::TGEBEventHeader*)p);
   }
   static void destruct_TGEBEventHeader(void *p) {
      typedef ::TGEBEventHeader current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TGEBEventHeader

/********************************************************
* TGEBFormatDict.cxx
* CAUTION: DON'T CHANGE THIS FILE. THIS FILE IS AUTOMATICALLY GENERATED
*          FROM HEADER FILES LISTED IN G__setup_cpp_environmentXXX().
*          CHANGE THOSE HEADER FILES AND REGENERATE THIS FILE.
********************************************************/

#ifdef G__MEMTEST
#undef malloc
#undef free
#endif

#if defined(__GNUC__) && __GNUC__ >= 4 && ((__GNUC_MINOR__ == 2 && __GNUC_PATCHLEVEL__ >= 1) || (__GNUC_MINOR__ >= 3))
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif

extern "C" void G__cpp_reset_tagtableTGEBFormatDict();

extern "C" void G__set_cpp_environmentTGEBFormatDict() {
  G__cpp_reset_tagtableTGEBFormatDict();
}
#include <new>
extern "C" int G__cpp_dllrevTGEBFormatDict() { return(30051515); }

/*********************************************************
* Member function Interface Method
*********************************************************/

/* TGEBEvent */
static int G__TGEBFormatDict_168_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TGEBEvent* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TGEBEvent[n];
     } else {
       p = new((void*) gvp) TGEBEvent[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TGEBEvent;
     } else {
       p = new((void*) gvp) TGEBEvent;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__TGEBFormatDictLN_TGEBEvent));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TGEBFormatDict_168_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TGEBEvent* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new TGEBEvent(*(TGEBEvent*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) TGEBEvent(*(TGEBEvent*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__TGEBFormatDictLN_TGEBEvent));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TGEBFormatDict_168_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TGEBEvent& obj = ((TGEBEvent*) G__getstructoffset())->operator=(*(TGEBEvent*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TGEBFormatDict_168_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const TGEBEvent*) G__getstructoffset())->Compare(*(TGEBEvent*) libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TGEBFormatDict_168_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TGEBEvent*) G__getstructoffset())->Copy(*(TGEBEvent*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TGEBFormatDict_168_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((TGEBEvent*) G__getstructoffset())->GetEventHeader());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TGEBFormatDict_168_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ((const TGEBEvent*) G__getstructoffset())->GetData());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TGEBFormatDict_168_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((const TGEBEvent*) G__getstructoffset())->AllocateData();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TGEBFormatDict_168_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TGEBEvent*) G__getstructoffset())->SetData((Int_t) G__int(libp->para[0]), (char*) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TGEBFormatDict_168_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const TGEBEvent*) G__getstructoffset())->IsGoodSize());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TGEBFormatDict_168_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const TGEBEvent*) G__getstructoffset())->GetEventType());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TGEBFormatDict_168_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const TGEBEvent*) G__getstructoffset())->GetDataSize());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TGEBFormatDict_168_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 108, (long) ((const TGEBEvent*) G__getstructoffset())->GetTimeStamp());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TGEBFormatDict_168_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const TGEBEvent*) G__getstructoffset())->operator<(*(TGEBEvent*) libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TGEBFormatDict_168_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const TGEBEvent*) G__getstructoffset())->operator>(*(TGEBEvent*) libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TGEBFormatDict_168_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TGEBEvent::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TGEBFormatDict_168_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TGEBEvent::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TGEBFormatDict_168_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TGEBEvent::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TGEBFormatDict_168_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TGEBEvent::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TGEBFormatDict_168_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TGEBEvent*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TGEBFormatDict_168_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TGEBEvent::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TGEBFormatDict_168_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TGEBEvent::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TGEBFormatDict_168_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TGEBEvent::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TGEBFormatDict_168_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TGEBEvent::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TGEBEvent G__TTGEBEvent;
static int G__TGEBFormatDict_168_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TGEBEvent*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TGEBEvent*) (soff+(sizeof(TGEBEvent)*i)))->~G__TTGEBEvent();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TGEBEvent*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TGEBEvent*) (soff))->~G__TTGEBEvent();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TGEBFile */
static int G__TGEBFormatDict_169_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TGEBFile* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TGEBFile[n];
     } else {
       p = new((void*) gvp) TGEBFile[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TGEBFile;
     } else {
       p = new((void*) gvp) TGEBFile;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__TGEBFormatDictLN_TGEBFile));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TGEBFormatDict_169_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TGEBFile* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new TGEBFile((const char*) G__int(libp->para[0]));
   } else {
     p = new((void*) gvp) TGEBFile((const char*) G__int(libp->para[0]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__TGEBFormatDictLN_TGEBFile));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TGEBFormatDict_169_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((TGEBFile*) G__getstructoffset())->Open((const char*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TGEBFormatDict_169_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((TGEBFile*) G__getstructoffset())->OpenOut((const char*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TGEBFormatDict_169_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TGEBFile*) G__getstructoffset())->Close();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TGEBFormatDict_169_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TGEBFile*) G__getstructoffset())->CloseOut();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TGEBFormatDict_169_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TGEBFile*) G__getstructoffset())->Read((TGEBEvent*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TGEBFormatDict_169_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TGEBFile*) G__getstructoffset())->Write((TGEBEvent*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TGEBFormatDict_169_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ((const TGEBFile*) G__getstructoffset())->GetFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TGEBFormatDict_169_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const TGEBFile*) G__getstructoffset())->GetLastErrno());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TGEBFormatDict_169_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ((const TGEBFile*) G__getstructoffset())->GetLastError());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TGEBFormatDict_169_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((TGEBFile*) G__getstructoffset())->Print((Option_t*) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((TGEBFile*) G__getstructoffset())->Print();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TGEBFormatDict_169_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((TGEBFile*) G__getstructoffset())->GetFileSize());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TGEBFormatDict_169_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) TGEBFile::FindFileSize((const char*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TGEBFormatDict_169_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TGEBFile*) G__getstructoffset())->GetRunNumber());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TGEBFormatDict_169_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TGEBFile::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TGEBFormatDict_169_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TGEBFile::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TGEBFormatDict_169_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TGEBFile::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TGEBFormatDict_169_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TGEBFile::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TGEBFormatDict_169_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TGEBFile*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TGEBFormatDict_169_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TGEBFile::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TGEBFormatDict_169_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TGEBFile::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TGEBFormatDict_169_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TGEBFile::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TGEBFormatDict_169_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TGEBFile::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__TGEBFormatDict_169_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   TGEBFile* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new TGEBFile(*(TGEBFile*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__TGEBFormatDictLN_TGEBFile));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TGEBFile G__TTGEBFile;
static int G__TGEBFormatDict_169_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TGEBFile*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TGEBFile*) (soff+(sizeof(TGEBFile)*i)))->~G__TTGEBFile();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TGEBFile*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TGEBFile*) (soff))->~G__TTGEBFile();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__TGEBFormatDict_169_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TGEBFile* dest = (TGEBFile*) G__getstructoffset();
   *dest = *(TGEBFile*) libp->para[0].ref;
   const TGEBFile& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TGEBEventHeader */
// automatic default constructor
static int G__TGEBFormatDict_170_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TGEBEventHeader *p;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TGEBEventHeader[n];
     } else {
       p = new((void*) gvp) TGEBEventHeader[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TGEBEventHeader;
     } else {
       p = new((void*) gvp) TGEBEventHeader;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__TGEBFormatDictLN_TGEBEventHeader));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__TGEBFormatDict_170_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   TGEBEventHeader* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new TGEBEventHeader(*(TGEBEventHeader*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__TGEBFormatDictLN_TGEBEventHeader));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TGEBEventHeader G__TTGEBEventHeader;
static int G__TGEBFormatDict_170_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TGEBEventHeader*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TGEBEventHeader*) (soff+(sizeof(TGEBEventHeader)*i)))->~G__TTGEBEventHeader();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TGEBEventHeader*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TGEBEventHeader*) (soff))->~G__TTGEBEventHeader();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__TGEBFormatDict_170_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TGEBEventHeader* dest = (TGEBEventHeader*) G__getstructoffset();
   *dest = *(TGEBEventHeader*) libp->para[0].ref;
   const TGEBEventHeader& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TGEBMultiFile */
static int G__TGEBFormatDict_177_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TGEBMultiFile* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TGEBMultiFile[n];
     } else {
       p = new((void*) gvp) TGEBMultiFile[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TGEBMultiFile;
     } else {
       p = new((void*) gvp) TGEBMultiFile;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__TGEBFormatDictLN_TGEBMultiFile));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TGEBFormatDict_177_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((TGEBMultiFile*) G__getstructoffset())->Add((const char*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TGEBFormatDict_177_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((TGEBMultiFile*) G__getstructoffset())->Add((TGEBFile*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TGEBFormatDict_177_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TGEBMultiFile*) G__getstructoffset())->InitiMultFiles();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TGEBFormatDict_177_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TGEBMultiFile*) G__getstructoffset())->Close();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TGEBFormatDict_177_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((TGEBMultiFile*) G__getstructoffset())->Read());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TGEBFormatDict_177_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ((const TGEBMultiFile*) G__getstructoffset())->GetLastFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TGEBFormatDict_177_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const TGEBMultiFile*) G__getstructoffset())->GetLastErrno());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TGEBFormatDict_177_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ((const TGEBMultiFile*) G__getstructoffset())->GetLastError());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TGEBFormatDict_177_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((TGEBMultiFile*) G__getstructoffset())->Print((Option_t*) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((TGEBMultiFile*) G__getstructoffset())->Print();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TGEBFormatDict_177_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TGEBMultiFile::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TGEBFormatDict_177_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TGEBMultiFile::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TGEBFormatDict_177_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TGEBMultiFile::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TGEBFormatDict_177_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TGEBMultiFile::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TGEBFormatDict_177_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TGEBMultiFile*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TGEBFormatDict_177_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TGEBMultiFile::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TGEBFormatDict_177_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TGEBMultiFile::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TGEBFormatDict_177_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TGEBMultiFile::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TGEBFormatDict_177_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TGEBMultiFile::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__TGEBFormatDict_177_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   TGEBMultiFile* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new TGEBMultiFile(*(TGEBMultiFile*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__TGEBFormatDictLN_TGEBMultiFile));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TGEBMultiFile G__TTGEBMultiFile;
static int G__TGEBFormatDict_177_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TGEBMultiFile*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TGEBMultiFile*) (soff+(sizeof(TGEBMultiFile)*i)))->~G__TTGEBMultiFile();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TGEBMultiFile*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TGEBMultiFile*) (soff))->~G__TTGEBMultiFile();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__TGEBFormatDict_177_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TGEBMultiFile* dest = (TGEBMultiFile*) G__getstructoffset();
   *dest = *(TGEBMultiFile*) libp->para[0].ref;
   const TGEBMultiFile& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* Setting up global function */

/*********************************************************
* Member function Stub
*********************************************************/

/* TGEBEvent */

/* TGEBFile */

/* TGEBEventHeader */

/* TGEBMultiFile */

/*********************************************************
* Global function Stub
*********************************************************/

/*********************************************************
* Get size of pointer to member function
*********************************************************/
class G__Sizep2memfuncTGEBFormatDict {
 public:
  G__Sizep2memfuncTGEBFormatDict(): p(&G__Sizep2memfuncTGEBFormatDict::sizep2memfunc) {}
    size_t sizep2memfunc() { return(sizeof(p)); }
  private:
    size_t (G__Sizep2memfuncTGEBFormatDict::*p)();
};

size_t G__get_sizep2memfuncTGEBFormatDict()
{
  G__Sizep2memfuncTGEBFormatDict a;
  G__setsizep2memfunc((int)a.sizep2memfunc());
  return((size_t)a.sizep2memfunc());
}


/*********************************************************
* virtual base class offset calculation interface
*********************************************************/

   /* Setting up class inheritance */

/*********************************************************
* Inheritance information setup/
*********************************************************/
extern "C" void G__cpp_setup_inheritanceTGEBFormatDict() {

   /* Setting up class inheritance */
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__TGEBFormatDictLN_TGEBEvent))) {
     TGEBEvent *G__Lderived;
     G__Lderived=(TGEBEvent*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__TGEBFormatDictLN_TGEBEvent),G__get_linked_tagnum(&G__TGEBFormatDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__TGEBFormatDictLN_TGEBFile))) {
     TGEBFile *G__Lderived;
     G__Lderived=(TGEBFile*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__TGEBFormatDictLN_TGEBFile),G__get_linked_tagnum(&G__TGEBFormatDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__TGEBFormatDictLN_TGEBMultiFile))) {
     TGEBMultiFile *G__Lderived;
     G__Lderived=(TGEBMultiFile*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__TGEBFormatDictLN_TGEBMultiFile),G__get_linked_tagnum(&G__TGEBFormatDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
}

/*********************************************************
* typedef information setup/
*********************************************************/
extern "C" void G__cpp_setup_typetableTGEBFormatDict() {

   /* Setting up typedef entry */
   G__search_typename2("Int_t",105,-1,0,-1);
   G__setnewtype(-1,"Signed integer 4 bytes (int)",0);
   G__search_typename2("Long_t",108,-1,0,-1);
   G__setnewtype(-1,"Signed long integer 8 bytes (long)",0);
   G__search_typename2("Version_t",115,-1,0,-1);
   G__setnewtype(-1,"Class version identifier (short)",0);
   G__search_typename2("Option_t",99,-1,256,-1);
   G__setnewtype(-1,"Option string (const char)",0);
   G__search_typename2("vector<ROOT::TSchemaHelper>",117,G__get_linked_tagnum(&G__TGEBFormatDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__TGEBFormatDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__TGEBFormatDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__TGEBFormatDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__TGEBFormatDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<TVirtualArray*>",117,G__get_linked_tagnum(&G__TGEBFormatDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__TGEBFormatDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__TGEBFormatDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__TGEBFormatDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__TGEBFormatDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TGEBGeSegType1",117,G__get_linked_tagnum(&G__TGEBFormatDictLN_TGEBEventcLcLTGEBGeSegType1),0,G__get_linked_tagnum(&G__TGEBFormatDictLN_TGEBEvent));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TGEBBankType1",117,G__get_linked_tagnum(&G__TGEBFormatDictLN_TGEBEventcLcLTGEBBankType1),0,G__get_linked_tagnum(&G__TGEBFormatDictLN_TGEBEvent));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TPWHit",117,G__get_linked_tagnum(&G__TGEBFormatDictLN_TGEBEventcLcLTPWHit),0,G__get_linked_tagnum(&G__TGEBFormatDictLN_TGEBEvent));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TPWBank",117,G__get_linked_tagnum(&G__TGEBFormatDictLN_TGEBEventcLcLTPWBank),0,G__get_linked_tagnum(&G__TGEBFormatDictLN_TGEBEvent));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TLaBrSeg",117,G__get_linked_tagnum(&G__TGEBFormatDictLN_TGEBEventcLcLTLaBrSeg),0,G__get_linked_tagnum(&G__TGEBFormatDictLN_TGEBEvent));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TLaBrBank",117,G__get_linked_tagnum(&G__TGEBFormatDictLN_TGEBEventcLcLTLaBrBank),0,G__get_linked_tagnum(&G__TGEBFormatDictLN_TGEBEvent));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<std::string>",117,G__get_linked_tagnum(&G__TGEBFormatDictLN_vectorlEstringcOallocatorlEstringgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<string>",117,G__get_linked_tagnum(&G__TGEBFormatDictLN_vectorlEstringcOallocatorlEstringgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__TGEBFormatDictLN_reverse_iteratorlEvectorlEstringcOallocatorlEstringgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__TGEBFormatDictLN_vectorlEstringcOallocatorlEstringgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__TGEBFormatDictLN_reverse_iteratorlEvectorlEstringcOallocatorlEstringgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__TGEBFormatDictLN_vectorlEstringcOallocatorlEstringgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<string>",117,G__get_linked_tagnum(&G__TGEBFormatDictLN_vectorlEstringcOallocatorlEstringgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<TGEBEvent*>",117,G__get_linked_tagnum(&G__TGEBFormatDictLN_vectorlETGEBEventmUcOallocatorlETGEBEventmUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__TGEBFormatDictLN_reverse_iteratorlEvectorlETGEBEventmUcOallocatorlETGEBEventmUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__TGEBFormatDictLN_vectorlETGEBEventmUcOallocatorlETGEBEventmUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__TGEBFormatDictLN_reverse_iteratorlEvectorlETGEBEventmUcOallocatorlETGEBEventmUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__TGEBFormatDictLN_vectorlETGEBEventmUcOallocatorlETGEBEventmUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<TGEBFile*>",117,G__get_linked_tagnum(&G__TGEBFormatDictLN_vectorlETGEBFilemUcOallocatorlETGEBFilemUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__TGEBFormatDictLN_reverse_iteratorlEvectorlETGEBFilemUcOallocatorlETGEBFilemUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__TGEBFormatDictLN_vectorlETGEBFilemUcOallocatorlETGEBFilemUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__TGEBFormatDictLN_reverse_iteratorlEvectorlETGEBFilemUcOallocatorlETGEBFilemUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__TGEBFormatDictLN_vectorlETGEBFilemUcOallocatorlETGEBFilemUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<int>",117,G__get_linked_tagnum(&G__TGEBFormatDictLN_vectorlEintcOallocatorlEintgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__TGEBFormatDictLN_reverse_iteratorlEvectorlEintcOallocatorlEintgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__TGEBFormatDictLN_vectorlEintcOallocatorlEintgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__TGEBFormatDictLN_reverse_iteratorlEvectorlEintcOallocatorlEintgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__TGEBFormatDictLN_vectorlEintcOallocatorlEintgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<Long_t>",117,G__get_linked_tagnum(&G__TGEBFormatDictLN_vectorlElongcOallocatorlElonggRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<size_t>",117,G__get_linked_tagnum(&G__TGEBFormatDictLN_vectorlEunsignedsPlongcOallocatorlEunsignedsPlonggRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
}

/*********************************************************
* Data Member information setup/
*********************************************************/

   /* Setting up class,struct,union tag member variable */

   /* TGEBEvent */
static void G__setup_memvarTGEBEvent(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__TGEBFormatDictLN_TGEBEvent));
   { TGEBEvent *p; p=(TGEBEvent*)0x1000; if (p) { }
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__TGEBFormatDictLN_TGEBEventHeader),-1,-1,2,"fEventHeader=",0,(char*)NULL);
   G__memvar_setup((void*)0,67,0,0,-1,-1,-1,2,"fData=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,-1,-1,2,"fAllocatedByUs=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__TGEBFormatDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TGEBFile */
static void G__setup_memvarTGEBFile(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__TGEBFormatDictLN_TGEBFile));
   { TGEBFile *p; p=(TGEBFile*)0x1000; if (p) { }
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__TGEBFormatDictLN_string),-1,-1,4,"fFilename=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__TGEBFormatDictLN_string),-1,-1,4,"fOutFilename=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"fLastErrno=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__TGEBFormatDictLN_string),-1,-1,4,"fLastError=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,-1,-1,4,"fDoByteSwap=",0,(char*)NULL);
   G__memvar_setup((void*)0,107,0,0,-1,G__defined_typename("size_t"),-1,4,"fFileSize=",0,(char*)NULL);
   G__memvar_setup((void*)0,107,0,0,-1,G__defined_typename("size_t"),-1,4,"fBytesRead=",0,(char*)NULL);
   G__memvar_setup((void*)0,107,0,0,-1,G__defined_typename("size_t"),-1,4,"fBytesWritten=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fExperimentNumber=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fRunNumber=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"fFile=",0,(char*)NULL);
   G__memvar_setup((void*)0,89,0,0,-1,-1,-1,4,"fGzFile=",0,(char*)NULL);
   G__memvar_setup((void*)0,89,0,0,-1,-1,-1,4,"fPoFile=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"fOutFile=",0,(char*)NULL);
   G__memvar_setup((void*)0,89,0,0,-1,-1,-1,4,"fOutGzFile=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__TGEBFormatDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TGEBEventHeader */
static void G__setup_memvarTGEBEventHeader(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__TGEBFormatDictLN_TGEBEventHeader));
   { TGEBEventHeader *p; p=(TGEBEventHeader*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->type)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"type=",0,"int32_t");
   G__memvar_setup((void*)((long)(&p->size)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"size=",0,"int32_t");
   G__memvar_setup((void*)((long)(&p->timestamp)-(long)(p)),108,0,0,-1,G__defined_typename("Long_t"),-1,1,"timestamp=",0,"int64_t");
   }
   G__tag_memvar_reset();
}


   /* TGEBMultiFile */
static void G__setup_memvarTGEBMultiFile(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__TGEBFormatDictLN_TGEBMultiFile));
   { TGEBMultiFile *p; p=(TGEBMultiFile*)0x1000; if (p) { }
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__TGEBFormatDictLN_vectorlEstringcOallocatorlEstringgRsPgR),G__defined_typename("vector<std::string>"),-1,4,"fFileList=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"fLastFileNumber=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"fLastErrno=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__TGEBFormatDictLN_string),-1,-1,4,"fLastError=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fExperimentNumber=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fRunNumber=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__TGEBFormatDictLN_vectorlETGEBEventmUcOallocatorlETGEBEventmUgRsPgR),G__defined_typename("vector<TGEBEvent*>"),-1,4,"fEvents=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__TGEBFormatDictLN_vectorlETGEBFilemUcOallocatorlETGEBFilemUgRsPgR),G__defined_typename("vector<TGEBFile*>"),-1,4,"fFiles=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__TGEBFormatDictLN_vectorlEintcOallocatorlEintgRsPgR),G__defined_typename("vector<int>"),-1,4,"fEventCounter=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__TGEBFormatDictLN_vectorlElongcOallocatorlElonggRsPgR),G__defined_typename("vector<Long_t>"),-1,4,"fLastTimeStamp=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__TGEBFormatDictLN_vectorlEunsignedsPlongcOallocatorlEunsignedsPlonggRsPgR),G__defined_typename("vector<size_t>"),-1,4,"fBytes=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__TGEBFormatDictLN_vectorlEunsignedsPlongcOallocatorlEunsignedsPlonggRsPgR),G__defined_typename("vector<size_t>"),-1,4,"fBytesRead=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__TGEBFormatDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}

extern "C" void G__cpp_setup_memvarTGEBFormatDict() {
}
/***********************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
***********************************************************/

/*********************************************************
* Member function information setup for each class
*********************************************************/
static void G__setup_memfuncTGEBEvent(void) {
   /* TGEBEvent */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__TGEBFormatDictLN_TGEBEvent));
   G__memfunc_setup("TGEBEvent",804,G__TGEBFormatDict_168_0_1, 105, G__get_linked_tagnum(&G__TGEBFormatDictLN_TGEBEvent), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TGEBEvent",804,G__TGEBFormatDict_168_0_2, 105, G__get_linked_tagnum(&G__TGEBFormatDictLN_TGEBEvent), -1, 0, 1, 1, 1, 0, "u 'TGEBEvent' - 11 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,G__TGEBFormatDict_168_0_3, 117, G__get_linked_tagnum(&G__TGEBFormatDictLN_TGEBEvent), -1, 1, 1, 1, 1, 0, "u 'TGEBEvent' - 11 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Clear",487,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "C - 'Option_t' 10 '\"\"' opt", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Compare",711,G__TGEBFormatDict_168_0_5, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 8, "u 'TGEBEvent' - 11 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Copy",411,G__TGEBFormatDict_168_0_6, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TGEBEvent' - 11 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Print",525,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 8, "C - 'Option_t' 10 '\"\"' opt", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetEventHeader",1387,G__TGEBFormatDict_168_0_8, 85, G__get_linked_tagnum(&G__TGEBFormatDictLN_TGEBEventHeader), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetData",666,G__TGEBFormatDict_168_0_9, 67, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AllocateData",1183,G__TGEBFormatDict_168_0_10, 121, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetData",678,G__TGEBFormatDict_168_0_11, 121, -1, -1, 0, 2, 1, 1, 0, 
"i - 'Int_t' 0 - dataSize C - - 0 - dataBuffer", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsGoodSize",992,G__TGEBFormatDict_168_0_12, 103, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetEventType",1220,G__TGEBFormatDict_168_0_13, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetDataSize",1077,G__TGEBFormatDict_168_0_14, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTimeStamp",1204,G__TGEBFormatDict_168_0_15, 108, -1, G__defined_typename("Long_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator<",936,G__TGEBFormatDict_168_0_16, 103, -1, -1, 0, 1, 1, 1, 8, "u 'TGEBEvent' - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator>",938,G__TGEBFormatDict_168_0_17, 103, -1, -1, 0, 1, 1, 1, 8, "u 'TGEBEvent' - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__TGEBFormatDict_168_0_18, 85, G__get_linked_tagnum(&G__TGEBFormatDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TGEBEvent::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__TGEBFormatDict_168_0_19, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TGEBEvent::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__TGEBFormatDict_168_0_20, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TGEBEvent::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__TGEBFormatDict_168_0_21, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TGEBEvent::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__TGEBFormatDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__TGEBFormatDict_168_0_25, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__TGEBFormatDict_168_0_26, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TGEBEvent::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__TGEBFormatDict_168_0_27, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TGEBEvent::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__TGEBFormatDict_168_0_28, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TGEBEvent::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__TGEBFormatDict_168_0_29, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TGEBEvent::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~TGEBEvent", 930, G__TGEBFormatDict_168_0_30, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTGEBFile(void) {
   /* TGEBFile */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__TGEBFormatDictLN_TGEBFile));
   G__memfunc_setup("TGEBFile",674,G__TGEBFormatDict_169_0_1, 105, G__get_linked_tagnum(&G__TGEBFormatDictLN_TGEBFile), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TGEBFile",674,G__TGEBFormatDict_169_0_2, 105, G__get_linked_tagnum(&G__TGEBFormatDictLN_TGEBFile), -1, 0, 1, 1, 1, 0, "C - - 10 - fname", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Open",402,G__TGEBFormatDict_169_0_3, 103, -1, -1, 0, 1, 1, 1, 0, "C - - 10 - fname", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("OpenOut",714,G__TGEBFormatDict_169_0_4, 103, -1, -1, 0, 1, 1, 1, 0, "C - - 10 - fname", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Close",502,G__TGEBFormatDict_169_0_5, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CloseOut",814,G__TGEBFormatDict_169_0_6, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Read",380,G__TGEBFormatDict_169_0_7, 105, -1, -1, 0, 1, 1, 1, 0, "U 'TGEBEvent' - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Write",523,G__TGEBFormatDict_169_0_8, 105, -1, -1, 0, 1, 1, 1, 0, "U 'TGEBEvent' - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetFileName",1057,G__TGEBFormatDict_169_0_9, 67, -1, -1, 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetLastErrno",1210,G__TGEBFormatDict_169_0_10, 105, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetLastError",1214,G__TGEBFormatDict_169_0_11, 67, -1, -1, 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Print",525,G__TGEBFormatDict_169_0_12, 121, -1, -1, 0, 1, 1, 1, 0, "C - 'Option_t' 10 '\"\"' opt", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Clear",487,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "C - 'Option_t' 10 '\"\"' opt", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetFileSize",1083,G__TGEBFormatDict_169_0_14, 107, -1, G__defined_typename("size_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FindFileSize",1180,G__TGEBFormatDict_169_0_15, 107, -1, G__defined_typename("size_t"), 0, 1, 3, 1, 0, "C - - 10 - -", (char*)NULL, (void*) G__func2void( (size_t (*)(const char*))(&TGEBFile::FindFileSize) ), 0);
   G__memfunc_setup("GetRunNumber",1214,G__TGEBFormatDict_169_0_16, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("InitTGEBFile",1078,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__TGEBFormatDict_169_0_18, 85, G__get_linked_tagnum(&G__TGEBFormatDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TGEBFile::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__TGEBFormatDict_169_0_19, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TGEBFile::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__TGEBFormatDict_169_0_20, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TGEBFile::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__TGEBFormatDict_169_0_21, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TGEBFile::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__TGEBFormatDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__TGEBFormatDict_169_0_25, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__TGEBFormatDict_169_0_26, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TGEBFile::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__TGEBFormatDict_169_0_27, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TGEBFile::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__TGEBFormatDict_169_0_28, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TGEBFile::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__TGEBFormatDict_169_0_29, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TGEBFile::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("TGEBFile", 674, G__TGEBFormatDict_169_0_30, (int) ('i'), G__get_linked_tagnum(&G__TGEBFormatDictLN_TGEBFile), -1, 0, 1, 1, 1, 0, "u 'TGEBFile' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~TGEBFile", 800, G__TGEBFormatDict_169_0_31, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__TGEBFormatDict_169_0_32, (int) ('u'), G__get_linked_tagnum(&G__TGEBFormatDictLN_TGEBFile), -1, 1, 1, 1, 1, 0, "u 'TGEBFile' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTGEBEventHeader(void) {
   /* TGEBEventHeader */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__TGEBFormatDictLN_TGEBEventHeader));
   // automatic default constructor
   G__memfunc_setup("TGEBEventHeader", 1389, G__TGEBFormatDict_170_0_1, (int) ('i'), G__get_linked_tagnum(&G__TGEBFormatDictLN_TGEBEventHeader), -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic copy constructor
   G__memfunc_setup("TGEBEventHeader", 1389, G__TGEBFormatDict_170_0_2, (int) ('i'), G__get_linked_tagnum(&G__TGEBFormatDictLN_TGEBEventHeader), -1, 0, 1, 1, 1, 0, "u 'TGEBEventHeader' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~TGEBEventHeader", 1515, G__TGEBFormatDict_170_0_3, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__TGEBFormatDict_170_0_4, (int) ('u'), G__get_linked_tagnum(&G__TGEBFormatDictLN_TGEBEventHeader), -1, 1, 1, 1, 1, 0, "u 'TGEBEventHeader' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTGEBMultiFile(void) {
   /* TGEBMultiFile */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__TGEBFormatDictLN_TGEBMultiFile));
   G__memfunc_setup("TGEBMultiFile",1197,G__TGEBFormatDict_177_0_1, 105, G__get_linked_tagnum(&G__TGEBFormatDictLN_TGEBMultiFile), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Add",265,G__TGEBFormatDict_177_0_2, 103, -1, -1, 0, 1, 1, 1, 0, "C - - 10 - fname", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Add",265,G__TGEBFormatDict_177_0_3, 103, -1, -1, 0, 1, 1, 1, 0, "U 'TGEBFile' - 0 - file", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("InitiMultFiles",1426,G__TGEBFormatDict_177_0_4, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Close",502,G__TGEBFormatDict_177_0_5, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Read",380,G__TGEBFormatDict_177_0_6, 85, G__get_linked_tagnum(&G__TGEBFormatDictLN_TGEBEvent), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetLastFileName",1461,G__TGEBFormatDict_177_0_7, 67, -1, -1, 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetLastErrno",1210,G__TGEBFormatDict_177_0_8, 105, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetLastError",1214,G__TGEBFormatDict_177_0_9, 67, -1, -1, 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Print",525,G__TGEBFormatDict_177_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "C - 'Option_t' 10 '\"\"' opt", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Clear",487,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "C - 'Option_t' 10 '\"\"' opt", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetEvent",802,(G__InterfaceMethod) NULL, 85, G__get_linked_tagnum(&G__TGEBFormatDictLN_TGEBEvent), -1, 0, 1, 1, 4, 0, "i - - 11 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetFile",672,(G__InterfaceMethod) NULL, 85, G__get_linked_tagnum(&G__TGEBFormatDictLN_TGEBFile), -1, 0, 1, 1, 4, 0, "i - - 11 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTime",687,(G__InterfaceMethod) NULL, 108, -1, G__defined_typename("Long_t"), 0, 1, 1, 4, 0, "i - - 11 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetNextEvent",1217,(G__InterfaceMethod) NULL, 103, -1, -1, 0, 1, 1, 4, 0, "i - - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FindMinimum",1117,(G__InterfaceMethod) NULL, 105, -1, -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__TGEBFormatDict_177_0_17, 85, G__get_linked_tagnum(&G__TGEBFormatDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TGEBMultiFile::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__TGEBFormatDict_177_0_18, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TGEBMultiFile::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__TGEBFormatDict_177_0_19, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TGEBMultiFile::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__TGEBFormatDict_177_0_20, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TGEBMultiFile::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__TGEBFormatDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__TGEBFormatDict_177_0_24, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__TGEBFormatDict_177_0_25, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TGEBMultiFile::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__TGEBFormatDict_177_0_26, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TGEBMultiFile::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__TGEBFormatDict_177_0_27, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TGEBMultiFile::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__TGEBFormatDict_177_0_28, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TGEBMultiFile::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("TGEBMultiFile", 1197, G__TGEBFormatDict_177_0_29, (int) ('i'), G__get_linked_tagnum(&G__TGEBFormatDictLN_TGEBMultiFile), -1, 0, 1, 1, 1, 0, "u 'TGEBMultiFile' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~TGEBMultiFile", 1323, G__TGEBFormatDict_177_0_30, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__TGEBFormatDict_177_0_31, (int) ('u'), G__get_linked_tagnum(&G__TGEBFormatDictLN_TGEBMultiFile), -1, 1, 1, 1, 1, 0, "u 'TGEBMultiFile' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}


/*********************************************************
* Member function information setup
*********************************************************/
extern "C" void G__cpp_setup_memfuncTGEBFormatDict() {
}

/*********************************************************
* Global variable information setup for each class
*********************************************************/
static void G__cpp_setup_global0() {

   /* Setting up global variables */
   G__resetplocal();

}

static void G__cpp_setup_global1() {

   G__resetglobalenv();
}
extern "C" void G__cpp_setup_globalTGEBFormatDict() {
  G__cpp_setup_global0();
  G__cpp_setup_global1();
}

/*********************************************************
* Global function information setup for each class
*********************************************************/
static void G__cpp_setup_func0() {
   G__lastifuncposition();

}

static void G__cpp_setup_func1() {
}

static void G__cpp_setup_func2() {
}

static void G__cpp_setup_func3() {
}

static void G__cpp_setup_func4() {
}

static void G__cpp_setup_func5() {
}

static void G__cpp_setup_func6() {
}

static void G__cpp_setup_func7() {
}

static void G__cpp_setup_func8() {
}

static void G__cpp_setup_func9() {
}

static void G__cpp_setup_func10() {
}

static void G__cpp_setup_func11() {
}

static void G__cpp_setup_func12() {
}

static void G__cpp_setup_func13() {
}

static void G__cpp_setup_func14() {
}

static void G__cpp_setup_func15() {

   G__resetifuncposition();
}

extern "C" void G__cpp_setup_funcTGEBFormatDict() {
  G__cpp_setup_func0();
  G__cpp_setup_func1();
  G__cpp_setup_func2();
  G__cpp_setup_func3();
  G__cpp_setup_func4();
  G__cpp_setup_func5();
  G__cpp_setup_func6();
  G__cpp_setup_func7();
  G__cpp_setup_func8();
  G__cpp_setup_func9();
  G__cpp_setup_func10();
  G__cpp_setup_func11();
  G__cpp_setup_func12();
  G__cpp_setup_func13();
  G__cpp_setup_func14();
  G__cpp_setup_func15();
}

/*********************************************************
* Class,struct,union,enum tag information setup
*********************************************************/
/* Setup class/struct taginfo */
G__linked_taginfo G__TGEBFormatDictLN_TClass = { "TClass" , 99 , -1 };
G__linked_taginfo G__TGEBFormatDictLN_TBuffer = { "TBuffer" , 99 , -1 };
G__linked_taginfo G__TGEBFormatDictLN_TMemberInspector = { "TMemberInspector" , 99 , -1 };
G__linked_taginfo G__TGEBFormatDictLN_TObject = { "TObject" , 99 , -1 };
G__linked_taginfo G__TGEBFormatDictLN_vectorlElongcOallocatorlElonggRsPgR = { "vector<long,allocator<long> >" , 99 , -1 };
G__linked_taginfo G__TGEBFormatDictLN_vectorlEunsignedsPlongcOallocatorlEunsignedsPlonggRsPgR = { "vector<unsigned long,allocator<unsigned long> >" , 99 , -1 };
G__linked_taginfo G__TGEBFormatDictLN_string = { "string" , 99 , -1 };
G__linked_taginfo G__TGEBFormatDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR = { "vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >" , 99 , -1 };
G__linked_taginfo G__TGEBFormatDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR = { "reverse_iterator<vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >::iterator>" , 99 , -1 };
G__linked_taginfo G__TGEBFormatDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR = { "vector<TVirtualArray*,allocator<TVirtualArray*> >" , 99 , -1 };
G__linked_taginfo G__TGEBFormatDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<TVirtualArray*,allocator<TVirtualArray*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__TGEBFormatDictLN_TGEBEvent = { "TGEBEvent" , 99 , -1 };
G__linked_taginfo G__TGEBFormatDictLN_TGEBFile = { "TGEBFile" , 99 , -1 };
G__linked_taginfo G__TGEBFormatDictLN_TGEBEventHeader = { "TGEBEventHeader" , 99 , -1 };
G__linked_taginfo G__TGEBFormatDictLN_TGEBEventcLcLTGEBGeSegType1 = { "TGEBEvent::TGEBGeSegType1" , 115 , -1 };
G__linked_taginfo G__TGEBFormatDictLN_TGEBEventcLcLTGEBBankType1 = { "TGEBEvent::TGEBBankType1" , 115 , -1 };
G__linked_taginfo G__TGEBFormatDictLN_TGEBEventcLcLTPWHit = { "TGEBEvent::TPWHit" , 115 , -1 };
G__linked_taginfo G__TGEBFormatDictLN_TGEBEventcLcLTPWBank = { "TGEBEvent::TPWBank" , 115 , -1 };
G__linked_taginfo G__TGEBFormatDictLN_TGEBEventcLcLTLaBrSeg = { "TGEBEvent::TLaBrSeg" , 115 , -1 };
G__linked_taginfo G__TGEBFormatDictLN_TGEBEventcLcLTLaBrBank = { "TGEBEvent::TLaBrBank" , 115 , -1 };
G__linked_taginfo G__TGEBFormatDictLN_TGEBMultiFile = { "TGEBMultiFile" , 99 , -1 };
G__linked_taginfo G__TGEBFormatDictLN_vectorlEstringcOallocatorlEstringgRsPgR = { "vector<string,allocator<string> >" , 99 , -1 };
G__linked_taginfo G__TGEBFormatDictLN_reverse_iteratorlEvectorlEstringcOallocatorlEstringgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<string,allocator<string> >::iterator>" , 99 , -1 };
G__linked_taginfo G__TGEBFormatDictLN_vectorlETGEBEventmUcOallocatorlETGEBEventmUgRsPgR = { "vector<TGEBEvent*,allocator<TGEBEvent*> >" , 99 , -1 };
G__linked_taginfo G__TGEBFormatDictLN_reverse_iteratorlEvectorlETGEBEventmUcOallocatorlETGEBEventmUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<TGEBEvent*,allocator<TGEBEvent*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__TGEBFormatDictLN_vectorlETGEBFilemUcOallocatorlETGEBFilemUgRsPgR = { "vector<TGEBFile*,allocator<TGEBFile*> >" , 99 , -1 };
G__linked_taginfo G__TGEBFormatDictLN_reverse_iteratorlEvectorlETGEBFilemUcOallocatorlETGEBFilemUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<TGEBFile*,allocator<TGEBFile*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__TGEBFormatDictLN_vectorlEintcOallocatorlEintgRsPgR = { "vector<int,allocator<int> >" , 99 , -1 };
G__linked_taginfo G__TGEBFormatDictLN_reverse_iteratorlEvectorlEintcOallocatorlEintgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<int,allocator<int> >::iterator>" , 99 , -1 };

/* Reset class/struct taginfo */
extern "C" void G__cpp_reset_tagtableTGEBFormatDict() {
  G__TGEBFormatDictLN_TClass.tagnum = -1 ;
  G__TGEBFormatDictLN_TBuffer.tagnum = -1 ;
  G__TGEBFormatDictLN_TMemberInspector.tagnum = -1 ;
  G__TGEBFormatDictLN_TObject.tagnum = -1 ;
  G__TGEBFormatDictLN_vectorlElongcOallocatorlElonggRsPgR.tagnum = -1 ;
  G__TGEBFormatDictLN_vectorlEunsignedsPlongcOallocatorlEunsignedsPlonggRsPgR.tagnum = -1 ;
  G__TGEBFormatDictLN_string.tagnum = -1 ;
  G__TGEBFormatDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR.tagnum = -1 ;
  G__TGEBFormatDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__TGEBFormatDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR.tagnum = -1 ;
  G__TGEBFormatDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__TGEBFormatDictLN_TGEBEvent.tagnum = -1 ;
  G__TGEBFormatDictLN_TGEBFile.tagnum = -1 ;
  G__TGEBFormatDictLN_TGEBEventHeader.tagnum = -1 ;
  G__TGEBFormatDictLN_TGEBEventcLcLTGEBGeSegType1.tagnum = -1 ;
  G__TGEBFormatDictLN_TGEBEventcLcLTGEBBankType1.tagnum = -1 ;
  G__TGEBFormatDictLN_TGEBEventcLcLTPWHit.tagnum = -1 ;
  G__TGEBFormatDictLN_TGEBEventcLcLTPWBank.tagnum = -1 ;
  G__TGEBFormatDictLN_TGEBEventcLcLTLaBrSeg.tagnum = -1 ;
  G__TGEBFormatDictLN_TGEBEventcLcLTLaBrBank.tagnum = -1 ;
  G__TGEBFormatDictLN_TGEBMultiFile.tagnum = -1 ;
  G__TGEBFormatDictLN_vectorlEstringcOallocatorlEstringgRsPgR.tagnum = -1 ;
  G__TGEBFormatDictLN_reverse_iteratorlEvectorlEstringcOallocatorlEstringgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__TGEBFormatDictLN_vectorlETGEBEventmUcOallocatorlETGEBEventmUgRsPgR.tagnum = -1 ;
  G__TGEBFormatDictLN_reverse_iteratorlEvectorlETGEBEventmUcOallocatorlETGEBEventmUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__TGEBFormatDictLN_vectorlETGEBFilemUcOallocatorlETGEBFilemUgRsPgR.tagnum = -1 ;
  G__TGEBFormatDictLN_reverse_iteratorlEvectorlETGEBFilemUcOallocatorlETGEBFilemUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__TGEBFormatDictLN_vectorlEintcOallocatorlEintgRsPgR.tagnum = -1 ;
  G__TGEBFormatDictLN_reverse_iteratorlEvectorlEintcOallocatorlEintgRsPgRcLcLiteratorgR.tagnum = -1 ;
}


extern "C" void G__cpp_setup_tagtableTGEBFormatDict() {

   /* Setting up class,struct,union tag entry */
   G__get_linked_tagnum_fwd(&G__TGEBFormatDictLN_TClass);
   G__get_linked_tagnum_fwd(&G__TGEBFormatDictLN_TBuffer);
   G__get_linked_tagnum_fwd(&G__TGEBFormatDictLN_TMemberInspector);
   G__get_linked_tagnum_fwd(&G__TGEBFormatDictLN_TObject);
   G__get_linked_tagnum_fwd(&G__TGEBFormatDictLN_vectorlElongcOallocatorlElonggRsPgR);
   G__get_linked_tagnum_fwd(&G__TGEBFormatDictLN_vectorlEunsignedsPlongcOallocatorlEunsignedsPlonggRsPgR);
   G__get_linked_tagnum_fwd(&G__TGEBFormatDictLN_string);
   G__get_linked_tagnum_fwd(&G__TGEBFormatDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR);
   G__get_linked_tagnum_fwd(&G__TGEBFormatDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__TGEBFormatDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR);
   G__get_linked_tagnum_fwd(&G__TGEBFormatDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__TGEBFormatDictLN_TGEBEvent),sizeof(TGEBEvent),-1,294656,(char*)NULL,G__setup_memvarTGEBEvent,G__setup_memfuncTGEBEvent);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__TGEBFormatDictLN_TGEBFile),sizeof(TGEBFile),-1,324864,(char*)NULL,G__setup_memvarTGEBFile,G__setup_memfuncTGEBFile);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__TGEBFormatDictLN_TGEBEventHeader),sizeof(TGEBEventHeader),-1,262144,(char*)NULL,G__setup_memvarTGEBEventHeader,G__setup_memfuncTGEBEventHeader);
   G__get_linked_tagnum_fwd(&G__TGEBFormatDictLN_TGEBEventcLcLTGEBGeSegType1);
   G__get_linked_tagnum_fwd(&G__TGEBFormatDictLN_TGEBEventcLcLTGEBBankType1);
   G__get_linked_tagnum_fwd(&G__TGEBFormatDictLN_TGEBEventcLcLTPWHit);
   G__get_linked_tagnum_fwd(&G__TGEBFormatDictLN_TGEBEventcLcLTPWBank);
   G__get_linked_tagnum_fwd(&G__TGEBFormatDictLN_TGEBEventcLcLTLaBrSeg);
   G__get_linked_tagnum_fwd(&G__TGEBFormatDictLN_TGEBEventcLcLTLaBrBank);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__TGEBFormatDictLN_TGEBMultiFile),sizeof(TGEBMultiFile),-1,292096,(char*)NULL,G__setup_memvarTGEBMultiFile,G__setup_memfuncTGEBMultiFile);
   G__get_linked_tagnum_fwd(&G__TGEBFormatDictLN_vectorlEstringcOallocatorlEstringgRsPgR);
   G__get_linked_tagnum_fwd(&G__TGEBFormatDictLN_reverse_iteratorlEvectorlEstringcOallocatorlEstringgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__TGEBFormatDictLN_vectorlETGEBEventmUcOallocatorlETGEBEventmUgRsPgR);
   G__get_linked_tagnum_fwd(&G__TGEBFormatDictLN_reverse_iteratorlEvectorlETGEBEventmUcOallocatorlETGEBEventmUgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__TGEBFormatDictLN_vectorlETGEBFilemUcOallocatorlETGEBFilemUgRsPgR);
   G__get_linked_tagnum_fwd(&G__TGEBFormatDictLN_reverse_iteratorlEvectorlETGEBFilemUcOallocatorlETGEBFilemUgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__TGEBFormatDictLN_vectorlEintcOallocatorlEintgRsPgR);
   G__get_linked_tagnum_fwd(&G__TGEBFormatDictLN_reverse_iteratorlEvectorlEintcOallocatorlEintgRsPgRcLcLiteratorgR);
}
extern "C" void G__cpp_setupTGEBFormatDict(void) {
  G__check_setup_version(30051515,"G__cpp_setupTGEBFormatDict()");
  G__set_cpp_environmentTGEBFormatDict();
  G__cpp_setup_tagtableTGEBFormatDict();

  G__cpp_setup_inheritanceTGEBFormatDict();

  G__cpp_setup_typetableTGEBFormatDict();

  G__cpp_setup_memvarTGEBFormatDict();

  G__cpp_setup_memfuncTGEBFormatDict();
  G__cpp_setup_globalTGEBFormatDict();
  G__cpp_setup_funcTGEBFormatDict();

   if(0==G__getsizep2memfunc()) G__get_sizep2memfuncTGEBFormatDict();
  return;
}
class G__cpp_setup_initTGEBFormatDict {
  public:
    G__cpp_setup_initTGEBFormatDict() { G__add_setup_func("TGEBFormatDict",(G__incsetup)(&G__cpp_setupTGEBFormatDict)); G__call_setup_funcs(); }
   ~G__cpp_setup_initTGEBFormatDict() { G__remove_setup_func("TGEBFormatDict"); }
};
G__cpp_setup_initTGEBFormatDict G__cpp_setup_initializerTGEBFormatDict;


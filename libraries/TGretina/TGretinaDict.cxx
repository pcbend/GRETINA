//
// File generated by rootcint at Sun Mar 22 15:53:20 2015

// Do NOT change. Changes will be lost next time file is generated
//

#define R__DICTIONARY_FILENAME TGretinaDict
#include "RConfig.h" //rootcint 4834
#if !defined(R__ACCESS_IN_SYMBOL)
//Break the privacy of classes -- Disabled for the moment
#define private public
#define protected public
#endif

// Since CINT ignores the std namespace, we need to do so in this file.
namespace std {} using namespace std;
#include "TGretinaDict.h"

#include "TCollectionProxyInfo.h"
#include "TClass.h"
#include "TBuffer.h"
#include "TMemberInspector.h"
#include "TError.h"

#ifndef G__ROOT
#define G__ROOT
#endif

#include "RtypesImp.h"
#include "TIsAProxy.h"
#include "TFileMergeInfo.h"

// Direct notice to TROOT of the dictionary's loading.
namespace {
   static struct DictInit {
      DictInit() {
         ROOT::RegisterModule();
      }
   } __TheDictionaryInitializer;
}

// START OF SHADOWS

namespace ROOT {
   namespace Shadow {
   } // of namespace Shadow
} // of namespace ROOT
// END OF SHADOWS

namespace ROOT {
   void TSegHit_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_TSegHit(void *p = 0);
   static void *newArray_TSegHit(Long_t size, void *p);
   static void delete_TSegHit(void *p);
   static void deleteArray_TSegHit(void *p);
   static void destruct_TSegHit(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::TSegHit*)
   {
      ::TSegHit *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TSegHit >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TSegHit", ::TSegHit::Class_Version(), "/user/benderp/Programs/GRETINA/include/TGretina.h", 9,
                  typeid(::TSegHit), DefineBehavior(ptr, ptr),
                  &::TSegHit::Dictionary, isa_proxy, 4,
                  sizeof(::TSegHit) );
      instance.SetNew(&new_TSegHit);
      instance.SetNewArray(&newArray_TSegHit);
      instance.SetDelete(&delete_TSegHit);
      instance.SetDeleteArray(&deleteArray_TSegHit);
      instance.SetDestructor(&destruct_TSegHit);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::TSegHit*)
   {
      return GenerateInitInstanceLocal((::TSegHit*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TSegHit*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void TGretina_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_TGretina(void *p = 0);
   static void *newArray_TGretina(Long_t size, void *p);
   static void delete_TGretina(void *p);
   static void deleteArray_TGretina(void *p);
   static void destruct_TGretina(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::TGretina*)
   {
      ::TGretina *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TGretina >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TGretina", ::TGretina::Class_Version(), "/user/benderp/Programs/GRETINA/include/TGretina.h", 39,
                  typeid(::TGretina), DefineBehavior(ptr, ptr),
                  &::TGretina::Dictionary, isa_proxy, 4,
                  sizeof(::TGretina) );
      instance.SetNew(&new_TGretina);
      instance.SetNewArray(&newArray_TGretina);
      instance.SetDelete(&delete_TGretina);
      instance.SetDeleteArray(&deleteArray_TGretina);
      instance.SetDestructor(&destruct_TGretina);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::TGretina*)
   {
      return GenerateInitInstanceLocal((::TGretina*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TGretina*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

//______________________________________________________________________________
TClass *TSegHit::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TSegHit::Class_Name()
{
   return "TSegHit";
}

//______________________________________________________________________________
const char *TSegHit::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TSegHit*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TSegHit::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TSegHit*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TSegHit::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TSegHit*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TSegHit::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TSegHit*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TGretina::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TGretina::Class_Name()
{
   return "TGretina";
}

//______________________________________________________________________________
const char *TGretina::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TGretina*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TGretina::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TGretina*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TGretina::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TGretina*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TGretina::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TGretina*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
void TSegHit::Streamer(TBuffer &R__b)
{
   // Stream an object of class TSegHit.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(TSegHit::Class(),this);
   } else {
      R__b.WriteClassBuffer(TSegHit::Class(),this);
   }
}

//______________________________________________________________________________
void TSegHit::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class TSegHit.
      TClass *R__cl = ::TSegHit::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fSegPosition", (void*)&fSegPosition);
      R__insp.InspectMember("vector<TVector3>", (void*)&fSegPosition, "fSegPosition.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fSegEnergy", (void*)&fSegEnergy);
      R__insp.InspectMember("vector<Float_t>", (void*)&fSegEnergy, "fSegEnergy.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fSegNumber", (void*)&fSegNumber);
      R__insp.InspectMember("vector<Int_t>", (void*)&fSegNumber, "fSegNumber.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fSegSegEnergy", (void*)&fSegSegEnergy);
      R__insp.InspectMember("vector<Float_t>", (void*)&fSegSegEnergy, "fSegSegEnergy.", false);
      TObject::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_TSegHit(void *p) {
      return  p ? new(p) ::TSegHit : new ::TSegHit;
   }
   static void *newArray_TSegHit(Long_t nElements, void *p) {
      return p ? new(p) ::TSegHit[nElements] : new ::TSegHit[nElements];
   }
   // Wrapper around operator delete
   static void delete_TSegHit(void *p) {
      delete ((::TSegHit*)p);
   }
   static void deleteArray_TSegHit(void *p) {
      delete [] ((::TSegHit*)p);
   }
   static void destruct_TSegHit(void *p) {
      typedef ::TSegHit current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TSegHit

//______________________________________________________________________________
void TGretina::Streamer(TBuffer &R__b)
{
   // Stream an object of class TGretina.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(TGretina::Class(),this);
   } else {
      R__b.WriteClassBuffer(TGretina::Class(),this);
   }
}

//______________________________________________________________________________
void TGretina::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class TGretina.
      TClass *R__cl = ::TGretina::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fCrystalId", (void*)&fCrystalId);
      R__insp.InspectMember("vector<Int_t>", (void*)&fCrystalId, "fCrystalId.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTotalE", (void*)&fTotalE);
      R__insp.InspectMember("vector<Float_t>", (void*)&fTotalE, "fTotalE.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fCoreCharge", (void*)&fCoreCharge);
      R__insp.InspectMember("vector<Int_t>", (void*)&fCoreCharge, "fCoreCharge.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTimeStamp", (void*)&fTimeStamp);
      R__insp.InspectMember("vector<Long_t>", (void*)&fTimeStamp, "fTimeStamp.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fLed", (void*)&fLed);
      R__insp.InspectMember("vector<Long_t>", (void*)&fLed, "fLed.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTZero", (void*)&fTZero);
      R__insp.InspectMember("vector<Float_t>", (void*)&fTZero, "fTZero.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fPosition", (void*)&fPosition);
      R__insp.InspectMember("vector<TVector3>", (void*)&fPosition, "fPosition.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fSegments", (void*)&fSegments);
      R__insp.InspectMember("vector<TSegHit>", (void*)&fSegments, "fSegments.", false);
      TObject::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_TGretina(void *p) {
      return  p ? new(p) ::TGretina : new ::TGretina;
   }
   static void *newArray_TGretina(Long_t nElements, void *p) {
      return p ? new(p) ::TGretina[nElements] : new ::TGretina[nElements];
   }
   // Wrapper around operator delete
   static void delete_TGretina(void *p) {
      delete ((::TGretina*)p);
   }
   static void deleteArray_TGretina(void *p) {
      delete [] ((::TGretina*)p);
   }
   static void destruct_TGretina(void *p) {
      typedef ::TGretina current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TGretina

namespace ROOT {
   void vectorlETSegHitgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlETSegHitgR_Dictionary();
   static void *new_vectorlETSegHitgR(void *p = 0);
   static void *newArray_vectorlETSegHitgR(Long_t size, void *p);
   static void delete_vectorlETSegHitgR(void *p);
   static void deleteArray_vectorlETSegHitgR(void *p);
   static void destruct_vectorlETSegHitgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const vector<TSegHit>*)
   {
      vector<TSegHit> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<TSegHit>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<TSegHit>", -2, "/mnt/misc/sw/x86_64/Debian/7/root/gnu/5.34.14a/cint/cint/lib/prec_stl/vector", 49,
                  typeid(vector<TSegHit>), DefineBehavior(ptr, ptr),
                  0, &vectorlETSegHitgR_Dictionary, isa_proxy, 4,
                  sizeof(vector<TSegHit>) );
      instance.SetNew(&new_vectorlETSegHitgR);
      instance.SetNewArray(&newArray_vectorlETSegHitgR);
      instance.SetDelete(&delete_vectorlETSegHitgR);
      instance.SetDeleteArray(&deleteArray_vectorlETSegHitgR);
      instance.SetDestructor(&destruct_vectorlETSegHitgR);
      instance.AdoptCollectionProxyInfo(TCollectionProxyInfo::Generate(TCollectionProxyInfo::Pushback< vector<TSegHit> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<TSegHit>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlETSegHitgR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const vector<TSegHit>*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   // Wrappers around operator new
   static void *new_vectorlETSegHitgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<TSegHit> : new vector<TSegHit>;
   }
   static void *newArray_vectorlETSegHitgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<TSegHit>[nElements] : new vector<TSegHit>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlETSegHitgR(void *p) {
      delete ((vector<TSegHit>*)p);
   }
   static void deleteArray_vectorlETSegHitgR(void *p) {
      delete [] ((vector<TSegHit>*)p);
   }
   static void destruct_vectorlETSegHitgR(void *p) {
      typedef vector<TSegHit> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class vector<TSegHit>

namespace ROOT {
   void vectorlETVector3gR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlETVector3gR_Dictionary();
   static void *new_vectorlETVector3gR(void *p = 0);
   static void *newArray_vectorlETVector3gR(Long_t size, void *p);
   static void delete_vectorlETVector3gR(void *p);
   static void deleteArray_vectorlETVector3gR(void *p);
   static void destruct_vectorlETVector3gR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const vector<TVector3>*)
   {
      vector<TVector3> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<TVector3>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<TVector3>", -2, "/mnt/misc/sw/x86_64/Debian/7/root/gnu/5.34.14a/cint/cint/lib/prec_stl/vector", 49,
                  typeid(vector<TVector3>), DefineBehavior(ptr, ptr),
                  0, &vectorlETVector3gR_Dictionary, isa_proxy, 0,
                  sizeof(vector<TVector3>) );
      instance.SetNew(&new_vectorlETVector3gR);
      instance.SetNewArray(&newArray_vectorlETVector3gR);
      instance.SetDelete(&delete_vectorlETVector3gR);
      instance.SetDeleteArray(&deleteArray_vectorlETVector3gR);
      instance.SetDestructor(&destruct_vectorlETVector3gR);
      instance.AdoptCollectionProxyInfo(TCollectionProxyInfo::Generate(TCollectionProxyInfo::Pushback< vector<TVector3> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<TVector3>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlETVector3gR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const vector<TVector3>*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   // Wrappers around operator new
   static void *new_vectorlETVector3gR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<TVector3> : new vector<TVector3>;
   }
   static void *newArray_vectorlETVector3gR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<TVector3>[nElements] : new vector<TVector3>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlETVector3gR(void *p) {
      delete ((vector<TVector3>*)p);
   }
   static void deleteArray_vectorlETVector3gR(void *p) {
      delete [] ((vector<TVector3>*)p);
   }
   static void destruct_vectorlETVector3gR(void *p) {
      typedef vector<TVector3> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class vector<TVector3>

namespace ROOT {
   void vectorlEfloatgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlEfloatgR_Dictionary();
   static void *new_vectorlEfloatgR(void *p = 0);
   static void *newArray_vectorlEfloatgR(Long_t size, void *p);
   static void delete_vectorlEfloatgR(void *p);
   static void deleteArray_vectorlEfloatgR(void *p);
   static void destruct_vectorlEfloatgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const vector<float>*)
   {
      vector<float> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<float>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<float>", -2, "vector.dll", 0,
                  typeid(vector<float>), DefineBehavior(ptr, ptr),
                  0, &vectorlEfloatgR_Dictionary, isa_proxy, 0,
                  sizeof(vector<float>) );
      instance.SetNew(&new_vectorlEfloatgR);
      instance.SetNewArray(&newArray_vectorlEfloatgR);
      instance.SetDelete(&delete_vectorlEfloatgR);
      instance.SetDeleteArray(&deleteArray_vectorlEfloatgR);
      instance.SetDestructor(&destruct_vectorlEfloatgR);
      instance.AdoptCollectionProxyInfo(TCollectionProxyInfo::Generate(TCollectionProxyInfo::Pushback< vector<float> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<float>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlEfloatgR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const vector<float>*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   // Wrappers around operator new
   static void *new_vectorlEfloatgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<float> : new vector<float>;
   }
   static void *newArray_vectorlEfloatgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<float>[nElements] : new vector<float>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlEfloatgR(void *p) {
      delete ((vector<float>*)p);
   }
   static void deleteArray_vectorlEfloatgR(void *p) {
      delete [] ((vector<float>*)p);
   }
   static void destruct_vectorlEfloatgR(void *p) {
      typedef vector<float> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class vector<float>

namespace ROOT {
   void vectorlEintgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlEintgR_Dictionary();
   static void *new_vectorlEintgR(void *p = 0);
   static void *newArray_vectorlEintgR(Long_t size, void *p);
   static void delete_vectorlEintgR(void *p);
   static void deleteArray_vectorlEintgR(void *p);
   static void destruct_vectorlEintgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const vector<int>*)
   {
      vector<int> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<int>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<int>", -2, "/mnt/misc/sw/x86_64/Debian/7/root/gnu/5.34.14a/cint/cint/lib/prec_stl/vector", 49,
                  typeid(vector<int>), DefineBehavior(ptr, ptr),
                  0, &vectorlEintgR_Dictionary, isa_proxy, 0,
                  sizeof(vector<int>) );
      instance.SetNew(&new_vectorlEintgR);
      instance.SetNewArray(&newArray_vectorlEintgR);
      instance.SetDelete(&delete_vectorlEintgR);
      instance.SetDeleteArray(&deleteArray_vectorlEintgR);
      instance.SetDestructor(&destruct_vectorlEintgR);
      instance.AdoptCollectionProxyInfo(TCollectionProxyInfo::Generate(TCollectionProxyInfo::Pushback< vector<int> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<int>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlEintgR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const vector<int>*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   // Wrappers around operator new
   static void *new_vectorlEintgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<int> : new vector<int>;
   }
   static void *newArray_vectorlEintgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<int>[nElements] : new vector<int>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlEintgR(void *p) {
      delete ((vector<int>*)p);
   }
   static void deleteArray_vectorlEintgR(void *p) {
      delete [] ((vector<int>*)p);
   }
   static void destruct_vectorlEintgR(void *p) {
      typedef vector<int> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class vector<int>

namespace ROOT {
   void vectorlElonggR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlElonggR_Dictionary();
   static void *new_vectorlElonggR(void *p = 0);
   static void *newArray_vectorlElonggR(Long_t size, void *p);
   static void delete_vectorlElonggR(void *p);
   static void deleteArray_vectorlElonggR(void *p);
   static void destruct_vectorlElonggR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const vector<long>*)
   {
      vector<long> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<long>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<long>", -2, "vector.dll", 0,
                  typeid(vector<long>), DefineBehavior(ptr, ptr),
                  0, &vectorlElonggR_Dictionary, isa_proxy, 0,
                  sizeof(vector<long>) );
      instance.SetNew(&new_vectorlElonggR);
      instance.SetNewArray(&newArray_vectorlElonggR);
      instance.SetDelete(&delete_vectorlElonggR);
      instance.SetDeleteArray(&deleteArray_vectorlElonggR);
      instance.SetDestructor(&destruct_vectorlElonggR);
      instance.AdoptCollectionProxyInfo(TCollectionProxyInfo::Generate(TCollectionProxyInfo::Pushback< vector<long> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<long>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlElonggR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const vector<long>*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   // Wrappers around operator new
   static void *new_vectorlElonggR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<long> : new vector<long>;
   }
   static void *newArray_vectorlElonggR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<long>[nElements] : new vector<long>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlElonggR(void *p) {
      delete ((vector<long>*)p);
   }
   static void deleteArray_vectorlElonggR(void *p) {
      delete [] ((vector<long>*)p);
   }
   static void destruct_vectorlElonggR(void *p) {
      typedef vector<long> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class vector<long>

/********************************************************
* TGretinaDict.cxx
* CAUTION: DON'T CHANGE THIS FILE. THIS FILE IS AUTOMATICALLY GENERATED
*          FROM HEADER FILES LISTED IN G__setup_cpp_environmentXXX().
*          CHANGE THOSE HEADER FILES AND REGENERATE THIS FILE.
********************************************************/

#ifdef G__MEMTEST
#undef malloc
#undef free
#endif

#if defined(__GNUC__) && __GNUC__ >= 4 && ((__GNUC_MINOR__ == 2 && __GNUC_PATCHLEVEL__ >= 1) || (__GNUC_MINOR__ >= 3))
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif

extern "C" void G__cpp_reset_tagtableTGretinaDict();

extern "C" void G__set_cpp_environmentTGretinaDict() {
  G__cpp_reset_tagtableTGretinaDict();
}
#include <new>
extern "C" int G__cpp_dllrevTGretinaDict() { return(30051515); }

/*********************************************************
* Member function Interface Method
*********************************************************/

/* TSegHit */
static int G__TGretinaDict_232_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TSegHit* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TSegHit[n];
     } else {
       p = new((void*) gvp) TSegHit[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TSegHit;
     } else {
       p = new((void*) gvp) TSegHit;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__TGretinaDictLN_TSegHit));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TGretinaDict_232_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((TSegHit*) G__getstructoffset())->Print((Option_t*) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((TSegHit*) G__getstructoffset())->Print();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TGretinaDict_232_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TSegHit*) G__getstructoffset())->SetHit(*(G2Segment*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TGretinaDict_232_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TSegHit*) G__getstructoffset())->Size());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TGretinaDict_232_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         TVector3* pobj;
         TVector3 xobj = ((TSegHit*) G__getstructoffset())->GetSegPosition(*(int*) G__Intref(&libp->para[0]));
         pobj = new TVector3(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TGretinaDict_232_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((TSegHit*) G__getstructoffset())->GetSegEnergy(*(int*) G__Intref(&libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TGretinaDict_232_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TSegHit*) G__getstructoffset())->GetSegNumber(*(int*) G__Intref(&libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TGretinaDict_232_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((TSegHit*) G__getstructoffset())->GetSegSegEnergy(*(int*) G__Intref(&libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TGretinaDict_232_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TSegHit::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TGretinaDict_232_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TSegHit::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TGretinaDict_232_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TSegHit::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TGretinaDict_232_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TSegHit::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TGretinaDict_232_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TSegHit*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TGretinaDict_232_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TSegHit::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TGretinaDict_232_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TSegHit::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TGretinaDict_232_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TSegHit::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TGretinaDict_232_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TSegHit::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__TGretinaDict_232_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   TSegHit* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new TSegHit(*(TSegHit*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__TGretinaDictLN_TSegHit));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TSegHit G__TTSegHit;
static int G__TGretinaDict_232_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TSegHit*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TSegHit*) (soff+(sizeof(TSegHit)*i)))->~G__TTSegHit();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TSegHit*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TSegHit*) (soff))->~G__TTSegHit();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__TGretinaDict_232_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TSegHit* dest = (TSegHit*) G__getstructoffset();
   *dest = *(TSegHit*) libp->para[0].ref;
   const TSegHit& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TGretina */
static int G__TGretinaDict_241_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TGretina* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TGretina[n];
     } else {
       p = new((void*) gvp) TGretina[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TGretina;
     } else {
       p = new((void*) gvp) TGretina;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__TGretinaDictLN_TGretina));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TGretinaDict_241_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TGretina*) G__getstructoffset())->AddGretinaHit(*(G2Fragment*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TGretinaDict_241_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((TGretina*) G__getstructoffset())->Print((Option_t*) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((TGretina*) G__getstructoffset())->Print();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TGretinaDict_241_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TGretina*) G__getstructoffset())->SetID(*(Int_t*) G__Intref(&libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TGretinaDict_241_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TGretina*) G__getstructoffset())->SetEnergy(*(Float_t*) G__Floatref(&libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TGretinaDict_241_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TGretina*) G__getstructoffset())->SetLed(*(Float_t*) G__Floatref(&libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TGretinaDict_241_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TGretina*) G__getstructoffset())->SetCharge(*(Int_t*) G__Intref(&libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TGretinaDict_241_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TGretina*) G__getstructoffset())->SetTimeStamp(*(Long_t*) G__Longref(&libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TGretinaDict_241_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TGretina*) G__getstructoffset())->SetTZero(*(Float_t*) G__Floatref(&libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TGretinaDict_241_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TGretina*) G__getstructoffset())->SetPosition(*(TVector3*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TGretinaDict_241_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TGretina*) G__getstructoffset())->GetID(*(int*) G__Intref(&libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TGretinaDict_241_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((TGretina*) G__getstructoffset())->GetEnergy(*(int*) G__Intref(&libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TGretinaDict_241_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((TGretina*) G__getstructoffset())->GetLed(*(int*) G__Intref(&libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TGretinaDict_241_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TGretina*) G__getstructoffset())->GetCharge(*(int*) G__Intref(&libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TGretinaDict_241_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 108, (long) ((TGretina*) G__getstructoffset())->GetTimeStamp(*(int*) G__Intref(&libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TGretinaDict_241_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((TGretina*) G__getstructoffset())->GetTZero(*(int*) G__Intref(&libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TGretinaDict_241_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         TVector3* pobj;
         TVector3 xobj = ((TGretina*) G__getstructoffset())->GetPosition(*(int*) G__Intref(&libp->para[0]));
         pobj = new TVector3(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TGretinaDict_241_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((TGretina*) G__getstructoffset())->GetSegment(*(int*) G__Intref(&libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TGretinaDict_241_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TGretina*) G__getstructoffset())->Size());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TGretinaDict_241_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TGretina*) G__getstructoffset())->SegSize(*(int*) G__Intref(&libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TGretinaDict_241_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 4:
      {
         TVector3* pobj;
         TVector3 xobj = TGretina::FindPosition((int) G__int(libp->para[0]), (Float_t) G__double(libp->para[1])
, (Float_t) G__double(libp->para[2]), (Float_t) G__double(libp->para[3]));
         pobj = new TVector3(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
      break;
   case 3:
      {
         TVector3* pobj;
         TVector3 xobj = TGretina::FindPosition((int) G__int(libp->para[0]), (Float_t) G__double(libp->para[1])
, (Float_t) G__double(libp->para[2]));
         pobj = new TVector3(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
      break;
   case 2:
      {
         TVector3* pobj;
         TVector3 xobj = TGretina::FindPosition((int) G__int(libp->para[0]), (Float_t) G__double(libp->para[1]));
         pobj = new TVector3(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
      break;
   case 1:
      {
         TVector3* pobj;
         TVector3 xobj = TGretina::FindPosition((int) G__int(libp->para[0]));
         pobj = new TVector3(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TGretinaDict_241_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TGretina::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TGretinaDict_241_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TGretina::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TGretinaDict_241_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TGretina::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TGretinaDict_241_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TGretina::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TGretinaDict_241_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TGretina*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TGretinaDict_241_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TGretina::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TGretinaDict_241_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TGretina::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TGretinaDict_241_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TGretina::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TGretinaDict_241_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TGretina::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__TGretinaDict_241_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   TGretina* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new TGretina(*(TGretina*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__TGretinaDictLN_TGretina));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TGretina G__TTGretina;
static int G__TGretinaDict_241_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TGretina*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TGretina*) (soff+(sizeof(TGretina)*i)))->~G__TTGretina();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TGretina*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TGretina*) (soff))->~G__TTGretina();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__TGretinaDict_241_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TGretina* dest = (TGretina*) G__getstructoffset();
   *dest = *(TGretina*) libp->para[0].ref;
   const TGretina& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* vector<TSegHit,allocator<TSegHit> > */
static int G__TGretinaDict_243_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<TSegHit,allocator<TSegHit> >::reference obj = ((vector<TSegHit,allocator<TSegHit> >*) G__getstructoffset())->at((vector<TSegHit,allocator<TSegHit> >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TGretinaDict_243_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<TSegHit,allocator<TSegHit> >::const_reference obj = ((const vector<TSegHit,allocator<TSegHit> >*) G__getstructoffset())->at((vector<TSegHit,allocator<TSegHit> >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TGretinaDict_243_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<TSegHit,allocator<TSegHit> >::iterator* pobj;
         vector<TSegHit,allocator<TSegHit> >::iterator xobj = ((vector<TSegHit,allocator<TSegHit> >*) G__getstructoffset())->begin();
         pobj = new vector<TSegHit,allocator<TSegHit> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TGretinaDict_243_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<TSegHit,allocator<TSegHit> >::iterator* pobj;
         vector<TSegHit,allocator<TSegHit> >::iterator xobj = ((vector<TSegHit,allocator<TSegHit> >*) G__getstructoffset())->end();
         pobj = new vector<TSegHit,allocator<TSegHit> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TGretinaDict_243_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<TSegHit,allocator<TSegHit> >::reverse_iterator* pobj;
         vector<TSegHit,allocator<TSegHit> >::reverse_iterator xobj = ((vector<TSegHit,allocator<TSegHit> >*) G__getstructoffset())->rbegin();
         pobj = new vector<TSegHit,allocator<TSegHit> >::reverse_iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TGretinaDict_243_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<TSegHit,allocator<TSegHit> >::reverse_iterator* pobj;
         vector<TSegHit,allocator<TSegHit> >::reverse_iterator xobj = ((vector<TSegHit,allocator<TSegHit> >*) G__getstructoffset())->rend();
         pobj = new vector<TSegHit,allocator<TSegHit> >::reverse_iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TGretinaDict_243_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const vector<TSegHit,allocator<TSegHit> >*) G__getstructoffset())->size());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TGretinaDict_243_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const vector<TSegHit,allocator<TSegHit> >*) G__getstructoffset())->max_size());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TGretinaDict_243_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<TSegHit,allocator<TSegHit> >*) G__getstructoffset())->resize((vector<TSegHit,allocator<TSegHit> >::size_type) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TGretinaDict_243_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<TSegHit,allocator<TSegHit> >*) G__getstructoffset())->resize((vector<TSegHit,allocator<TSegHit> >::size_type) G__int(libp->para[0]), *((TSegHit*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TGretinaDict_243_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const vector<TSegHit,allocator<TSegHit> >*) G__getstructoffset())->capacity());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TGretinaDict_243_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const vector<TSegHit,allocator<TSegHit> >*) G__getstructoffset())->empty());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TGretinaDict_243_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<TSegHit,allocator<TSegHit> >::reference obj = ((vector<TSegHit,allocator<TSegHit> >*) G__getstructoffset())->operator[]((vector<TSegHit,allocator<TSegHit> >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TGretinaDict_243_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<TSegHit,allocator<TSegHit> >::const_reference obj = ((const vector<TSegHit,allocator<TSegHit> >*) G__getstructoffset())->operator[]((vector<TSegHit,allocator<TSegHit> >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TGretinaDict_243_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<TSegHit,allocator<TSegHit> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<TSegHit,allocator<TSegHit> >[n];
     } else {
       p = new((void*) gvp) vector<TSegHit,allocator<TSegHit> >[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<TSegHit,allocator<TSegHit> >;
     } else {
       p = new((void*) gvp) vector<TSegHit,allocator<TSegHit> >;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__TGretinaDictLN_vectorlETSegHitcOallocatorlETSegHitgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TGretinaDict_243_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<TSegHit,allocator<TSegHit> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<TSegHit,allocator<TSegHit> >((vector<TSegHit,allocator<TSegHit> >::size_type) G__int(libp->para[0]), *(TSegHit*) libp->para[1].ref);
     } else {
       p = new((void*) gvp) vector<TSegHit,allocator<TSegHit> >((vector<TSegHit,allocator<TSegHit> >::size_type) G__int(libp->para[0]), *(TSegHit*) libp->para[1].ref);
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<TSegHit,allocator<TSegHit> >((vector<TSegHit,allocator<TSegHit> >::size_type) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) vector<TSegHit,allocator<TSegHit> >((vector<TSegHit,allocator<TSegHit> >::size_type) G__int(libp->para[0]));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__TGretinaDictLN_vectorlETSegHitcOallocatorlETSegHitgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TGretinaDict_243_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<TSegHit,allocator<TSegHit> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new vector<TSegHit,allocator<TSegHit> >(*(vector<TSegHit,allocator<TSegHit> >*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) vector<TSegHit,allocator<TSegHit> >(*(vector<TSegHit,allocator<TSegHit> >*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__TGretinaDictLN_vectorlETSegHitcOallocatorlETSegHitgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TGretinaDict_243_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<TSegHit,allocator<TSegHit> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new vector<TSegHit,allocator<TSegHit> >(*((vector<TSegHit,allocator<TSegHit> >::const_iterator*) G__int(libp->para[0])), *((vector<TSegHit,allocator<TSegHit> >::const_iterator*) G__int(libp->para[1])));
   } else {
     p = new((void*) gvp) vector<TSegHit,allocator<TSegHit> >(*((vector<TSegHit,allocator<TSegHit> >::const_iterator*) G__int(libp->para[0])), *((vector<TSegHit,allocator<TSegHit> >::const_iterator*) G__int(libp->para[1])));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__TGretinaDictLN_vectorlETSegHitcOallocatorlETSegHitgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TGretinaDict_243_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<TSegHit,allocator<TSegHit> >& obj = ((vector<TSegHit,allocator<TSegHit> >*) G__getstructoffset())->operator=(*(vector<TSegHit,allocator<TSegHit> >*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TGretinaDict_243_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<TSegHit,allocator<TSegHit> >*) G__getstructoffset())->reserve((vector<TSegHit,allocator<TSegHit> >::size_type) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TGretinaDict_243_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TSegHit& obj = ((vector<TSegHit,allocator<TSegHit> >*) G__getstructoffset())->front();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TGretinaDict_243_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TSegHit& obj = ((vector<TSegHit,allocator<TSegHit> >*) G__getstructoffset())->back();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TGretinaDict_243_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<TSegHit,allocator<TSegHit> >*) G__getstructoffset())->push_back(*(TSegHit*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TGretinaDict_243_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<TSegHit,allocator<TSegHit> >*) G__getstructoffset())->swap(*(vector<TSegHit,allocator<TSegHit> >*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TGretinaDict_243_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<TSegHit,allocator<TSegHit> >::iterator* pobj;
         vector<TSegHit,allocator<TSegHit> >::iterator xobj = ((vector<TSegHit,allocator<TSegHit> >*) G__getstructoffset())->insert(*((vector<TSegHit,allocator<TSegHit> >::iterator*) G__int(libp->para[0])), *(TSegHit*) libp->para[1].ref);
         pobj = new vector<TSegHit,allocator<TSegHit> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TGretinaDict_243_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<TSegHit,allocator<TSegHit> >*) G__getstructoffset())->insert(*((vector<TSegHit,allocator<TSegHit> >::iterator*) G__int(libp->para[0])), *((vector<TSegHit,allocator<TSegHit> >::const_iterator*) G__int(libp->para[1]))
, *((vector<TSegHit,allocator<TSegHit> >::const_iterator*) G__int(libp->para[2])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TGretinaDict_243_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<TSegHit,allocator<TSegHit> >*) G__getstructoffset())->insert(*((vector<TSegHit,allocator<TSegHit> >::iterator*) G__int(libp->para[0])), (vector<TSegHit,allocator<TSegHit> >::size_type) G__int(libp->para[1])
, *(TSegHit*) libp->para[2].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TGretinaDict_243_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<TSegHit,allocator<TSegHit> >*) G__getstructoffset())->pop_back();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TGretinaDict_243_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<TSegHit,allocator<TSegHit> >*) G__getstructoffset())->erase(*((vector<TSegHit,allocator<TSegHit> >::iterator*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TGretinaDict_243_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<TSegHit,allocator<TSegHit> >*) G__getstructoffset())->erase(*((vector<TSegHit,allocator<TSegHit> >::iterator*) G__int(libp->para[0])), *((vector<TSegHit,allocator<TSegHit> >::iterator*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TGretinaDict_243_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<TSegHit,allocator<TSegHit> >*) G__getstructoffset())->clear();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef vector<TSegHit,allocator<TSegHit> > G__TvectorlETSegHitcOallocatorlETSegHitgRsPgR;
static int G__TGretinaDict_243_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (vector<TSegHit,allocator<TSegHit> >*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((vector<TSegHit,allocator<TSegHit> >*) (soff+(sizeof(vector<TSegHit,allocator<TSegHit> >)*i)))->~G__TvectorlETSegHitcOallocatorlETSegHitgRsPgR();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (vector<TSegHit,allocator<TSegHit> >*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((vector<TSegHit,allocator<TSegHit> >*) (soff))->~G__TvectorlETSegHitcOallocatorlETSegHitgRsPgR();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* Setting up global function */

/*********************************************************
* Member function Stub
*********************************************************/

/* TSegHit */

/* TGretina */

/* vector<TSegHit,allocator<TSegHit> > */

/*********************************************************
* Global function Stub
*********************************************************/

/*********************************************************
* Get size of pointer to member function
*********************************************************/
class G__Sizep2memfuncTGretinaDict {
 public:
  G__Sizep2memfuncTGretinaDict(): p(&G__Sizep2memfuncTGretinaDict::sizep2memfunc) {}
    size_t sizep2memfunc() { return(sizeof(p)); }
  private:
    size_t (G__Sizep2memfuncTGretinaDict::*p)();
};

size_t G__get_sizep2memfuncTGretinaDict()
{
  G__Sizep2memfuncTGretinaDict a;
  G__setsizep2memfunc((int)a.sizep2memfunc());
  return((size_t)a.sizep2memfunc());
}


/*********************************************************
* virtual base class offset calculation interface
*********************************************************/

   /* Setting up class inheritance */

/*********************************************************
* Inheritance information setup/
*********************************************************/
extern "C" void G__cpp_setup_inheritanceTGretinaDict() {

   /* Setting up class inheritance */
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__TGretinaDictLN_TSegHit))) {
     TSegHit *G__Lderived;
     G__Lderived=(TSegHit*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__TGretinaDictLN_TSegHit),G__get_linked_tagnum(&G__TGretinaDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__TGretinaDictLN_TGretina))) {
     TGretina *G__Lderived;
     G__Lderived=(TGretina*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__TGretinaDictLN_TGretina),G__get_linked_tagnum(&G__TGretinaDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
}

/*********************************************************
* typedef information setup/
*********************************************************/
extern "C" void G__cpp_setup_typetableTGretinaDict() {

   /* Setting up typedef entry */
   G__search_typename2("Int_t",105,-1,0,-1);
   G__setnewtype(-1,"Signed integer 4 bytes (int)",0);
   G__search_typename2("Long_t",108,-1,0,-1);
   G__setnewtype(-1,"Signed long integer 8 bytes (long)",0);
   G__search_typename2("Float_t",102,-1,0,-1);
   G__setnewtype(-1,"Float 4 bytes (float)",0);
   G__search_typename2("Version_t",115,-1,0,-1);
   G__setnewtype(-1,"Class version identifier (short)",0);
   G__search_typename2("Option_t",99,-1,256,-1);
   G__setnewtype(-1,"Option string (const char)",0);
   G__search_typename2("vector<ROOT::TSchemaHelper>",117,G__get_linked_tagnum(&G__TGretinaDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__TGretinaDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__TGretinaDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__TGretinaDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__TGretinaDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<TVirtualArray*>",117,G__get_linked_tagnum(&G__TGretinaDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__TGretinaDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__TGretinaDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__TGretinaDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__TGretinaDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<G2Segment>",117,G__get_linked_tagnum(&G__TGretinaDictLN_vectorlEG2SegmentcOallocatorlEG2SegmentgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__TGretinaDictLN_reverse_iteratorlEvectorlEG2SegmentcOallocatorlEG2SegmentgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__TGretinaDictLN_vectorlEG2SegmentcOallocatorlEG2SegmentgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__TGretinaDictLN_reverse_iteratorlEvectorlEG2SegmentcOallocatorlEG2SegmentgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__TGretinaDictLN_vectorlEG2SegmentcOallocatorlEG2SegmentgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTBase<Float_t>",117,G__get_linked_tagnum(&G__TGretinaDictLN_TMatrixTBaselEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTBase<Double_t>",117,G__get_linked_tagnum(&G__TGretinaDictLN_TMatrixTBaselEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TVectorT<Float_t>",117,G__get_linked_tagnum(&G__TGretinaDictLN_TVectorTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TVectorT<Double_t>",117,G__get_linked_tagnum(&G__TGretinaDictLN_TVectorTlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixT<Float_t>",117,G__get_linked_tagnum(&G__TGretinaDictLN_TMatrixTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTRow_const<Float_t>",117,G__get_linked_tagnum(&G__TGretinaDictLN_TMatrixTRow_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTColumn_const<Float_t>",117,G__get_linked_tagnum(&G__TGretinaDictLN_TMatrixTColumn_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTDiag_const<Float_t>",117,G__get_linked_tagnum(&G__TGretinaDictLN_TMatrixTDiag_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTFlat_const<Float_t>",117,G__get_linked_tagnum(&G__TGretinaDictLN_TMatrixTFlat_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSub_const<Float_t>",117,G__get_linked_tagnum(&G__TGretinaDictLN_TMatrixTSub_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseRow_const<Float_t>",117,G__get_linked_tagnum(&G__TGretinaDictLN_TMatrixTSparseRow_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseDiag_const<Float_t>",117,G__get_linked_tagnum(&G__TGretinaDictLN_TMatrixTSparseDiag_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTRow<Float_t>",117,G__get_linked_tagnum(&G__TGretinaDictLN_TMatrixTRowlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTColumn<Float_t>",117,G__get_linked_tagnum(&G__TGretinaDictLN_TMatrixTColumnlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTDiag<Float_t>",117,G__get_linked_tagnum(&G__TGretinaDictLN_TMatrixTDiaglEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTFlat<Float_t>",117,G__get_linked_tagnum(&G__TGretinaDictLN_TMatrixTFlatlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSub<Float_t>",117,G__get_linked_tagnum(&G__TGretinaDictLN_TMatrixTSublEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseRow<Float_t>",117,G__get_linked_tagnum(&G__TGretinaDictLN_TMatrixTSparseRowlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseDiag<Float_t>",117,G__get_linked_tagnum(&G__TGretinaDictLN_TMatrixTSparseDiaglEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TElementActionT<Float_t>",117,G__get_linked_tagnum(&G__TGretinaDictLN_TElementActionTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TElementPosActionT<Float_t>",117,G__get_linked_tagnum(&G__TGretinaDictLN_TElementPosActionTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<TVector3>",117,G__get_linked_tagnum(&G__TGretinaDictLN_vectorlETVector3cOallocatorlETVector3gRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__TGretinaDictLN_reverse_iteratorlEvectorlETVector3cOallocatorlETVector3gRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__TGretinaDictLN_vectorlETVector3cOallocatorlETVector3gRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__TGretinaDictLN_reverse_iteratorlEvectorlETVector3cOallocatorlETVector3gRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__TGretinaDictLN_vectorlETVector3cOallocatorlETVector3gRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<Float_t>",117,G__get_linked_tagnum(&G__TGretinaDictLN_vectorlEfloatcOallocatorlEfloatgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<Int_t>",117,G__get_linked_tagnum(&G__TGretinaDictLN_vectorlEintcOallocatorlEintgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__TGretinaDictLN_reverse_iteratorlEvectorlEintcOallocatorlEintgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__TGretinaDictLN_vectorlEintcOallocatorlEintgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__TGretinaDictLN_reverse_iteratorlEvectorlEintcOallocatorlEintgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__TGretinaDictLN_vectorlEintcOallocatorlEintgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<int>",117,G__get_linked_tagnum(&G__TGretinaDictLN_vectorlEintcOallocatorlEintgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<Long_t>",117,G__get_linked_tagnum(&G__TGretinaDictLN_vectorlElongcOallocatorlElonggRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<TSegHit>",117,G__get_linked_tagnum(&G__TGretinaDictLN_vectorlETSegHitcOallocatorlETSegHitgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("value_type",117,G__get_linked_tagnum(&G__TGretinaDictLN_TSegHit),0,G__get_linked_tagnum(&G__TGretinaDictLN_vectorlETSegHitcOallocatorlETSegHitgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("pointer",85,G__get_linked_tagnum(&G__TGretinaDictLN_TSegHit),0,G__get_linked_tagnum(&G__TGretinaDictLN_vectorlETSegHitcOallocatorlETSegHitgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_pointer",85,G__get_linked_tagnum(&G__TGretinaDictLN_TSegHit),256,G__get_linked_tagnum(&G__TGretinaDictLN_vectorlETSegHitcOallocatorlETSegHitgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reference",117,G__get_linked_tagnum(&G__TGretinaDictLN_TSegHit),1,G__get_linked_tagnum(&G__TGretinaDictLN_vectorlETSegHitcOallocatorlETSegHitgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_reference",117,G__get_linked_tagnum(&G__TGretinaDictLN_TSegHit),257,G__get_linked_tagnum(&G__TGretinaDictLN_vectorlETSegHitcOallocatorlETSegHitgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("size_type",107,-1,0,G__get_linked_tagnum(&G__TGretinaDictLN_vectorlETSegHitcOallocatorlETSegHitgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("difference_type",108,-1,0,G__get_linked_tagnum(&G__TGretinaDictLN_vectorlETSegHitcOallocatorlETSegHitgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_iterator",117,G__get_linked_tagnum(&G__TGretinaDictLN_vectorlETSegHitcOallocatorlETSegHitgRsPgRcLcLiterator),256,G__get_linked_tagnum(&G__TGretinaDictLN_vectorlETSegHitcOallocatorlETSegHitgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__TGretinaDictLN_reverse_iteratorlEvectorlETSegHitcOallocatorlETSegHitgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__TGretinaDictLN_vectorlETSegHitcOallocatorlETSegHitgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_reverse_iterator",117,G__get_linked_tagnum(&G__TGretinaDictLN_reverse_iteratorlEvectorlETSegHitcOallocatorlETSegHitgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__TGretinaDictLN_vectorlETSegHitcOallocatorlETSegHitgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__TGretinaDictLN_reverse_iteratorlEvectorlETSegHitcOallocatorlETSegHitgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__TGretinaDictLN_vectorlETSegHitcOallocatorlETSegHitgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator",117,G__get_linked_tagnum(&G__TGretinaDictLN_reverse_iteratorlEvectorlETSegHitcOallocatorlETSegHitgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__TGretinaDictLN_vectorlETSegHitcOallocatorlETSegHitgRsPgR));
   G__setnewtype(-1,NULL,0);
}

/*********************************************************
* Data Member information setup/
*********************************************************/

   /* Setting up class,struct,union tag member variable */

   /* TSegHit */
static void G__setup_memvarTSegHit(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__TGretinaDictLN_TSegHit));
   { TSegHit *p; p=(TSegHit*)0x1000; if (p) { }
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__TGretinaDictLN_vectorlETVector3cOallocatorlETVector3gRsPgR),G__defined_typename("vector<TVector3>"),-1,4,"fSegPosition=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__TGretinaDictLN_vectorlEfloatcOallocatorlEfloatgRsPgR),G__defined_typename("vector<Float_t>"),-1,4,"fSegEnergy=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__TGretinaDictLN_vectorlEintcOallocatorlEintgRsPgR),G__defined_typename("vector<Int_t>"),-1,4,"fSegNumber=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__TGretinaDictLN_vectorlEfloatcOallocatorlEfloatgRsPgR),G__defined_typename("vector<Float_t>"),-1,4,"fSegSegEnergy=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__TGretinaDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TGretina */
static void G__setup_memvarTGretina(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__TGretinaDictLN_TGretina));
   { TGretina *p; p=(TGretina*)0x1000; if (p) { }
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__TGretinaDictLN_vectorlEintcOallocatorlEintgRsPgR),G__defined_typename("vector<Int_t>"),-1,4,"fCrystalId=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__TGretinaDictLN_vectorlEfloatcOallocatorlEfloatgRsPgR),G__defined_typename("vector<Float_t>"),-1,4,"fTotalE=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__TGretinaDictLN_vectorlEintcOallocatorlEintgRsPgR),G__defined_typename("vector<Int_t>"),-1,4,"fCoreCharge=",0,"[4];");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__TGretinaDictLN_vectorlElongcOallocatorlElonggRsPgR),G__defined_typename("vector<Long_t>"),-1,4,"fTimeStamp=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__TGretinaDictLN_vectorlElongcOallocatorlElonggRsPgR),G__defined_typename("vector<Long_t>"),-1,4,"fLed=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__TGretinaDictLN_vectorlEfloatcOallocatorlEfloatgRsPgR),G__defined_typename("vector<Float_t>"),-1,4,"fTZero=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__TGretinaDictLN_vectorlETVector3cOallocatorlETVector3gRsPgR),G__defined_typename("vector<TVector3>"),-1,4,"fPosition=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__TGretinaDictLN_vectorlETSegHitcOallocatorlETSegHitgRsPgR),G__defined_typename("vector<TSegHit>"),-1,4,"fSegments=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__TGretinaDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* vector<TSegHit,allocator<TSegHit> > */
static void G__setup_memvarvectorlETSegHitcOallocatorlETSegHitgRsPgR(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__TGretinaDictLN_vectorlETSegHitcOallocatorlETSegHitgRsPgR));
   { vector<TSegHit,allocator<TSegHit> > *p; p=(vector<TSegHit,allocator<TSegHit> >*)0x1000; if (p) { }
   }
   G__tag_memvar_reset();
}

extern "C" void G__cpp_setup_memvarTGretinaDict() {
}
/***********************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
***********************************************************/

/*********************************************************
* Member function information setup for each class
*********************************************************/
static void G__setup_memfuncTSegHit(void) {
   /* TSegHit */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__TGretinaDictLN_TSegHit));
   G__memfunc_setup("TSegHit",664,G__TGretinaDict_232_0_1, 105, G__get_linked_tagnum(&G__TGretinaDictLN_TSegHit), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Clear",487,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "C - 'Option_t' 10 '\"\"' opt", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Print",525,G__TGretinaDict_232_0_3, 121, -1, -1, 0, 1, 1, 1, 0, "C - 'Option_t' 10 '\"\"' opt", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetHit",593,G__TGretinaDict_232_0_4, 121, -1, -1, 0, 1, 1, 1, 0, "u 'G2Segment' - 1 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Size",411,G__TGretinaDict_232_0_5, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetSegPosition",1428,G__TGretinaDict_232_0_6, 117, G__get_linked_tagnum(&G__TGretinaDictLN_TVector3), -1, 0, 1, 1, 1, 0, "i - - 11 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetSegEnergy",1193,G__TGretinaDict_232_0_7, 102, -1, G__defined_typename("Float_t"), 0, 1, 1, 1, 0, "i - - 11 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetSegNumber",1192,G__TGretinaDict_232_0_8, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 0, "i - - 11 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetSegSegEnergy",1480,G__TGretinaDict_232_0_9, 102, -1, G__defined_typename("Float_t"), 0, 1, 1, 1, 0, "i - - 11 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__TGretinaDict_232_0_10, 85, G__get_linked_tagnum(&G__TGretinaDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TSegHit::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__TGretinaDict_232_0_11, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TSegHit::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__TGretinaDict_232_0_12, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TSegHit::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__TGretinaDict_232_0_13, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TSegHit::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__TGretinaDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__TGretinaDict_232_0_17, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__TGretinaDict_232_0_18, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TSegHit::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__TGretinaDict_232_0_19, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TSegHit::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__TGretinaDict_232_0_20, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TSegHit::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__TGretinaDict_232_0_21, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TSegHit::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("TSegHit", 664, G__TGretinaDict_232_0_22, (int) ('i'), G__get_linked_tagnum(&G__TGretinaDictLN_TSegHit), -1, 0, 1, 1, 1, 0, "u 'TSegHit' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~TSegHit", 790, G__TGretinaDict_232_0_23, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__TGretinaDict_232_0_24, (int) ('u'), G__get_linked_tagnum(&G__TGretinaDictLN_TSegHit), -1, 1, 1, 1, 1, 0, "u 'TSegHit' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTGretina(void) {
   /* TGretina */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__TGretinaDictLN_TGretina));
   G__memfunc_setup("TGretina",798,G__TGretinaDict_241_0_1, 105, G__get_linked_tagnum(&G__TGretinaDictLN_TGretina), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AddGretinaHit",1272,G__TGretinaDict_241_0_2, 121, -1, -1, 0, 1, 1, 1, 0, "u 'G2Fragment' - 1 - frag", "{ GretinaHits.push_back(frag); }", (void*) NULL, 0);
   G__memfunc_setup("Print",525,G__TGretinaDict_241_0_3, 121, -1, -1, 0, 1, 1, 1, 0, "C - 'Option_t' 10 '\"\"' opt", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Clear",487,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "C - 'Option_t' 10 '\"\"' opt", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetID",441,G__TGretinaDict_241_0_5, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 11 - id", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetEnergy",918,G__TGretinaDict_241_0_6, 121, -1, -1, 0, 1, 1, 1, 0, "f - 'Float_t' 11 - eng", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetLed",577,G__TGretinaDict_241_0_7, 121, -1, -1, 0, 1, 1, 1, 0, "f - 'Float_t' 11 - led", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetCharge",886,G__TGretinaDict_241_0_8, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 11 - chg", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetTimeStamp",1216,G__TGretinaDict_241_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "l - 'Long_t' 11 - tim", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetTZero",800,G__TGretinaDict_241_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "f - 'Float_t' 11 - wak", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetPosition",1153,G__TGretinaDict_241_0_11, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TVector3' - 1 - pos", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetID",429,G__TGretinaDict_241_0_12, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 0, "i - - 11 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetEnergy",906,G__TGretinaDict_241_0_13, 102, -1, G__defined_typename("Float_t"), 0, 1, 1, 1, 0, "i - - 11 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetLed",565,G__TGretinaDict_241_0_14, 102, -1, G__defined_typename("Float_t"), 0, 1, 1, 1, 0, "i - - 11 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetCharge",874,G__TGretinaDict_241_0_15, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 0, "i - - 11 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTimeStamp",1204,G__TGretinaDict_241_0_16, 108, -1, G__defined_typename("Long_t"), 0, 1, 1, 1, 0, "i - - 11 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTZero",788,G__TGretinaDict_241_0_17, 102, -1, G__defined_typename("Float_t"), 0, 1, 1, 1, 0, "i - - 11 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetPosition",1141,G__TGretinaDict_241_0_18, 117, G__get_linked_tagnum(&G__TGretinaDictLN_TVector3), -1, 0, 1, 1, 1, 0, "i - - 11 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetSegment",1011,G__TGretinaDict_241_0_19, 85, G__get_linked_tagnum(&G__TGretinaDictLN_TSegHit), -1, 0, 1, 1, 1, 0, "i - - 11 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Size",411,G__TGretinaDict_241_0_20, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SegSize",698,G__TGretinaDict_241_0_21, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 0, "i - - 11 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FindPosition",1238,G__TGretinaDict_241_0_22, 117, G__get_linked_tagnum(&G__TGretinaDictLN_TVector3), -1, 0, 4, 3, 1, 0, 
"i - - 0 - cryId f - 'Float_t' 0 '0' localX "
"f - 'Float_t' 0 '0' localY f - 'Float_t' 0 '0' localZ", (char*)NULL, (void*) G__func2void( (TVector3 (*)(int, Float_t, Float_t, Float_t))(&TGretina::FindPosition) ), 0);
   G__memfunc_setup("Class",502,G__TGretinaDict_241_0_23, 85, G__get_linked_tagnum(&G__TGretinaDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TGretina::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__TGretinaDict_241_0_24, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TGretina::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__TGretinaDict_241_0_25, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TGretina::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__TGretinaDict_241_0_26, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TGretina::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__TGretinaDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__TGretinaDict_241_0_30, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__TGretinaDict_241_0_31, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TGretina::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__TGretinaDict_241_0_32, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TGretina::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__TGretinaDict_241_0_33, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TGretina::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__TGretinaDict_241_0_34, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TGretina::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("TGretina", 798, G__TGretinaDict_241_0_35, (int) ('i'), G__get_linked_tagnum(&G__TGretinaDictLN_TGretina), -1, 0, 1, 1, 1, 0, "u 'TGretina' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~TGretina", 924, G__TGretinaDict_241_0_36, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__TGretinaDict_241_0_37, (int) ('u'), G__get_linked_tagnum(&G__TGretinaDictLN_TGretina), -1, 1, 1, 1, 1, 0, "u 'TGretina' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncvectorlETSegHitcOallocatorlETSegHitgRsPgR(void) {
   /* vector<TSegHit,allocator<TSegHit> > */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__TGretinaDictLN_vectorlETSegHitcOallocatorlETSegHitgRsPgR));
   G__memfunc_setup("at",213,G__TGretinaDict_243_0_1, 117, G__get_linked_tagnum(&G__TGretinaDictLN_TSegHit), G__defined_typename("vector<TSegHit,allocator<TSegHit> >::reference"), 1, 1, 1, 1, 0, "k - 'vector<TSegHit,allocator<TSegHit> >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("at",213,G__TGretinaDict_243_0_2, 117, G__get_linked_tagnum(&G__TGretinaDictLN_TSegHit), G__defined_typename("vector<TSegHit,allocator<TSegHit> >::const_reference"), 1, 1, 1, 1, 8, "k - 'vector<TSegHit,allocator<TSegHit> >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("begin",517,G__TGretinaDict_243_0_3, 117, G__get_linked_tagnum(&G__TGretinaDictLN_vectorlETSegHitcOallocatorlETSegHitgRsPgRcLcLiterator), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("end",311,G__TGretinaDict_243_0_4, 117, G__get_linked_tagnum(&G__TGretinaDictLN_vectorlETSegHitcOallocatorlETSegHitgRsPgRcLcLiterator), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("rbegin",631,G__TGretinaDict_243_0_5, 117, G__get_linked_tagnum(&G__TGretinaDictLN_reverse_iteratorlEvectorlETSegHitcOallocatorlETSegHitgRsPgRcLcLiteratorgR), G__defined_typename("vector<TSegHit,allocator<TSegHit> >::reverse_iterator"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("rend",425,G__TGretinaDict_243_0_6, 117, G__get_linked_tagnum(&G__TGretinaDictLN_reverse_iteratorlEvectorlETSegHitcOallocatorlETSegHitgRsPgRcLcLiteratorgR), G__defined_typename("vector<TSegHit,allocator<TSegHit> >::reverse_iterator"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("size",443,G__TGretinaDict_243_0_7, 107, -1, G__defined_typename("vector<TSegHit,allocator<TSegHit> >::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("max_size",864,G__TGretinaDict_243_0_8, 107, -1, G__defined_typename("vector<TSegHit,allocator<TSegHit> >::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("resize",658,G__TGretinaDict_243_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "k - 'vector<TSegHit,allocator<TSegHit> >::size_type' 0 - sz", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("resize",658,G__TGretinaDict_243_0_10, 121, -1, -1, 0, 2, 1, 1, 0, 
"k - 'vector<TSegHit,allocator<TSegHit> >::size_type' 0 - sz u 'TSegHit' - 0 - c", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("capacity",846,G__TGretinaDict_243_0_11, 107, -1, G__defined_typename("vector<TSegHit,allocator<TSegHit> >::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("empty",559,G__TGretinaDict_243_0_12, 103, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__TGretinaDict_243_0_13, 117, G__get_linked_tagnum(&G__TGretinaDictLN_TSegHit), G__defined_typename("vector<TSegHit,allocator<TSegHit> >::reference"), 1, 1, 1, 1, 0, "k - 'vector<TSegHit,allocator<TSegHit> >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__TGretinaDict_243_0_14, 117, G__get_linked_tagnum(&G__TGretinaDictLN_TSegHit), G__defined_typename("vector<TSegHit,allocator<TSegHit> >::const_reference"), 1, 1, 1, 1, 8, "k - 'vector<TSegHit,allocator<TSegHit> >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<TSegHit,allocator<TSegHit> >",3268,G__TGretinaDict_243_0_15, 105, G__get_linked_tagnum(&G__TGretinaDictLN_vectorlETSegHitcOallocatorlETSegHitgRsPgR), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<TSegHit,allocator<TSegHit> >",3268,G__TGretinaDict_243_0_16, 105, G__get_linked_tagnum(&G__TGretinaDictLN_vectorlETSegHitcOallocatorlETSegHitgRsPgR), -1, 0, 2, 1, 1, 0, 
"k - 'vector<TSegHit,allocator<TSegHit> >::size_type' 0 - n u 'TSegHit' - 11 'TSegHit()' value", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<TSegHit,allocator<TSegHit> >",3268,G__TGretinaDict_243_0_17, 105, G__get_linked_tagnum(&G__TGretinaDictLN_vectorlETSegHitcOallocatorlETSegHitgRsPgR), -1, 0, 1, 1, 1, 0, "u 'vector<TSegHit,allocator<TSegHit> >' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<TSegHit,allocator<TSegHit> >",3268,G__TGretinaDict_243_0_18, 105, G__get_linked_tagnum(&G__TGretinaDictLN_vectorlETSegHitcOallocatorlETSegHitgRsPgR), -1, 0, 2, 1, 1, 0, 
"u 'vector<TSegHit,allocator<TSegHit> >::iterator' 'vector<TSegHit,allocator<TSegHit> >::const_iterator' 10 - first u 'vector<TSegHit,allocator<TSegHit> >::iterator' 'vector<TSegHit,allocator<TSegHit> >::const_iterator' 10 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,G__TGretinaDict_243_0_19, 117, G__get_linked_tagnum(&G__TGretinaDictLN_vectorlETSegHitcOallocatorlETSegHitgRsPgR), -1, 1, 1, 1, 1, 0, "u 'vector<TSegHit,allocator<TSegHit> >' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("reserve",764,G__TGretinaDict_243_0_20, 121, -1, -1, 0, 1, 1, 1, 0, "k - 'vector<TSegHit,allocator<TSegHit> >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("front",553,G__TGretinaDict_243_0_21, 117, G__get_linked_tagnum(&G__TGretinaDictLN_TSegHit), -1, 1, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("back",401,G__TGretinaDict_243_0_22, 117, G__get_linked_tagnum(&G__TGretinaDictLN_TSegHit), -1, 1, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("push_back",944,G__TGretinaDict_243_0_23, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TSegHit' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("swap",443,G__TGretinaDict_243_0_24, 121, -1, -1, 0, 1, 1, 1, 0, "u 'vector<TSegHit,allocator<TSegHit> >' - 1 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__TGretinaDict_243_0_25, 117, G__get_linked_tagnum(&G__TGretinaDictLN_vectorlETSegHitcOallocatorlETSegHitgRsPgRcLcLiterator), -1, 0, 2, 1, 1, 0, 
"u 'vector<TSegHit,allocator<TSegHit> >::iterator' - 0 - position u 'TSegHit' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__TGretinaDict_243_0_26, 121, -1, -1, 0, 3, 1, 1, 0, 
"u 'vector<TSegHit,allocator<TSegHit> >::iterator' - 0 - position u 'vector<TSegHit,allocator<TSegHit> >::iterator' 'vector<TSegHit,allocator<TSegHit> >::const_iterator' 10 - first "
"u 'vector<TSegHit,allocator<TSegHit> >::iterator' 'vector<TSegHit,allocator<TSegHit> >::const_iterator' 10 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__TGretinaDict_243_0_27, 121, -1, -1, 0, 3, 1, 1, 0, 
"u 'vector<TSegHit,allocator<TSegHit> >::iterator' - 0 - position k - 'vector<TSegHit,allocator<TSegHit> >::size_type' 0 - n "
"u 'TSegHit' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("pop_back",831,G__TGretinaDict_243_0_28, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("erase",528,G__TGretinaDict_243_0_29, 121, -1, -1, 0, 1, 1, 1, 0, "u 'vector<TSegHit,allocator<TSegHit> >::iterator' - 0 - position", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("erase",528,G__TGretinaDict_243_0_30, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'vector<TSegHit,allocator<TSegHit> >::iterator' - 0 - first u 'vector<TSegHit,allocator<TSegHit> >::iterator' - 0 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("clear",519,G__TGretinaDict_243_0_31, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~vector<TSegHit,allocator<TSegHit> >", 3394, G__TGretinaDict_243_0_32, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}


/*********************************************************
* Member function information setup
*********************************************************/
extern "C" void G__cpp_setup_memfuncTGretinaDict() {
}

/*********************************************************
* Global variable information setup for each class
*********************************************************/
static void G__cpp_setup_global0() {

   /* Setting up global variables */
   G__resetplocal();

}

static void G__cpp_setup_global1() {

   G__resetglobalenv();
}
extern "C" void G__cpp_setup_globalTGretinaDict() {
  G__cpp_setup_global0();
  G__cpp_setup_global1();
}

/*********************************************************
* Global function information setup for each class
*********************************************************/
static void G__cpp_setup_func0() {
   G__lastifuncposition();

}

static void G__cpp_setup_func1() {
}

static void G__cpp_setup_func2() {
}

static void G__cpp_setup_func3() {
}

static void G__cpp_setup_func4() {
}

static void G__cpp_setup_func5() {
}

static void G__cpp_setup_func6() {
}

static void G__cpp_setup_func7() {
}

static void G__cpp_setup_func8() {
}

static void G__cpp_setup_func9() {
}

static void G__cpp_setup_func10() {
}

static void G__cpp_setup_func11() {
}

static void G__cpp_setup_func12() {
}

static void G__cpp_setup_func13() {
}

static void G__cpp_setup_func14() {
}

static void G__cpp_setup_func15() {
}

static void G__cpp_setup_func16() {

   G__resetifuncposition();
}

extern "C" void G__cpp_setup_funcTGretinaDict() {
  G__cpp_setup_func0();
  G__cpp_setup_func1();
  G__cpp_setup_func2();
  G__cpp_setup_func3();
  G__cpp_setup_func4();
  G__cpp_setup_func5();
  G__cpp_setup_func6();
  G__cpp_setup_func7();
  G__cpp_setup_func8();
  G__cpp_setup_func9();
  G__cpp_setup_func10();
  G__cpp_setup_func11();
  G__cpp_setup_func12();
  G__cpp_setup_func13();
  G__cpp_setup_func14();
  G__cpp_setup_func15();
  G__cpp_setup_func16();
}

/*********************************************************
* Class,struct,union,enum tag information setup
*********************************************************/
/* Setup class/struct taginfo */
G__linked_taginfo G__TGretinaDictLN_TClass = { "TClass" , 99 , -1 };
G__linked_taginfo G__TGretinaDictLN_TBuffer = { "TBuffer" , 99 , -1 };
G__linked_taginfo G__TGretinaDictLN_TMemberInspector = { "TMemberInspector" , 99 , -1 };
G__linked_taginfo G__TGretinaDictLN_TObject = { "TObject" , 99 , -1 };
G__linked_taginfo G__TGretinaDictLN_vectorlElongcOallocatorlElonggRsPgR = { "vector<long,allocator<long> >" , 99 , -1 };
G__linked_taginfo G__TGretinaDictLN_vectorlEfloatcOallocatorlEfloatgRsPgR = { "vector<float,allocator<float> >" , 99 , -1 };
G__linked_taginfo G__TGretinaDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR = { "vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >" , 99 , -1 };
G__linked_taginfo G__TGretinaDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR = { "reverse_iterator<vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >::iterator>" , 99 , -1 };
G__linked_taginfo G__TGretinaDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR = { "vector<TVirtualArray*,allocator<TVirtualArray*> >" , 99 , -1 };
G__linked_taginfo G__TGretinaDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<TVirtualArray*,allocator<TVirtualArray*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__TGretinaDictLN_G2Segment = { "G2Segment" , 99 , -1 };
G__linked_taginfo G__TGretinaDictLN_G2Fragment = { "G2Fragment" , 99 , -1 };
G__linked_taginfo G__TGretinaDictLN_vectorlEG2SegmentcOallocatorlEG2SegmentgRsPgR = { "vector<G2Segment,allocator<G2Segment> >" , 99 , -1 };
G__linked_taginfo G__TGretinaDictLN_reverse_iteratorlEvectorlEG2SegmentcOallocatorlEG2SegmentgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<G2Segment,allocator<G2Segment> >::iterator>" , 99 , -1 };
G__linked_taginfo G__TGretinaDictLN_TMatrixTBaselEfloatgR = { "TMatrixTBase<float>" , 99 , -1 };
G__linked_taginfo G__TGretinaDictLN_TMatrixTBaselEdoublegR = { "TMatrixTBase<double>" , 99 , -1 };
G__linked_taginfo G__TGretinaDictLN_TVectorTlEfloatgR = { "TVectorT<float>" , 99 , -1 };
G__linked_taginfo G__TGretinaDictLN_TVectorTlEdoublegR = { "TVectorT<double>" , 99 , -1 };
G__linked_taginfo G__TGretinaDictLN_TElementActionTlEfloatgR = { "TElementActionT<float>" , 99 , -1 };
G__linked_taginfo G__TGretinaDictLN_TElementPosActionTlEfloatgR = { "TElementPosActionT<float>" , 99 , -1 };
G__linked_taginfo G__TGretinaDictLN_TMatrixTlEfloatgR = { "TMatrixT<float>" , 99 , -1 };
G__linked_taginfo G__TGretinaDictLN_TMatrixTRow_constlEfloatgR = { "TMatrixTRow_const<float>" , 99 , -1 };
G__linked_taginfo G__TGretinaDictLN_TMatrixTRowlEfloatgR = { "TMatrixTRow<float>" , 99 , -1 };
G__linked_taginfo G__TGretinaDictLN_TMatrixTDiag_constlEfloatgR = { "TMatrixTDiag_const<float>" , 99 , -1 };
G__linked_taginfo G__TGretinaDictLN_TMatrixTColumn_constlEfloatgR = { "TMatrixTColumn_const<float>" , 99 , -1 };
G__linked_taginfo G__TGretinaDictLN_TMatrixTFlat_constlEfloatgR = { "TMatrixTFlat_const<float>" , 99 , -1 };
G__linked_taginfo G__TGretinaDictLN_TMatrixTSub_constlEfloatgR = { "TMatrixTSub_const<float>" , 99 , -1 };
G__linked_taginfo G__TGretinaDictLN_TMatrixTSparseRow_constlEfloatgR = { "TMatrixTSparseRow_const<float>" , 99 , -1 };
G__linked_taginfo G__TGretinaDictLN_TMatrixTSparseDiag_constlEfloatgR = { "TMatrixTSparseDiag_const<float>" , 99 , -1 };
G__linked_taginfo G__TGretinaDictLN_TMatrixTColumnlEfloatgR = { "TMatrixTColumn<float>" , 99 , -1 };
G__linked_taginfo G__TGretinaDictLN_TMatrixTDiaglEfloatgR = { "TMatrixTDiag<float>" , 99 , -1 };
G__linked_taginfo G__TGretinaDictLN_TMatrixTFlatlEfloatgR = { "TMatrixTFlat<float>" , 99 , -1 };
G__linked_taginfo G__TGretinaDictLN_TMatrixTSublEfloatgR = { "TMatrixTSub<float>" , 99 , -1 };
G__linked_taginfo G__TGretinaDictLN_TMatrixTSparseRowlEfloatgR = { "TMatrixTSparseRow<float>" , 99 , -1 };
G__linked_taginfo G__TGretinaDictLN_TMatrixTSparseDiaglEfloatgR = { "TMatrixTSparseDiag<float>" , 99 , -1 };
G__linked_taginfo G__TGretinaDictLN_TVector3 = { "TVector3" , 99 , -1 };
G__linked_taginfo G__TGretinaDictLN_TSegHit = { "TSegHit" , 99 , -1 };
G__linked_taginfo G__TGretinaDictLN_vectorlETVector3cOallocatorlETVector3gRsPgR = { "vector<TVector3,allocator<TVector3> >" , 99 , -1 };
G__linked_taginfo G__TGretinaDictLN_reverse_iteratorlEvectorlETVector3cOallocatorlETVector3gRsPgRcLcLiteratorgR = { "reverse_iterator<vector<TVector3,allocator<TVector3> >::iterator>" , 99 , -1 };
G__linked_taginfo G__TGretinaDictLN_vectorlEintcOallocatorlEintgRsPgR = { "vector<int,allocator<int> >" , 99 , -1 };
G__linked_taginfo G__TGretinaDictLN_reverse_iteratorlEvectorlEintcOallocatorlEintgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<int,allocator<int> >::iterator>" , 99 , -1 };
G__linked_taginfo G__TGretinaDictLN_TGretina = { "TGretina" , 99 , -1 };
G__linked_taginfo G__TGretinaDictLN_vectorlETSegHitcOallocatorlETSegHitgRsPgR = { "vector<TSegHit,allocator<TSegHit> >" , 99 , -1 };
G__linked_taginfo G__TGretinaDictLN_vectorlETSegHitcOallocatorlETSegHitgRsPgRcLcLiterator = { "vector<TSegHit,allocator<TSegHit> >::iterator" , 99 , -1 };
G__linked_taginfo G__TGretinaDictLN_reverse_iteratorlEvectorlETSegHitcOallocatorlETSegHitgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<TSegHit,allocator<TSegHit> >::iterator>" , 99 , -1 };

/* Reset class/struct taginfo */
extern "C" void G__cpp_reset_tagtableTGretinaDict() {
  G__TGretinaDictLN_TClass.tagnum = -1 ;
  G__TGretinaDictLN_TBuffer.tagnum = -1 ;
  G__TGretinaDictLN_TMemberInspector.tagnum = -1 ;
  G__TGretinaDictLN_TObject.tagnum = -1 ;
  G__TGretinaDictLN_vectorlElongcOallocatorlElonggRsPgR.tagnum = -1 ;
  G__TGretinaDictLN_vectorlEfloatcOallocatorlEfloatgRsPgR.tagnum = -1 ;
  G__TGretinaDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR.tagnum = -1 ;
  G__TGretinaDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__TGretinaDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR.tagnum = -1 ;
  G__TGretinaDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__TGretinaDictLN_G2Segment.tagnum = -1 ;
  G__TGretinaDictLN_G2Fragment.tagnum = -1 ;
  G__TGretinaDictLN_vectorlEG2SegmentcOallocatorlEG2SegmentgRsPgR.tagnum = -1 ;
  G__TGretinaDictLN_reverse_iteratorlEvectorlEG2SegmentcOallocatorlEG2SegmentgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__TGretinaDictLN_TMatrixTBaselEfloatgR.tagnum = -1 ;
  G__TGretinaDictLN_TMatrixTBaselEdoublegR.tagnum = -1 ;
  G__TGretinaDictLN_TVectorTlEfloatgR.tagnum = -1 ;
  G__TGretinaDictLN_TVectorTlEdoublegR.tagnum = -1 ;
  G__TGretinaDictLN_TElementActionTlEfloatgR.tagnum = -1 ;
  G__TGretinaDictLN_TElementPosActionTlEfloatgR.tagnum = -1 ;
  G__TGretinaDictLN_TMatrixTlEfloatgR.tagnum = -1 ;
  G__TGretinaDictLN_TMatrixTRow_constlEfloatgR.tagnum = -1 ;
  G__TGretinaDictLN_TMatrixTRowlEfloatgR.tagnum = -1 ;
  G__TGretinaDictLN_TMatrixTDiag_constlEfloatgR.tagnum = -1 ;
  G__TGretinaDictLN_TMatrixTColumn_constlEfloatgR.tagnum = -1 ;
  G__TGretinaDictLN_TMatrixTFlat_constlEfloatgR.tagnum = -1 ;
  G__TGretinaDictLN_TMatrixTSub_constlEfloatgR.tagnum = -1 ;
  G__TGretinaDictLN_TMatrixTSparseRow_constlEfloatgR.tagnum = -1 ;
  G__TGretinaDictLN_TMatrixTSparseDiag_constlEfloatgR.tagnum = -1 ;
  G__TGretinaDictLN_TMatrixTColumnlEfloatgR.tagnum = -1 ;
  G__TGretinaDictLN_TMatrixTDiaglEfloatgR.tagnum = -1 ;
  G__TGretinaDictLN_TMatrixTFlatlEfloatgR.tagnum = -1 ;
  G__TGretinaDictLN_TMatrixTSublEfloatgR.tagnum = -1 ;
  G__TGretinaDictLN_TMatrixTSparseRowlEfloatgR.tagnum = -1 ;
  G__TGretinaDictLN_TMatrixTSparseDiaglEfloatgR.tagnum = -1 ;
  G__TGretinaDictLN_TVector3.tagnum = -1 ;
  G__TGretinaDictLN_TSegHit.tagnum = -1 ;
  G__TGretinaDictLN_vectorlETVector3cOallocatorlETVector3gRsPgR.tagnum = -1 ;
  G__TGretinaDictLN_reverse_iteratorlEvectorlETVector3cOallocatorlETVector3gRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__TGretinaDictLN_vectorlEintcOallocatorlEintgRsPgR.tagnum = -1 ;
  G__TGretinaDictLN_reverse_iteratorlEvectorlEintcOallocatorlEintgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__TGretinaDictLN_TGretina.tagnum = -1 ;
  G__TGretinaDictLN_vectorlETSegHitcOallocatorlETSegHitgRsPgR.tagnum = -1 ;
  G__TGretinaDictLN_vectorlETSegHitcOallocatorlETSegHitgRsPgRcLcLiterator.tagnum = -1 ;
  G__TGretinaDictLN_reverse_iteratorlEvectorlETSegHitcOallocatorlETSegHitgRsPgRcLcLiteratorgR.tagnum = -1 ;
}


extern "C" void G__cpp_setup_tagtableTGretinaDict() {

   /* Setting up class,struct,union tag entry */
   G__get_linked_tagnum_fwd(&G__TGretinaDictLN_TClass);
   G__get_linked_tagnum_fwd(&G__TGretinaDictLN_TBuffer);
   G__get_linked_tagnum_fwd(&G__TGretinaDictLN_TMemberInspector);
   G__get_linked_tagnum_fwd(&G__TGretinaDictLN_TObject);
   G__get_linked_tagnum_fwd(&G__TGretinaDictLN_vectorlElongcOallocatorlElonggRsPgR);
   G__get_linked_tagnum_fwd(&G__TGretinaDictLN_vectorlEfloatcOallocatorlEfloatgRsPgR);
   G__get_linked_tagnum_fwd(&G__TGretinaDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR);
   G__get_linked_tagnum_fwd(&G__TGretinaDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__TGretinaDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR);
   G__get_linked_tagnum_fwd(&G__TGretinaDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__TGretinaDictLN_G2Segment);
   G__get_linked_tagnum_fwd(&G__TGretinaDictLN_G2Fragment);
   G__get_linked_tagnum_fwd(&G__TGretinaDictLN_vectorlEG2SegmentcOallocatorlEG2SegmentgRsPgR);
   G__get_linked_tagnum_fwd(&G__TGretinaDictLN_reverse_iteratorlEvectorlEG2SegmentcOallocatorlEG2SegmentgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__TGretinaDictLN_TMatrixTBaselEfloatgR);
   G__get_linked_tagnum_fwd(&G__TGretinaDictLN_TMatrixTBaselEdoublegR);
   G__get_linked_tagnum_fwd(&G__TGretinaDictLN_TVectorTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__TGretinaDictLN_TVectorTlEdoublegR);
   G__get_linked_tagnum_fwd(&G__TGretinaDictLN_TElementActionTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__TGretinaDictLN_TElementPosActionTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__TGretinaDictLN_TMatrixTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__TGretinaDictLN_TMatrixTRow_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__TGretinaDictLN_TMatrixTRowlEfloatgR);
   G__get_linked_tagnum_fwd(&G__TGretinaDictLN_TMatrixTDiag_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__TGretinaDictLN_TMatrixTColumn_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__TGretinaDictLN_TMatrixTFlat_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__TGretinaDictLN_TMatrixTSub_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__TGretinaDictLN_TMatrixTSparseRow_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__TGretinaDictLN_TMatrixTSparseDiag_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__TGretinaDictLN_TMatrixTColumnlEfloatgR);
   G__get_linked_tagnum_fwd(&G__TGretinaDictLN_TMatrixTDiaglEfloatgR);
   G__get_linked_tagnum_fwd(&G__TGretinaDictLN_TMatrixTFlatlEfloatgR);
   G__get_linked_tagnum_fwd(&G__TGretinaDictLN_TMatrixTSublEfloatgR);
   G__get_linked_tagnum_fwd(&G__TGretinaDictLN_TMatrixTSparseRowlEfloatgR);
   G__get_linked_tagnum_fwd(&G__TGretinaDictLN_TMatrixTSparseDiaglEfloatgR);
   G__get_linked_tagnum_fwd(&G__TGretinaDictLN_TVector3);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__TGretinaDictLN_TSegHit),sizeof(TSegHit),-1,292096,(char*)NULL,G__setup_memvarTSegHit,G__setup_memfuncTSegHit);
   G__get_linked_tagnum_fwd(&G__TGretinaDictLN_vectorlETVector3cOallocatorlETVector3gRsPgR);
   G__get_linked_tagnum_fwd(&G__TGretinaDictLN_reverse_iteratorlEvectorlETVector3cOallocatorlETVector3gRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__TGretinaDictLN_vectorlEintcOallocatorlEintgRsPgR);
   G__get_linked_tagnum_fwd(&G__TGretinaDictLN_reverse_iteratorlEvectorlEintcOallocatorlEintgRsPgRcLcLiteratorgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__TGretinaDictLN_TGretina),sizeof(TGretina),-1,292096,(char*)NULL,G__setup_memvarTGretina,G__setup_memfuncTGretina);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__TGretinaDictLN_vectorlETSegHitcOallocatorlETSegHitgRsPgR),sizeof(vector<TSegHit,allocator<TSegHit> >),-1,298752,(char*)NULL,G__setup_memvarvectorlETSegHitcOallocatorlETSegHitgRsPgR,G__setup_memfuncvectorlETSegHitcOallocatorlETSegHitgRsPgR);
   G__get_linked_tagnum_fwd(&G__TGretinaDictLN_vectorlETSegHitcOallocatorlETSegHitgRsPgRcLcLiterator);
   G__get_linked_tagnum_fwd(&G__TGretinaDictLN_reverse_iteratorlEvectorlETSegHitcOallocatorlETSegHitgRsPgRcLcLiteratorgR);
}
extern "C" void G__cpp_setupTGretinaDict(void) {
  G__check_setup_version(30051515,"G__cpp_setupTGretinaDict()");
  G__set_cpp_environmentTGretinaDict();
  G__cpp_setup_tagtableTGretinaDict();

  G__cpp_setup_inheritanceTGretinaDict();

  G__cpp_setup_typetableTGretinaDict();

  G__cpp_setup_memvarTGretinaDict();

  G__cpp_setup_memfuncTGretinaDict();
  G__cpp_setup_globalTGretinaDict();
  G__cpp_setup_funcTGretinaDict();

   if(0==G__getsizep2memfunc()) G__get_sizep2memfuncTGretinaDict();
  return;
}
class G__cpp_setup_initTGretinaDict {
  public:
    G__cpp_setup_initTGretinaDict() { G__add_setup_func("TGretinaDict",(G__incsetup)(&G__cpp_setupTGretinaDict)); G__call_setup_funcs(); }
   ~G__cpp_setup_initTGretinaDict() { G__remove_setup_func("TGretinaDict"); }
};
G__cpp_setup_initTGretinaDict G__cpp_setup_initializerTGretinaDict;

